//Wrapped in an outer function to preserve global this
(function (root) { var amdExports; define([], function () { (function () {

// three.max.js - http://github.com/mrdoob/three.js
'use strict';var THREE=THREE||{REVISION:"52"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};self.Int32Array=self.Int32Array||Array;self.Float32Array=self.Float32Array||Array;String.prototype.startsWith=String.prototype.startsWith||function(a){return this.slice(0,a.length)===a};String.prototype.endsWith=String.prototype.endsWith||function(a){var a=String(a),b=this.lastIndexOf(a);return(-1<b&&b)===this.length-a.length};
String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};
(function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[b[c]+"CancelAnimationFrame"]||window[b[c]+"CancelRequestAnimationFrame"];void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(b){var c=Date.now(),f=Math.max(0,16-(c-a)),g=window.setTimeout(function(){b(c+f)},f);a=c+f;return g});window.cancelAnimationFrame=window.cancelAnimationFrame||
function(a){window.clearTimeout(a)}})();THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;
THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};
THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;
THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};
THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now();this.running=!0};THREE.Clock.prototype.stop=function(){this.getElapsedTime();this.running=!1};THREE.Clock.prototype.getElapsedTime=function(){return this.elapsedTime+=this.getDelta()};THREE.Clock.prototype.getDelta=function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=Date.now(),a=0.0010*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a};
THREE.Color=function(a){void 0!==a&&this.setHex(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);
this.b=Math.sqrt(this.b);return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){var d,e,f;0===c?this.r=this.g=this.b=0:(d=Math.floor(6*a),e=6*a-d,a=c*(1-b),f=c*(1-b*e),b=c*(1-b*(1-e)),0===d?(this.r=c,this.g=b,this.b=a):1===d?(this.r=f,this.g=c,this.b=a):2===d?(this.r=a,this.g=c,this.b=b):3===d?(this.r=a,this.g=f,this.b=c):4===d?(this.r=b,this.g=a,this.b=c):5===d&&(this.r=c,this.g=a,this.b=f));return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&
255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},lerpSelf:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getContextStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a):this.set(0,
0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,
b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},isZero:function(a){return this.lengthSq()<(void 0!==a?a:1E-4)},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},
sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a):
this.z=this.y=this.x=0;return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=
(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,c=this.y,d=this.z;this.x=c*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-c*a.x;return this},angleTo:function(a){return Math.acos(this.dot(a)/this.length()/a.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,
a).lengthSq()},getPositionFromMatrix:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setEulerFromRotationMatrix:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.elements,e=d[0],f=d[4],g=d[8],h=d[1],i=d[5],k=d[9],j=d[2],l=d[6],d=d[10];void 0===b||"XYZ"===b?(this.y=Math.asin(c(g)),0.99999>Math.abs(g)?(this.x=Math.atan2(-k,d),this.z=Math.atan2(-f,e)):(this.x=Math.atan2(l,i),this.z=0)):"YXZ"===b?(this.x=Math.asin(-c(k)),0.99999>Math.abs(k)?
(this.y=Math.atan2(g,d),this.z=Math.atan2(h,i)):(this.y=Math.atan2(-j,e),this.z=0)):"ZXY"===b?(this.x=Math.asin(c(l)),0.99999>Math.abs(l)?(this.y=Math.atan2(-j,d),this.z=Math.atan2(-f,i)):(this.y=0,this.z=Math.atan2(h,e))):"ZYX"===b?(this.y=Math.asin(-c(j)),0.99999>Math.abs(j)?(this.x=Math.atan2(l,d),this.z=Math.atan2(h,e)):(this.x=0,this.z=Math.atan2(-f,i))):"YZX"===b?(this.z=Math.asin(c(h)),0.99999>Math.abs(h)?(this.x=Math.atan2(-k,i),this.y=Math.atan2(-j,e)):(this.x=0,this.y=Math.atan2(g,d))):
"XZY"===b&&(this.z=Math.asin(-c(f)),0.99999>Math.abs(f)?(this.x=Math.atan2(l,i),this.y=Math.atan2(g,e)):(this.x=Math.atan2(-k,d),this.y=0));return this},setEulerFromQuaternion:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.x*a.x,e=a.y*a.y,f=a.z*a.z,g=a.w*a.w;void 0===b||"XYZ"===b?(this.x=Math.atan2(2*(a.x*a.w-a.y*a.z),g-d-e+f),this.y=Math.asin(c(2*(a.x*a.z+a.y*a.w))),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g+d-e-f)):"YXZ"===b?(this.x=Math.asin(c(2*(a.x*a.w-a.y*a.z))),this.y=Math.atan2(2*
(a.x*a.z+a.y*a.w),g-d-e+f),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g-d+e-f)):"ZXY"===b?(this.x=Math.asin(c(2*(a.x*a.w+a.y*a.z))),this.y=Math.atan2(2*(a.y*a.w-a.z*a.x),g-d-e+f),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g-d+e-f)):"ZYX"===b?(this.x=Math.atan2(2*(a.x*a.w+a.z*a.y),g-d-e+f),this.y=Math.asin(c(2*(a.y*a.w-a.x*a.z))),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g+d-e-f)):"YZX"===b?(this.x=Math.atan2(2*(a.x*a.w-a.z*a.y),g-d+e-f),this.y=Math.atan2(2*(a.y*a.w-a.x*a.z),g+d-e-f),this.z=Math.asin(c(2*(a.x*a.y+
a.z*a.w)))):"XZY"===b&&(this.x=Math.atan2(2*(a.x*a.w+a.y*a.z),g-d+e-f),this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),g+d-e-f),this.z=Math.asin(c(2*(a.z*a.w-a.x*a.y))));return this},getScaleFromMatrix:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length(),a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=a;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},
isZero:function(a){return this.lengthSq()<(void 0!==a?a:1E-4)},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=
a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+
Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):
(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d,a=a.elements,e=a[0];d=a[4];var f=a[8],g=a[1],h=a[5],i=a[9];c=a[2];b=a[6];var k=a[10];if(0.01>Math.abs(d-g)&&0.01>Math.abs(f-c)&&0.01>Math.abs(i-b)){if(0.1>Math.abs(d+g)&&0.1>Math.abs(f+c)&&0.1>Math.abs(i+b)&&0.1>Math.abs(e+h+k-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;h=(h+1)/2;k=(k+1)/2;d=(d+g)/4;f=(f+c)/4;i=(i+b)/4;e>h&&e>k?0.01>e?(b=0,d=c=0.707106781):(b=Math.sqrt(e),c=d/b,d=f/
b):h>k?0.01>h?(b=0.707106781,c=0,d=0.707106781):(c=Math.sqrt(h),b=d/c,d=i/c):0.01>k?(c=b=0.707106781,d=0):(d=Math.sqrt(k),b=f/d,c=i/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-i)*(b-i)+(f-c)*(f-c)+(g-d)*(g-d));0.0010>Math.abs(a)&&(a=1);this.x=(b-i)/a;this.y=(f-c)/a;this.z=(g-d)/a;this.w=Math.acos((e+h+k-1)/2);return this}};THREE.Matrix3=function(){this.elements=new Float32Array(9)};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,getInverse:function(a){var b=a.elements,a=b[10]*b[5]-b[6]*b[9],c=-b[10]*b[1]+b[2]*b[9],d=b[6]*b[1]-b[2]*b[5],e=-b[10]*b[4]+b[6]*b[8],f=b[10]*b[0]-b[2]*b[8],g=-b[6]*b[0]+b[2]*b[4],h=b[9]*b[4]-b[5]*b[8],i=-b[9]*b[0]+b[1]*b[8],k=b[5]*b[0]-b[1]*b[4],b=b[0]*a+b[1]*e+b[2]*h;0===b&&console.warn("Matrix3.getInverse(): determinant == 0");var b=1/b,j=this.elements;j[0]=b*a;j[1]=b*c;j[2]=b*d;j[3]=b*e;j[4]=b*f;j[5]=b*g;j[6]=b*h;j[7]=b*i;j[8]=b*k;return this},
transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.m;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};THREE.Matrix4=function(a,b,c,d,e,f,g,h,i,k,j,l,m,p,n,q){this.elements=new Float32Array(16);this.set(void 0!==a?a:1,b||0,c||0,d||0,e||0,void 0!==f?f:1,g||0,h||0,i||0,k||0,void 0!==j?j:1,l||0,m||0,p||0,n||0,void 0!==q?q:1)};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,i,k,j,l,m,p,n,q){var t=this.elements;t[0]=a;t[4]=b;t[8]=c;t[12]=d;t[1]=e;t[5]=f;t[9]=g;t[13]=h;t[2]=i;t[6]=k;t[10]=j;t[14]=l;t[3]=m;t[7]=p;t[11]=n;t[15]=q;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15]);return this},lookAt:function(a,b,c){var d=this.elements,
e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;g.sub(a,b).normalize();0===g.length()&&(g.z=1);e.cross(c,g).normalize();0===e.length()&&(g.x+=1E-4,e.cross(c,g).normalize());f.cross(g,e);d[0]=e.x;d[4]=f.x;d[8]=g.x;d[1]=e.y;d[5]=f.y;d[9]=g.y;d[2]=e.z;d[6]=f.z;d[10]=g.z;return this},multiply:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],i=c[12],k=c[1],j=c[5],l=c[9],m=c[13],p=c[2],n=c[6],q=c[10],t=c[14],s=c[3],x=c[7],u=c[11],c=c[15],r=d[0],y=d[4],w=d[8],
v=d[12],A=d[1],F=d[5],C=d[9],G=d[13],H=d[2],D=d[6],J=d[10],L=d[14],K=d[3],M=d[7],N=d[11],d=d[15];e[0]=f*r+g*A+h*H+i*K;e[4]=f*y+g*F+h*D+i*M;e[8]=f*w+g*C+h*J+i*N;e[12]=f*v+g*G+h*L+i*d;e[1]=k*r+j*A+l*H+m*K;e[5]=k*y+j*F+l*D+m*M;e[9]=k*w+j*C+l*J+m*N;e[13]=k*v+j*G+l*L+m*d;e[2]=p*r+n*A+q*H+t*K;e[6]=p*y+n*F+q*D+t*M;e[10]=p*w+n*C+q*J+t*N;e[14]=p*v+n*G+q*L+t*d;e[3]=s*r+x*A+u*H+c*K;e[7]=s*y+x*F+u*D+c*M;e[11]=s*w+x*C+u*J+c*N;e[15]=s*v+x*G+u*L+c*d;return this},multiplySelf:function(a){return this.multiply(this,
a)},multiplyToArray:function(a,b,c){var d=this.elements;this.multiply(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){var b=this.elements,
c=a.x,d=a.y,e=a.z,f=1/(b[3]*c+b[7]*d+b[11]*e+b[15]);a.x=(b[0]*c+b[4]*d+b[8]*e+b[12])*f;a.y=(b[1]*c+b[5]*d+b[9]*e+b[13])*f;a.z=(b[2]*c+b[6]*d+b[10]*e+b[14])*f;return a},multiplyVector4:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w;a.x=b[0]*c+b[4]*d+b[8]*e+b[12]*f;a.y=b[1]*c+b[5]*d+b[9]*e+b[13]*f;a.z=b[2]*c+b[6]*d+b[10]*e+b[14]*f;a.w=b[3]*c+b[7]*d+b[11]*e+b[15]*f;return a},multiplyVector3Array:function(a){for(var b=THREE.Matrix4.__v1,c=0,d=a.length;c<d;c+=3)b.x=a[c],b.y=a[c+1],b.z=a[c+2],
this.multiplyVector3(b),a[c]=b.x,a[c+1]=b.y,a[c+2]=b.z;return a},rotateAxis:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;a.x=c*b[0]+d*b[4]+e*b[8];a.y=c*b[1]+d*b[5]+e*b[9];a.z=c*b[2]+d*b[6]+e*b[10];a.normalize();return a},crossVector:function(a){var b=this.elements,c=new THREE.Vector4;c.x=b[0]*a.x+b[4]*a.y+b[8]*a.z+b[12]*a.w;c.y=b[1]*a.x+b[5]*a.y+b[9]*a.z+b[13]*a.w;c.z=b[2]*a.x+b[6]*a.y+b[10]*a.z+b[14]*a.w;c.w=a.w?b[3]*a.x+b[7]*a.y+b[11]*a.z+b[15]*a.w:1;return c},determinant:function(){var a=
this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],i=a[13],k=a[2],j=a[6],l=a[10],m=a[14],p=a[3],n=a[7],q=a[11],a=a[15];return e*h*j*p-d*i*j*p-e*g*l*p+c*i*l*p+d*g*m*p-c*h*m*p-e*h*k*n+d*i*k*n+e*f*l*n-b*i*l*n-d*f*m*n+b*h*m*n+e*g*k*q-c*i*k*q-e*f*j*q+b*i*j*q+c*f*m*q-b*g*m*q-d*g*k*a+c*h*k*a+d*f*j*a-b*h*j*a-c*f*l*a+b*g*l*a},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=
a[11];a[11]=a[14];a[14]=b;return this},flattenToArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];a[9]=b[9];a[10]=b[10];a[11]=b[11];a[12]=b[12];a[13]=b[13];a[14]=b[14];a[15]=b[15];return a},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+
14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[12],a[13],a[14])},setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getColumnX:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[0],a[1],a[2])},getColumnY:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[4],a[5],a[6])},getColumnZ:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[8],a[9],a[10])},getInverse:function(a){var b=
this.elements,c=a.elements,d=c[0],e=c[4],f=c[8],g=c[12],h=c[1],i=c[5],k=c[9],j=c[13],l=c[2],m=c[6],p=c[10],n=c[14],q=c[3],t=c[7],s=c[11],c=c[15];b[0]=k*n*t-j*p*t+j*m*s-i*n*s-k*m*c+i*p*c;b[4]=g*p*t-f*n*t-g*m*s+e*n*s+f*m*c-e*p*c;b[8]=f*j*t-g*k*t+g*i*s-e*j*s-f*i*c+e*k*c;b[12]=g*k*m-f*j*m-g*i*p+e*j*p+f*i*n-e*k*n;b[1]=j*p*q-k*n*q-j*l*s+h*n*s+k*l*c-h*p*c;b[5]=f*n*q-g*p*q+g*l*s-d*n*s-f*l*c+d*p*c;b[9]=g*k*q-f*j*q-g*h*s+d*j*s+f*h*c-d*k*c;b[13]=f*j*l-g*k*l+g*h*p-d*j*p-f*h*n+d*k*n;b[2]=i*n*q-j*m*q+j*l*t-h*n*
t-i*l*c+h*m*c;b[6]=g*m*q-e*n*q-g*l*t+d*n*t+e*l*c-d*m*c;b[10]=e*j*q-g*i*q+g*h*t-d*j*t-e*h*c+d*i*c;b[14]=g*i*l-e*j*l-g*h*m+d*j*m+e*h*n-d*i*n;b[3]=k*m*q-i*p*q-k*l*t+h*p*t+i*l*s-h*m*s;b[7]=e*p*q-f*m*q+f*l*t-d*p*t-e*l*s+d*m*s;b[11]=f*i*q-e*k*q-f*h*t+d*k*t+e*h*s-d*i*s;b[15]=e*k*l-f*i*l+f*h*m-d*k*m-e*h*p+d*i*p;this.multiplyScalar(1/a.determinant());return this},setRotationFromEuler:function(a,b){var c=this.elements,d=a.x,e=a.y,f=a.z,g=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e),i=Math.cos(f),f=
Math.sin(f);if(void 0===b||"XYZ"===b){var k=g*i,j=g*f,l=d*i,m=d*f;c[0]=h*i;c[4]=-h*f;c[8]=e;c[1]=j+l*e;c[5]=k-m*e;c[9]=-d*h;c[2]=m-k*e;c[6]=l+j*e;c[10]=g*h}else"YXZ"===b?(k=h*i,j=h*f,l=e*i,m=e*f,c[0]=k+m*d,c[4]=l*d-j,c[8]=g*e,c[1]=g*f,c[5]=g*i,c[9]=-d,c[2]=j*d-l,c[6]=m+k*d,c[10]=g*h):"ZXY"===b?(k=h*i,j=h*f,l=e*i,m=e*f,c[0]=k-m*d,c[4]=-g*f,c[8]=l+j*d,c[1]=j+l*d,c[5]=g*i,c[9]=m-k*d,c[2]=-g*e,c[6]=d,c[10]=g*h):"ZYX"===b?(k=g*i,j=g*f,l=d*i,m=d*f,c[0]=h*i,c[4]=l*e-j,c[8]=k*e+m,c[1]=h*f,c[5]=m*e+k,c[9]=
j*e-l,c[2]=-e,c[6]=d*h,c[10]=g*h):"YZX"===b?(k=g*h,j=g*e,l=d*h,m=d*e,c[0]=h*i,c[4]=m-k*f,c[8]=l*f+j,c[1]=f,c[5]=g*i,c[9]=-d*i,c[2]=-e*i,c[6]=j*f+l,c[10]=k-m*f):"XZY"===b&&(k=g*h,j=g*e,l=d*h,m=d*e,c[0]=h*i,c[4]=-f,c[8]=e*i,c[1]=k*f+m,c[5]=g*i,c[9]=j*f-l,c[2]=l*f-j,c[6]=d*i,c[10]=m*f+k);return this},setRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,i=e+e,a=c*g,k=c*h,c=c*i,j=d*h,d=d*i,e=e*i,g=f*g,h=f*h,f=f*i;b[0]=1-(j+e);b[4]=k-f;b[8]=c+h;b[1]=k+f;b[5]=1-(a+
e);b[9]=d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+j);return this},compose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__m1,f=THREE.Matrix4.__m2;e.identity();e.setRotationFromQuaternion(b);f.makeScale(c.x,c.y,c.z);this.multiply(e,f);d[12]=a.x;d[13]=a.y;d[14]=a.z;return this},decompose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;e.set(d[0],d[1],d[2]);f.set(d[4],d[5],d[6]);g.set(d[8],d[9],d[10]);a=a instanceof THREE.Vector3?a:new THREE.Vector3;b=
b instanceof THREE.Quaternion?b:new THREE.Quaternion;c=c instanceof THREE.Vector3?c:new THREE.Vector3;c.x=e.length();c.y=f.length();c.z=g.length();a.x=d[12];a.y=d[13];a.z=d[14];d=THREE.Matrix4.__m1;d.copy(this);d.elements[0]/=c.x;d.elements[1]/=c.x;d.elements[2]/=c.x;d.elements[4]/=c.y;d.elements[5]/=c.y;d.elements[6]/=c.y;d.elements[8]/=c.z;d.elements[9]/=c.z;d.elements[10]/=c.z;b.setFromRotationMatrix(d);return[a,b,c]},extractPosition:function(a){var b=this.elements,a=a.elements;b[12]=a[12];b[13]=
a[13];b[14]=a[14];return this},extractRotation:function(a){var b=this.elements,a=a.elements,c=THREE.Matrix4.__v1,d=1/c.set(a[0],a[1],a[2]).length(),e=1/c.set(a[4],a[5],a[6]).length(),c=1/c.set(a[8],a[9],a[10]).length();b[0]=a[0]*d;b[1]=a[1]*d;b[2]=a[2]*d;b[4]=a[4]*e;b[5]=a[5]*e;b[6]=a[6]*e;b[8]=a[8]*c;b[9]=a[9]*c;b[10]=a[10]*c;return this},translate:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;b[12]=b[0]*c+b[4]*d+b[8]*a+b[12];b[13]=b[1]*c+b[5]*d+b[9]*a+b[13];b[14]=b[2]*c+b[6]*d+b[10]*a+b[14];
b[15]=b[3]*c+b[7]*d+b[11]*a+b[15];return this},rotateX:function(a){var b=this.elements,c=b[4],d=b[5],e=b[6],f=b[7],g=b[8],h=b[9],i=b[10],k=b[11],j=Math.cos(a),a=Math.sin(a);b[4]=j*c+a*g;b[5]=j*d+a*h;b[6]=j*e+a*i;b[7]=j*f+a*k;b[8]=j*g-a*c;b[9]=j*h-a*d;b[10]=j*i-a*e;b[11]=j*k-a*f;return this},rotateY:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[8],h=b[9],i=b[10],k=b[11],j=Math.cos(a),a=Math.sin(a);b[0]=j*c-a*g;b[1]=j*d-a*h;b[2]=j*e-a*i;b[3]=j*f-a*k;b[8]=j*g+a*c;b[9]=j*h+a*d;b[10]=
j*i+a*e;b[11]=j*k+a*f;return this},rotateZ:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=b[6],k=b[7],j=Math.cos(a),a=Math.sin(a);b[0]=j*c+a*g;b[1]=j*d+a*h;b[2]=j*e+a*i;b[3]=j*f+a*k;b[4]=j*g-a*c;b[5]=j*h-a*d;b[6]=j*i-a*e;b[7]=j*k-a*f;return this},rotateByAxis:function(a,b){var c=this.elements;if(1===a.x&&0===a.y&&0===a.z)return this.rotateX(b);if(0===a.x&&1===a.y&&0===a.z)return this.rotateY(b);if(0===a.x&&0===a.y&&1===a.z)return this.rotateZ(b);var d=a.x,e=a.y,f=a.z,
g=Math.sqrt(d*d+e*e+f*f),d=d/g,e=e/g,f=f/g,g=d*d,h=e*e,i=f*f,k=Math.cos(b),j=Math.sin(b),l=1-k,m=d*e*l,p=d*f*l,l=e*f*l,d=d*j,n=e*j,j=f*j,f=g+(1-g)*k,g=m+j,e=p-n,m=m-j,h=h+(1-h)*k,j=l+d,p=p+n,l=l-d,i=i+(1-i)*k,k=c[0],d=c[1],n=c[2],q=c[3],t=c[4],s=c[5],x=c[6],u=c[7],r=c[8],y=c[9],w=c[10],v=c[11];c[0]=f*k+g*t+e*r;c[1]=f*d+g*s+e*y;c[2]=f*n+g*x+e*w;c[3]=f*q+g*u+e*v;c[4]=m*k+h*t+j*r;c[5]=m*d+h*s+j*y;c[6]=m*n+h*x+j*w;c[7]=m*q+h*u+j*v;c[8]=p*k+l*t+i*r;c[9]=p*d+l*s+i*y;c[10]=p*n+l*x+i*w;c[11]=p*q+l*u+i*v;
return this},scale:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);
this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,i=e*f,k=e*g;this.set(i*f+c,i*g-d*h,i*h+d*g,0,i*g+d*h,k*g+c,k*h-d*f,0,i*h-d*g,k*h+d*f,e*h*h+c,0,0,0,0,1);return this},makeScale:function(a,
b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},makeFrustum:function(a,b,c,d,e,f){var g=this.elements;g[0]=2*e/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*e/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)/(f-e);g[14]=-2*f*e/(f-e);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){var a=c*Math.tan(a*Math.PI/360),e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=b-a,i=c-d,k=f-e;g[0]=2/
h;g[4]=0;g[8]=0;g[12]=-((b+a)/h);g[1]=0;g[5]=2/i;g[9]=0;g[13]=-((c+d)/i);g[2]=0;g[6]=0;g[10]=-2/k;g[14]=-((f+e)/k);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;
THREE.EventTarget=function(){var a={};this.addEventListener=function(b,c){void 0===a[b]&&(a[b]=[]);-1===a[b].indexOf(c)&&a[b].push(c)};this.dispatchEvent=function(b){for(var c in a[b.type])a[b.type][c](b)};this.removeEventListener=function(b,c){var d=a[b].indexOf(c);-1!==d&&a[b].splice(d,1)}};THREE.Frustum=function(){this.planes=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4]};
THREE.Frustum.prototype.setFromMatrix=function(a){var b=this.planes,c=a.elements,a=c[0],d=c[1],e=c[2],f=c[3],g=c[4],h=c[5],i=c[6],k=c[7],j=c[8],l=c[9],m=c[10],p=c[11],n=c[12],q=c[13],t=c[14],c=c[15];b[0].set(f-a,k-g,p-j,c-n);b[1].set(f+a,k+g,p+j,c+n);b[2].set(f+d,k+h,p+l,c+q);b[3].set(f-d,k-h,p-l,c-q);b[4].set(f-e,k-i,p-m,c-t);b[5].set(f+e,k+i,p+m,c+t);for(d=0;6>d;d++)a=b[d],a.divideScalar(Math.sqrt(a.x*a.x+a.y*a.y+a.z*a.z))};
THREE.Frustum.prototype.contains=function(a){for(var b=0,c=this.planes,b=a.matrixWorld,d=b.elements,a=-a.geometry.boundingSphere.radius*b.getMaxScaleOnAxis(),e=0;6>e;e++)if(b=c[e].x*d[12]+c[e].y*d[13]+c[e].z*d[14]+c[e].w,b<=a)return!1;return!0};THREE.Frustum.__v1=new THREE.Vector3;
(function(a){a.Ray=function(b,c,d,e){this.origin=b||new a.Vector3;this.direction=c||new a.Vector3;this.near=d||0;this.far=e||Infinity};var b=new a.Vector3,c=new a.Vector3,d=new a.Vector3,e=new a.Vector3,f=new a.Vector3,g=new a.Vector3,h=new a.Matrix4,i=function(a,b){return a.distance-b.distance},k=new a.Vector3,j=new a.Vector3,l=new a.Vector3,m=function(a,b,c){k.sub(c,a);var d=k.dot(b),a=j.add(a,l.copy(b).multiplyScalar(d));return c.distanceTo(a)},p=function(a,b,c,d){k.sub(d,b);j.sub(c,b);l.sub(a,
b);var a=k.dot(k),b=k.dot(j),c=k.dot(l),e=j.dot(j),d=j.dot(l),f=1/(a*e-b*b),e=(e*c-b*d)*f,a=(a*d-b*c)*f;return 0<=e&&0<=a&&1>e+a},n=function(i,j,k){var l,n;if(i instanceof a.Particle){l=m(j.origin,j.direction,i.matrixWorld.getPosition());if(l>i.scale.x)return k;n={distance:l,point:i.position,face:null,object:i};k.push(n)}else if(i instanceof a.Mesh){var q=i.geometry.boundingSphere.radius*i.matrixWorld.getMaxScaleOnAxis();l=m(j.origin,j.direction,i.matrixWorld.getPosition());if(l>q)return k;var w,
v,A=i.geometry,F=A.vertices,C,G,H;C=i.geometry.materials;G=i.material instanceof a.MeshFaceMaterial;var D,J=j.precision;i.matrixRotationWorld.extractRotation(i.matrixWorld);b.copy(j.origin);h.getInverse(i.matrixWorld);c.copy(b);h.multiplyVector3(c);d.copy(j.direction);h.rotateAxis(d).normalize();q=0;for(w=A.faces.length;q<w;q++)if(n=A.faces[q],l=!0===G?C[n.materialIndex]:i.material,void 0!==l&&(H=l.side,e.sub(n.centroid,c),f=n.normal,l=d.dot(f),!(Math.abs(l)<J)&&(v=f.dot(e)/l,!(0>v)&&(H===a.DoubleSide||
(H===a.FrontSide?0>l:0<l)))))if(g.add(c,d.multiplyScalar(v)),n instanceof a.Face3)l=F[n.a],v=F[n.b],H=F[n.c],p(g,l,v,H)&&(v=i.matrixWorld.multiplyVector3(g.clone()),l=b.distanceTo(v),l<j.near||l>j.far||(n={distance:l,point:v,face:n,faceIndex:q,object:i},k.push(n)));else if(n instanceof a.Face4&&(l=F[n.a],v=F[n.b],H=F[n.c],D=F[n.d],p(g,l,v,D)||p(g,v,H,D)))v=i.matrixWorld.multiplyVector3(g.clone()),l=b.distanceTo(v),l<j.near||l>j.far||(n={distance:l,point:v,face:n,faceIndex:q,object:i},k.push(n))}},
q=function(a,b,c){for(var a=a.getDescendants(),d=0,e=a.length;d<e;d++)n(a[d],b,c)};a.Ray.prototype.precision=1E-4;a.Ray.prototype.set=function(a,b){this.origin=a;this.direction=b};a.Ray.prototype.intersectObject=function(a,b){var c=[];!0===b&&q(a,this,c);n(a,this,c);c.sort(i);return c};a.Ray.prototype.intersectObjects=function(a,b){for(var c=[],d=0,e=a.length;d<e;d++)n(a[d],this,c),!0===b&&q(a[d],this,c);c.sort(i);return c}})(THREE);
THREE.Rectangle=function(){function a(){f=d-b;g=e-c}var b=0,c=0,d=0,e=0,f=0,g=0,h=!0;this.getX=function(){return b};this.getY=function(){return c};this.getWidth=function(){return f};this.getHeight=function(){return g};this.getLeft=function(){return b};this.getTop=function(){return c};this.getRight=function(){return d};this.getBottom=function(){return e};this.set=function(f,g,j,l){h=!1;b=f;c=g;d=j;e=l;a()};this.addPoint=function(f,g){!0===h?(h=!1,b=f,c=g,d=f,e=g):(b=b<f?b:f,c=c<g?c:g,d=d>f?d:f,e=e>
g?e:g);a()};this.add3Points=function(f,g,j,l,m,p){!0===h?(h=!1,b=f<j?f<m?f:m:j<m?j:m,c=g<l?g<p?g:p:l<p?l:p,d=f>j?f>m?f:m:j>m?j:m,e=g>l?g>p?g:p:l>p?l:p):(b=f<j?f<m?f<b?f:b:m<b?m:b:j<m?j<b?j:b:m<b?m:b,c=g<l?g<p?g<c?g:c:p<c?p:c:l<p?l<c?l:c:p<c?p:c,d=f>j?f>m?f>d?f:d:m>d?m:d:j>m?j>d?j:d:m>d?m:d,e=g>l?g>p?g>e?g:e:p>e?p:e:l>p?l>e?l:e:p>e?p:e);a()};this.addRectangle=function(f){!0===h?(h=!1,b=f.getLeft(),c=f.getTop(),d=f.getRight(),e=f.getBottom()):(b=b<f.getLeft()?b:f.getLeft(),c=c<f.getTop()?c:f.getTop(),
d=d>f.getRight()?d:f.getRight(),e=e>f.getBottom()?e:f.getBottom());a()};this.inflate=function(f){b-=f;c-=f;d+=f;e+=f;a()};this.minSelf=function(f){b=b>f.getLeft()?b:f.getLeft();c=c>f.getTop()?c:f.getTop();d=d<f.getRight()?d:f.getRight();e=e<f.getBottom()?e:f.getBottom();a()};this.intersects=function(a){return d<a.getLeft()||b>a.getRight()||e<a.getTop()||c>a.getBottom()?!1:!0};this.empty=function(){h=!0;e=d=c=b=0;a()};this.isEmpty=function(){return h}};
THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},sign:function(a){return 0>a?-1:0<a?1:0}};
THREE.Object3D=function(){THREE.Object3DLibrary.push(this);this.id=THREE.Object3DIdCount++;this.name="";this.properties={};this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder=THREE.Object3D.defaultEulerOrder;this.scale=new THREE.Vector3(1,1,1);this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=
this.matrixAutoUpdate=!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiply(a,this.matrix);this.scale.getScaleFromMatrix(this.matrix);a=(new THREE.Matrix4).extractRotation(this.matrix);this.rotation.setEulerFromRotationMatrix(a,this.eulerOrder);this.position.getPositionFromMatrix(this.matrix)},translate:function(a,b){this.matrix.rotateAxis(b);this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,
this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},localToWorld:function(a){return this.matrixWorld.multiplyVector3(a)},worldToLocal:function(a){return THREE.Object3D.__m1.getInverse(this.matrixWorld).multiplyVector3(a)},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)},add:function(a){if(a===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");
else if(a instanceof THREE.Object3D){void 0!==a.parent&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(-1!==b){a.parent=void 0;this.children.splice(b,1);for(b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__removeObject(a)}},traverse:function(a){a(this);for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverse(a)},
getChildByName:function(a,b){for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c];if(e.name===a||!0===b&&(e=e.getChildByName(a,b),void 0!==e))return e}},getDescendants:function(a){void 0===a&&(a=[]);Array.prototype.push.apply(a,this.children);for(var b=0,c=this.children.length;b<c;b++)this.children[b].getDescendants(a);return a},updateMatrix:function(){this.matrix.setPosition(this.position);!1===this.useQuaternion?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion);
if(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<
c;b++)this.children[b].updateMatrixWorld(a)},clone:function(a){void 0===a&&(a=new THREE.Object3D);a.name=this.name;a.up.copy(this.up);a.position.copy(this.position);a.rotation instanceof THREE.Vector3&&a.rotation.copy(this.rotation);a.eulerOrder=this.eulerOrder;a.scale.copy(this.scale);a.renderDepth=this.renderDepth;a.rotationAutoUpdate=this.rotationAutoUpdate;a.matrix.copy(this.matrix);a.matrixWorld.copy(this.matrixWorld);a.matrixRotationWorld.copy(this.matrixRotationWorld);a.matrixAutoUpdate=this.matrixAutoUpdate;
a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.quaternion.copy(this.quaternion);a.useQuaternion=this.useQuaternion;a.boundRadius=this.boundRadius;a.boundRadiusScale=this.boundRadiusScale;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;return a},deallocate:function(){var a=THREE.Object3DLibrary.indexOf(this);-1!==a&&THREE.Object3DLibrary.splice(a,1)}};THREE.Object3D.__m1=new THREE.Matrix4;
THREE.Object3D.defaultEulerOrder="XYZ";THREE.Object3DIdCount=0;THREE.Object3DLibrary=[];
THREE.Projector=function(){function a(){if(f===h){var a=new THREE.RenderableObject;g.push(a);h++;f++;return a}return g[f++]}function b(){if(k===l){var a=new THREE.RenderableVertex;j.push(a);l++;k++;return a}return j[k++]}function c(a,b){return b.z-a.z}function d(a,b){var c=0,d=1,e=a.z+a.w,f=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;if(0<=e&&0<=f&&0<=g&&0<=h)return!0;if(0>e&&0>f||0>g&&0>h)return!1;0>e?c=Math.max(c,e/(e-f)):0>f&&(d=Math.min(d,e/(e-f)));0>g?c=Math.max(c,g/(g-h)):0>h&&(d=Math.min(d,g/(g-h)));if(d<
c)return!1;a.lerpSelf(b,c);b.lerpSelf(a,1-d);return!0}var e,f,g=[],h=0,i,k,j=[],l=0,m,p,n=[],q=0,t,s=[],x=0,u,r,y=[],w=0,v,A,F=[],C=0,G={objects:[],sprites:[],lights:[],elements:[]},H=new THREE.Vector3,D=new THREE.Vector4,J=new THREE.Matrix4,L=new THREE.Matrix4,K=new THREE.Frustum,M=new THREE.Vector4,N=new THREE.Vector4;this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);J.multiply(b.projectionMatrix,b.matrixWorldInverse);J.multiplyVector3(a);return a};this.unprojectVector=
function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);J.multiply(b.matrixWorld,b.projectionMatrixInverse);J.multiplyVector3(a);return a};this.pickingRay=function(a,b){var c;a.z=-1;c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.subSelf(a).normalize();return new THREE.Ray(a,c)};this.projectScene=function(g,h,l,E){var O=h.near,Q=h.far,ja=!1,sa,P,da,T,Y,la,R,aa,va,Na,ya,ta,pa,Ea,Pa,bb;A=r=t=p=0;G.elements.length=0;g.updateMatrixWorld();void 0===h.parent&&
h.updateMatrixWorld();h.matrixWorldInverse.getInverse(h.matrixWorld);J.multiply(h.projectionMatrix,h.matrixWorldInverse);K.setFromMatrix(J);f=0;G.objects.length=0;G.sprites.length=0;G.lights.length=0;var Ya=function(b){for(var c=0,d=b.children.length;c<d;c++){var f=b.children[c];if(!1!==f.visible){if(f instanceof THREE.Light)G.lights.push(f);else if(f instanceof THREE.Mesh||f instanceof THREE.Line){if(!1===f.frustumCulled||!0===K.contains(f))e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:
(H.copy(f.matrixWorld.getPosition()),J.multiplyVector3(H),e.z=H.z),G.objects.push(e)}else f instanceof THREE.Sprite||f instanceof THREE.Particle?(e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:(H.copy(f.matrixWorld.getPosition()),J.multiplyVector3(H),e.z=H.z),G.sprites.push(e)):(e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:(H.copy(f.matrixWorld.getPosition()),J.multiplyVector3(H),e.z=H.z),G.objects.push(e));Ya(f)}}};Ya(g);!0===l&&G.objects.sort(c);g=0;for(l=G.objects.length;g<
l;g++)if(aa=G.objects[g].object,va=aa.matrixWorld,k=0,aa instanceof THREE.Mesh){Na=aa.geometry;ya=aa.geometry.materials;da=Na.vertices;ta=Na.faces;Ea=Na.faceVertexUvs;Na=aa.matrixRotationWorld.extractRotation(va);Pa=aa.material instanceof THREE.MeshFaceMaterial;sa=0;for(P=da.length;sa<P;sa++)i=b(),i.positionWorld.copy(da[sa]),va.multiplyVector3(i.positionWorld),i.positionScreen.copy(i.positionWorld),J.multiplyVector4(i.positionScreen),i.positionScreen.x/=i.positionScreen.w,i.positionScreen.y/=i.positionScreen.w,
i.visible=i.positionScreen.z>O&&i.positionScreen.z<Q;da=0;for(sa=ta.length;da<sa;da++)if(P=ta[da],bb=!0===Pa?ya[P.materialIndex]:aa.material,void 0!==bb){la=bb.side;if(P instanceof THREE.Face3)if(T=j[P.a],Y=j[P.b],R=j[P.c],!0===T.visible&&!0===Y.visible&&!0===R.visible)if(ja=0>(R.positionScreen.x-T.positionScreen.x)*(Y.positionScreen.y-T.positionScreen.y)-(R.positionScreen.y-T.positionScreen.y)*(Y.positionScreen.x-T.positionScreen.x),la===THREE.DoubleSide||ja===(la===THREE.FrontSide))p===q?(pa=new THREE.RenderableFace3,
n.push(pa),q++,p++,m=pa):m=n[p++],m.v1.copy(T),m.v2.copy(Y),m.v3.copy(R);else continue;else continue;else if(P instanceof THREE.Face4)if(T=j[P.a],Y=j[P.b],R=j[P.c],pa=j[P.d],!0===T.visible&&!0===Y.visible&&!0===R.visible&&!0===pa.visible)if(ja=0>(pa.positionScreen.x-T.positionScreen.x)*(Y.positionScreen.y-T.positionScreen.y)-(pa.positionScreen.y-T.positionScreen.y)*(Y.positionScreen.x-T.positionScreen.x)||0>(Y.positionScreen.x-R.positionScreen.x)*(pa.positionScreen.y-R.positionScreen.y)-(Y.positionScreen.y-
R.positionScreen.y)*(pa.positionScreen.x-R.positionScreen.x),la===THREE.DoubleSide||ja===(la===THREE.FrontSide)){if(t===x){var jb=new THREE.RenderableFace4;s.push(jb);x++;t++;m=jb}else m=s[t++];m.v1.copy(T);m.v2.copy(Y);m.v3.copy(R);m.v4.copy(pa)}else continue;else continue;m.normalWorld.copy(P.normal);!1===ja&&(la===THREE.BackSide||la===THREE.DoubleSide)&&m.normalWorld.negate();Na.multiplyVector3(m.normalWorld);m.centroidWorld.copy(P.centroid);va.multiplyVector3(m.centroidWorld);m.centroidScreen.copy(m.centroidWorld);
J.multiplyVector3(m.centroidScreen);R=P.vertexNormals;T=0;for(Y=R.length;T<Y;T++)pa=m.vertexNormalsWorld[T],pa.copy(R[T]),!1===ja&&(la===THREE.BackSide||la===THREE.DoubleSide)&&pa.negate(),Na.multiplyVector3(pa);m.vertexNormalsLength=R.length;T=0;for(Y=Ea.length;T<Y;T++)if(pa=Ea[T][da],void 0!==pa){la=0;for(R=pa.length;la<R;la++)m.uvs[T][la]=pa[la]}m.color=P.color;m.material=bb;m.z=m.centroidScreen.z;G.elements.push(m)}}else if(aa instanceof THREE.Line){L.multiply(J,va);da=aa.geometry.vertices;T=
b();T.positionScreen.copy(da[0]);L.multiplyVector4(T.positionScreen);va=aa.type===THREE.LinePieces?2:1;sa=1;for(P=da.length;sa<P;sa++)T=b(),T.positionScreen.copy(da[sa]),L.multiplyVector4(T.positionScreen),0<(sa+1)%va||(Y=j[k-2],M.copy(T.positionScreen),N.copy(Y.positionScreen),!0===d(M,N)&&(M.multiplyScalar(1/M.w),N.multiplyScalar(1/N.w),r===w?(ya=new THREE.RenderableLine,y.push(ya),w++,r++,u=ya):u=y[r++],u.v1.positionScreen.copy(M),u.v2.positionScreen.copy(N),u.z=Math.max(M.z,N.z),u.material=aa.material,
G.elements.push(u)))}g=0;for(l=G.sprites.length;g<l;g++)aa=G.sprites[g].object,va=aa.matrixWorld,aa instanceof THREE.Particle&&(D.set(va.elements[12],va.elements[13],va.elements[14],1),J.multiplyVector4(D),D.z/=D.w,0<D.z&&1>D.z&&(A===C?(O=new THREE.RenderableParticle,F.push(O),C++,A++,v=O):v=F[A++],v.object=aa,v.x=D.x/D.w,v.y=D.y/D.w,v.z=D.z,v.rotation=aa.rotation.z,v.scale.x=aa.scale.x*Math.abs(v.x-(D.x+h.projectionMatrix.elements[0])/(D.w+h.projectionMatrix.elements[12])),v.scale.y=aa.scale.y*Math.abs(v.y-
(D.y+h.projectionMatrix.elements[5])/(D.w+h.projectionMatrix.elements[13])),v.material=aa.material,G.elements.push(v)));!0===E&&G.elements.sort(c);return G}};THREE.Quaternion=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a,b){var c=Math.cos(a.x/2),d=Math.cos(a.y/2),e=Math.cos(a.z/2),f=Math.sin(a.x/2),g=Math.sin(a.y/2),h=Math.sin(a.z/2);void 0===b||"XYZ"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e-f*g*h):"YXZ"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*
h-f*g*e,this.w=c*d*e+f*g*h):"ZXY"===b?(this.x=f*d*e-c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e-f*g*h):"ZYX"===b?(this.x=f*d*e-c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h-f*g*e,this.w=c*d*e+f*g*h):"YZX"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h-f*g*e,this.w=c*d*e-f*g*h):"XZY"===b&&(this.x=f*d*e-c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e+f*g*h);return this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);this.x=a.x*d;this.y=a.y*d;this.z=a.z*d;this.w=Math.cos(c);
return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0],a=b[4],d=b[8],e=b[1],f=b[5],g=b[9],h=b[2],i=b[6],b=b[10],k=c+f+b;0<k?(c=0.5/Math.sqrt(k+1),this.w=0.25/c,this.x=(i-g)*c,this.y=(d-h)*c,this.z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this.w=(i-g)/c,this.x=0.25*c,this.y=(a+e)/c,this.z=(d+h)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this.w=(d-h)/c,this.x=(a+e)/c,this.y=0.25*c,this.z=(g+i)/c):(c=2*Math.sqrt(1+b-c-f),this.w=(e-a)/c,this.x=(d+h)/c,this.y=(g+i)/c,this.z=0.25*c);return this},calculateW:function(){this.w=
-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);0===a?this.w=this.z=this.y=this.x=0:(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiply:function(a,b){var c=a.x,d=a.y,e=a.z,f=a.w,g=b.x,h=b.y,i=b.z,k=b.w;
this.x=c*k+d*i-e*h+f*g;this.y=-c*i+d*k+e*g+f*h;this.z=c*h-d*g+e*k+f*i;this.w=-c*g-d*h-e*i+f*k;return this},multiplySelf:function(a){var b=this.x,c=this.y,d=this.z,e=this.w,f=a.x,g=a.y,h=a.z,a=a.w;this.x=b*a+e*f+c*h-d*g;this.y=c*a+e*g+d*f-b*h;this.z=d*a+e*h+b*g-c*f;this.w=e*a-b*f-c*g-d*h;return this},multiplyVector3:function(a,b){b||(b=a);var c=a.x,d=a.y,e=a.z,f=this.x,g=this.y,h=this.z,i=this.w,k=i*c+g*e-h*d,j=i*d+h*c-f*e,l=i*e+f*d-g*c,c=-f*c-g*d-h*e;b.x=k*i+c*-f+j*-h-l*-g;b.y=j*i+c*-g+l*-f-k*-h;
b.z=l*i+c*-h+k*-g-j*-f;return b},slerpSelf:function(a,b){var c=this.x,d=this.y,e=this.z,f=this.w,g=f*a.w+c*a.x+d*a.y+e*a.z;0>g?(this.w=-a.w,this.x=-a.x,this.y=-a.y,this.z=-a.z,g=-g):this.copy(a);if(1<=g)return this.w=f,this.x=c,this.y=d,this.z=e,this;var h=Math.acos(g),i=Math.sqrt(1-g*g);if(0.0010>Math.abs(i))return this.w=0.5*(f+this.w),this.x=0.5*(c+this.x),this.y=0.5*(d+this.y),this.z=0.5*(e+this.z),this;g=Math.sin((1-b)*h)/i;h=Math.sin(b*h)/i;this.w=f*g+this.w*h;this.x=c*g+this.x*h;this.y=d*g+
this.y*h;this.z=e*g+this.z*h;return this},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}};
THREE.Quaternion.slerp=function(a,b,c,d){var e=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;0>e?(c.w=-b.w,c.x=-b.x,c.y=-b.y,c.z=-b.z,e=-e):c.copy(b);if(1<=Math.abs(e))return c.w=a.w,c.x=a.x,c.y=a.y,c.z=a.z,c;var b=Math.acos(e),f=Math.sqrt(1-e*e);if(0.0010>Math.abs(f))return c.w=0.5*(a.w+c.w),c.x=0.5*(a.x+c.x),c.y=0.5*(a.y+c.y),c.z=0.5*(a.z+c.z),c;e=Math.sin((1-d)*b)/f;d=Math.sin(d*b)/f;c.w=a.w*e+c.w*d;c.x=a.x*e+c.x*d;c.y=a.y*e+c.y*d;c.z=a.z*e+c.z*d;return c};
THREE.Vertex=function(a){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return a};THREE.Face3=function(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=f;this.centroid=new THREE.Vector3};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.Face4=function(a,b,c,d,e,f,g){this.a=a;this.b=b;this.c=c;this.d=d;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=g;this.centroid=new THREE.Vector3};
THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var a=new THREE.Face4(this.a,this.b,this.c,this.d);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){this.u=a;this.v=b;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},lerpSelf:function(a,b){this.u+=(a.u-this.u)*b;this.v+=(a.v-this.v)*b;return this},clone:function(){return new THREE.UV(this.u,this.v)}};
THREE.Geometry=function(){THREE.GeometryLibrary.push(this);this.id=THREE.GeometryIdCount++;this.name="";this.vertices=[];this.colors=[];this.materials=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=
this.verticesNeedUpdate=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix4;b.extractRotation(a);for(var c=0,d=this.vertices.length;c<d;c++)a.multiplyVector3(this.vertices[c]);c=0;for(d=this.faces.length;c<d;c++){var e=this.faces[c];b.multiplyVector3(e.normal);for(var f=0,g=e.vertexNormals.length;f<g;f++)b.multiplyVector3(e.vertexNormals[f]);a.multiplyVector3(e.centroid)}},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c.centroid.set(0,
0,0),c instanceof THREE.Face3?(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.addSelf(this.vertices[c.d]),c.centroid.divideScalar(4))},computeFaceNormals:function(){var a,b,c,d,e,f,g=new THREE.Vector3,h=new THREE.Vector3;a=0;for(b=this.faces.length;a<
b;a++)c=this.faces[a],d=this.vertices[c.a],e=this.vertices[c.b],f=this.vertices[c.c],g.sub(f,e),h.sub(d,e),g.crossSelf(h),g.isZero()||g.normalize(),c.normal.copy(g)},computeVertexNormals:function(){var a,b,c,d;if(void 0===this.__tmpVertices){d=this.__tmpVertices=Array(this.vertices.length);a=0;for(b=this.vertices.length;a<b;a++)d[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:
c instanceof THREE.Face4&&(c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else{d=this.__tmpVertices;a=0;for(b=this.vertices.length;a<b;a++)d[a].set(0,0,0)}a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal)):c instanceof THREE.Face4&&(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal),d[c.d].addSelf(c.normal));a=0;for(b=this.vertices.length;a<
b;a++)d[a].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c])):c instanceof THREE.Face4&&(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c]),c.vertexNormals[3].copy(d[c.d]))},computeMorphNormals:function(){var a,b,c,d,e;c=0;for(d=this.faces.length;c<d;c++){e=this.faces[c];e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):
e.__originalFaceNormal=e.normal.clone();e.__originalVertexNormals||(e.__originalVertexNormals=[]);a=0;for(b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone()}var f=new THREE.Geometry;f.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];var g=this.morphNormals[a].faceNormals,
h=this.morphNormals[a].vertexNormals,i,k;c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],i=new THREE.Vector3,k=e instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},g.push(i),h.push(k)}g=this.morphNormals[a];f.vertices=this.morphTargets[a].vertices;f.computeFaceNormals();f.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],i=g.faceNormals[c],k=g.vertexNormals[c],
i.copy(e.normal),e instanceof THREE.Face3?(k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2])):(k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2]),k.d.copy(e.vertexNormals[3]))}c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){function a(a,b,c,d,e,f,A){h=a.vertices[b];i=a.vertices[c];k=a.vertices[d];j=g[e];l=g[f];m=g[A];p=i.x-
h.x;n=k.x-h.x;q=i.y-h.y;t=k.y-h.y;s=i.z-h.z;x=k.z-h.z;u=l.u-j.u;r=m.u-j.u;y=l.v-j.v;w=m.v-j.v;v=1/(u*w-r*y);G.set((w*p-y*n)*v,(w*q-y*t)*v,(w*s-y*x)*v);H.set((u*n-r*p)*v,(u*t-r*q)*v,(u*x-r*s)*v);F[b].addSelf(G);F[c].addSelf(G);F[d].addSelf(G);C[b].addSelf(H);C[c].addSelf(H);C[d].addSelf(H)}var b,c,d,e,f,g,h,i,k,j,l,m,p,n,q,t,s,x,u,r,y,w,v,A,F=[],C=[],G=new THREE.Vector3,H=new THREE.Vector3,D=new THREE.Vector3,J=new THREE.Vector3,L=new THREE.Vector3;b=0;for(c=this.vertices.length;b<c;b++)F[b]=new THREE.Vector3,
C[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)f=this.faces[b],g=this.faceVertexUvs[0][b],f instanceof THREE.Face3?a(this,f.a,f.b,f.c,0,1,2):f instanceof THREE.Face4&&(a(this,f.a,f.b,f.d,0,1,3),a(this,f.b,f.c,f.d,1,2,3));var K=["a","b","c","d"];b=0;for(c=this.faces.length;b<c;b++){f=this.faces[b];for(d=0;d<f.vertexNormals.length;d++)L.copy(f.vertexNormals[d]),e=f[K[d]],A=F[e],D.copy(A),D.subSelf(L.multiplyScalar(L.dot(A))).normalize(),J.cross(f.vertexNormals[d],A),e=J.dot(C[e]),e=0>e?
-1:1,f.vertexTangents[d]=new THREE.Vector4(D.x,D.y,D.z,e)}this.hasTangents=!0},computeBoundingBox:function(){this.boundingBox||(this.boundingBox={min:new THREE.Vector3,max:new THREE.Vector3});if(0<this.vertices.length){var a;a=this.vertices[0];this.boundingBox.min.copy(a);this.boundingBox.max.copy(a);for(var b=this.boundingBox.min,c=this.boundingBox.max,d=1,e=this.vertices.length;d<e;d++)(a=this.vertices[d],a.x<b.x?b.x=a.x:a.x>c.x&&(c.x=a.x),a.y<b.y?b.y=a.y:a.y>c.y&&(c.y=a.y),a.z<b.z)?b.z=a.z:a.z>
c.z&&(c.z=a.z)}else this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){var a=0;null===this.boundingSphere&&(this.boundingSphere={radius:0});for(var b=0,c=this.vertices.length;b<c;b++){var d=this.vertices[b].lengthSq();d>a&&(a=d)}this.boundingSphere.radius=Math.sqrt(a)},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),f,g,h,i;f=0;for(g=this.vertices.length;f<g;f++)d=this.vertices[f],d=[Math.round(d.x*e),Math.round(d.y*e),Math.round(d.z*e)].join("_"),
void 0===a[d]?(a[d]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[d]];f=0;for(g=this.faces.length;f<g;f++)if(a=this.faces[f],a instanceof THREE.Face3)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c];else if(a instanceof THREE.Face4){a.a=c[a.a];a.b=c[a.b];a.c=c[a.c];a.d=c[a.d];d=[a.a,a.b,a.c,a.d];for(e=3;0<e;e--)if(d.indexOf(a["abcd"[e]])!==e){d.splice(e,1);this.faces[f]=new THREE.Face3(d[0],d[1],d[2],a.normal,a.color,a.materialIndex);d=0;for(h=this.faceVertexUvs.length;d<h;d++)(i=this.faceVertexUvs[d][f])&&
i.splice(e,1);this.faces[f].vertexColors=a.vertexColors;break}}c=this.vertices.length-b.length;this.vertices=b;return c},clone:function(){},deallocate:function(){var a=THREE.GeometryLibrary.indexOf(this);-1!==a&&THREE.GeometryLibrary.splice(a,1)}};THREE.GeometryIdCount=0;THREE.GeometryLibrary=[];
THREE.BufferGeometry=function(){THREE.GeometryLibrary.push(this);this.id=THREE.GeometryIdCount++;this.attributes={};this.dynamic=!1;this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.morphTargets=[]};
THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(a){var b,c;this.attributes.position&&(b=this.attributes.position.array);this.attributes.normal&&(c=this.attributes.normal.array);void 0!==b&&(a.multiplyVector3Array(b),this.verticesNeedUpdate=!0);void 0!==c&&(b=new THREE.Matrix4,b.extractRotation(a),b.multiplyVector3Array(c),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){this.boundingBox||(this.boundingBox={min:new THREE.Vector3(Infinity,Infinity,Infinity),
max:new THREE.Vector3(-Infinity,-Infinity,-Infinity)});var a=this.attributes.position.array;if(a)for(var b=this.boundingBox,c,d,e,f=0,g=a.length;f<g;f+=3)(c=a[f],d=a[f+1],e=a[f+2],c<b.min.x?b.min.x=c:c>b.max.x&&(b.max.x=c),d<b.min.y?b.min.y=d:d>b.max.y&&(b.max.y=d),e<b.min.z)?b.min.z=e:e>b.max.z&&(b.max.z=e);if(void 0===a||0===a.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){this.boundingSphere||(this.boundingSphere={radius:0});var a=this.attributes.position.array;
if(a){for(var b,c=0,d,e,f=0,g=a.length;f<g;f+=3)b=a[f],d=a[f+1],e=a[f+2],b=b*b+d*d+e*e,b>c&&(c=b);this.boundingSphere.radius=Math.sqrt(c)}},computeVertexNormals:function(){if(this.attributes.position&&this.attributes.index){var a,b,c,d;a=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(a),numItems:a};else{a=0;for(b=this.attributes.normal.array.length;a<b;a++)this.attributes.normal.array[a]=0}var e=this.offsets,f=this.attributes.index.array,
g=this.attributes.position.array,h=this.attributes.normal.array,i,k,j,l,m,p,n=new THREE.Vector3,q=new THREE.Vector3,t=new THREE.Vector3,s=new THREE.Vector3,x=new THREE.Vector3;c=0;for(d=e.length;c<d;++c){b=e[c].start;i=e[c].count;var u=e[c].index;a=b;for(b+=i;a<b;a+=3)i=u+f[a],k=u+f[a+1],j=u+f[a+2],l=g[3*i],m=g[3*i+1],p=g[3*i+2],n.set(l,m,p),l=g[3*k],m=g[3*k+1],p=g[3*k+2],q.set(l,m,p),l=g[3*j],m=g[3*j+1],p=g[3*j+2],t.set(l,m,p),s.sub(t,q),x.sub(n,q),s.crossSelf(x),h[3*i]+=s.x,h[3*i+1]+=s.y,h[3*i+
2]+=s.z,h[3*k]+=s.x,h[3*k+1]+=s.y,h[3*k+2]+=s.z,h[3*j]+=s.x,h[3*j+1]+=s.y,h[3*j+2]+=s.z}a=0;for(b=h.length;a<b;a+=3)l=h[a],m=h[a+1],p=h[a+2],c=1/Math.sqrt(l*l+m*m+p*p),h[a]*=c,h[a+1]*=c,h[a+2]*=c;this.normalsNeedUpdate=!0}},computeTangents:function(){function a(a){ca.x=d[3*a];ca.y=d[3*a+1];ca.z=d[3*a+2];ha.copy(ca);O=i[a];N.copy(O);N.subSelf(ca.multiplyScalar(ca.dot(O))).normalize();S.cross(ha,O);Q=S.dot(k[a]);E=0>Q?-1:1;h[4*a]=N.x;h[4*a+1]=N.y;h[4*a+2]=N.z;h[4*a+3]=E}if(void 0===this.attributes.index||
void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var b=this.attributes.index.array,c=this.attributes.position.array,d=this.attributes.normal.array,e=this.attributes.uv.array,f=c.length/3;if(void 0===this.attributes.tangent){var g=4*f;this.attributes.tangent={itemSize:4,array:new Float32Array(g),numItems:g}}for(var h=this.attributes.tangent.array,
i=[],k=[],g=0;g<f;g++)i[g]=new THREE.Vector3,k[g]=new THREE.Vector3;var j,l,m,p,n,q,t,s,x,u,r,y,w,v,A,f=new THREE.Vector3,g=new THREE.Vector3,F,C,G,H,D,J,L,K=this.offsets;G=0;for(H=K.length;G<H;++G){C=K[G].start;D=K[G].count;var M=K[G].index;F=C;for(C+=D;F<C;F+=3)D=M+b[F],J=M+b[F+1],L=M+b[F+2],j=c[3*D],l=c[3*D+1],m=c[3*D+2],p=c[3*J],n=c[3*J+1],q=c[3*J+2],t=c[3*L],s=c[3*L+1],x=c[3*L+2],u=e[2*D],r=e[2*D+1],y=e[2*J],w=e[2*J+1],v=e[2*L],A=e[2*L+1],p-=j,j=t-j,n-=l,l=s-l,q-=m,m=x-m,y-=u,u=v-u,w-=r,r=A-
r,A=1/(y*r-u*w),f.set((r*p-w*j)*A,(r*n-w*l)*A,(r*q-w*m)*A),g.set((y*j-u*p)*A,(y*l-u*n)*A,(y*m-u*q)*A),i[D].addSelf(f),i[J].addSelf(f),i[L].addSelf(f),k[D].addSelf(g),k[J].addSelf(g),k[L].addSelf(g)}var N=new THREE.Vector3,S=new THREE.Vector3,ca=new THREE.Vector3,ha=new THREE.Vector3,E,O,Q;G=0;for(H=K.length;G<H;++G){C=K[G].start;D=K[G].count;M=K[G].index;F=C;for(C+=D;F<C;F+=3)D=M+b[F],J=M+b[F+1],L=M+b[F+2],a(D),a(J),a(L)}this.tangentsNeedUpdate=this.hasTangents=!0}},deallocate:function(){var a=THREE.GeometryLibrary.indexOf(this);
-1!==a&&THREE.GeometryLibrary.splice(a,1)}};
THREE.Spline=function(a){function b(a,b,c,d,e,f,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,f,g,h,i,k,j,l,m;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;f=Math.floor(e);g=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>this.points.length-2?this.points.length-1:f+1;c[3]=f>this.points.length-3?this.points.length-1:
f+2;k=this.points[c[0]];j=this.points[c[1]];l=this.points[c[2]];m=this.points[c[3]];h=g*g;i=g*h;d.x=b(k.x,j.x,l.x,m.x,g,h,i);d.y=b(k.y,j.y,l.y,m.y,g,h,i);d.z=b(k.z,j.z,l.z,m.z,g,h,i);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,e=b=b=0,f=new THREE.Vector3,g=new THREE.Vector3,h=[],i=0;h[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=
a/c,d=this.getPoint(b),g.copy(d),i+=g.distanceTo(f),f.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=e&&(h[b]=i,e=b);h[h.length]=i;return{chunks:h,total:i}};this.reparametrizeByArcLength=function(a){var b,c,d,e,f,g,h=[],i=new THREE.Vector3,j=this.getLength();h.push(i.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=j.chunks[b]-j.chunks[b-1];g=Math.ceil(a*c/j.total);e=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<g-1;c++)d=e+c*(1/g)*(f-e),d=this.getPoint(d),
h.push(i.copy(d).clone());h.push(i.copy(this.points[b]).clone())}this.points=h}};THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);!0===this.rotationAutoUpdate&&this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)};
THREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:0.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};
THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:0.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);this.fov=2*Math.atan(b/(2*a))*(180/Math.PI);this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=e;this.height=f;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};
THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);
THREE.DirectionalLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=
!1;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);
THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a);this.groundColor=new THREE.Color(b);this.position=new THREE.Vector3(0,100,0);this.intensity=void 0!==c?c:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);
THREE.SpotLight=function(a,b,c,d,e){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/2;this.exponent=void 0!==e?e:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=
this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ",b=a.total?b+((100*a.loaded/
a.total).toFixed(0)+"%"):b+((a.loaded/1E3).toFixed(2)+" KB");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split("/");a.pop();return(1>a.length?".":a.join("/"))+"/"},initMaterials:function(a,b,c){a.materials=[];for(var d=0;d<b.length;++d)a.materials[d]=THREE.Loader.prototype.createMaterial(b[d],c)},hasNormals:function(a){var b,c,d=a.materials.length;for(c=0;c<d;c++)if(b=a.materials[c],b instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function c(a){a=
Math.log(a)/Math.LN2;return Math.floor(a)==a}function d(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function e(a,e,f,h,i,k,t){var s=f.toLowerCase().endsWith(".dds"),x=b+"/"+f;if(s){var u=THREE.ImageUtils.loadCompressedTexture(x);a[e]=u}else u=document.createElement("canvas"),a[e]=new THREE.Texture(u);a[e].sourceFile=f;if(h&&(a[e].repeat.set(h[0],h[1]),1!==h[0]&&(a[e].wrapS=THREE.RepeatWrapping),1!==h[1]))a[e].wrapT=THREE.RepeatWrapping;i&&a[e].offset.set(i[0],i[1]);if(k&&(f={repeat:THREE.RepeatWrapping,
mirror:THREE.MirroredRepeatWrapping},void 0!==f[k[0]]&&(a[e].wrapS=f[k[0]]),void 0!==f[k[1]]))a[e].wrapT=f[k[1]];t&&(a[e].anisotropy=t);if(!s){var r=a[e],a=new Image;a.onload=function(){if(!c(this.width)||!c(this.height)){var a=d(this.width),b=d(this.height);r.image.width=a;r.image.height=b;r.image.getContext("2d").drawImage(this,0,0,a,b)}else r.image=this;r.needsUpdate=true};a.crossOrigin=g.crossOrigin;a.src=x}}function f(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var g=this,h="MeshLambertMaterial",
i={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var k=a.shading.toLowerCase();"phong"===k?h="MeshPhongMaterial":"basic"===k&&(h="MeshBasicMaterial")}void 0!==a.blending&&void 0!==THREE[a.blending]&&(i.blending=THREE[a.blending]);if(void 0!==a.transparent||1>a.opacity)i.transparent=a.transparent;void 0!==a.depthTest&&(i.depthTest=a.depthTest);void 0!==a.depthWrite&&(i.depthWrite=a.depthWrite);void 0!==a.visible&&(i.visible=a.visible);void 0!==
a.flipSided&&(i.side=THREE.BackSide);void 0!==a.doubleSided&&(i.side=THREE.DoubleSide);void 0!==a.wireframe&&(i.wireframe=a.wireframe);void 0!==a.vertexColors&&("face"===a.vertexColors?i.vertexColors=THREE.FaceColors:a.vertexColors&&(i.vertexColors=THREE.VertexColors));a.colorDiffuse?i.color=f(a.colorDiffuse):a.DbgColor&&(i.color=a.DbgColor);a.colorSpecular&&(i.specular=f(a.colorSpecular));a.colorAmbient&&(i.ambient=f(a.colorAmbient));a.transparency&&(i.opacity=a.transparency);a.specularCoef&&(i.shininess=
a.specularCoef);a.mapDiffuse&&b&&e(i,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy);a.mapLight&&b&&e(i,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);a.mapBump&&b&&e(i,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);a.mapNormal&&b&&e(i,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);a.mapSpecular&&b&&e(i,"specularMap",
a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);a.mapBumpScale&&(i.bumpScale=a.mapBumpScale);a.mapNormal?(h=THREE.ShaderUtils.lib.normal,k=THREE.UniformsUtils.clone(h.uniforms),k.tNormal.value=i.normalMap,a.mapNormalFactor&&k.uNormalScale.value.set(a.mapNormalFactor,a.mapNormalFactor),i.map&&(k.tDiffuse.value=i.map,k.enableDiffuse.value=!0),i.specularMap&&(k.tSpecular.value=i.specularMap,k.enableSpecular.value=!0),i.lightMap&&(k.tAO.value=i.lightMap,
k.enableAO.value=!0),k.uDiffuseColor.value.setHex(i.color),k.uSpecularColor.value.setHex(i.specular),k.uAmbientColor.value.setHex(i.ambient),k.uShininess.value=i.shininess,void 0!==i.opacity&&(k.uOpacity.value=i.opacity),i=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:k,lights:!0,fog:!0})):i=new THREE[h](i);void 0!==a.DbgName&&(i.name=a.DbgName);return i}};THREE.BinaryLoader=function(a){THREE.Loader.call(this,a)};THREE.BinaryLoader.prototype=Object.create(THREE.Loader.prototype);
THREE.BinaryLoader.prototype.load=function(a,b,c,d){var c=c?c:this.extractUrlBase(a),d=d?d:this.extractUrlBase(a),e=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart();this.loadAjaxJSON(this,a,b,c,d,e)};
THREE.BinaryLoader.prototype.loadAjaxJSON=function(a,b,c,d,e,f){var g=new XMLHttpRequest;g.onreadystatechange=function(){if(4==g.readyState)if(200==g.status||0==g.status){var h=JSON.parse(g.responseText);a.loadAjaxBuffers(h,c,e,d,f)}else console.error("THREE.BinaryLoader: Couldn't load ["+b+"] ["+g.status+"]")};g.open("GET",b,!0);g.send(null)};
THREE.BinaryLoader.prototype.loadAjaxBuffers=function(a,b,c,d,e){var f=new XMLHttpRequest,g=c+"/"+a.buffers,h=0;f.onreadystatechange=function(){if(4==f.readyState)if(200==f.status||0==f.status){var c=f.response;void 0===c&&(c=(new Uint8Array(f.responseBody)).buffer);THREE.BinaryLoader.prototype.createBinModel(c,b,d,a.materials)}else console.error("THREE.BinaryLoader: Couldn't load ["+g+"] ["+f.status+"]");else 3==f.readyState?e&&(0==h&&(h=f.getResponseHeader("Content-Length")),e({total:h,loaded:f.responseText.length})):
2==f.readyState&&(h=f.getResponseHeader("Content-Length"))};f.open("GET",g,!0);f.responseType="arraybuffer";f.send(null)};
THREE.BinaryLoader.prototype.createBinModel=function(a,b,c,d){var e=function(b){var c,e,i,k,j,l,m,p,n,q,t,s,x,u,r;function y(a){return a%4?4-a%4:0}function w(a,b){return(new Uint8Array(a,b,1))[0]}function v(a,b){return(new Uint32Array(a,b,1))[0]}function A(b,c){var d,e,f,g,h,i,j,k,m=new Uint32Array(a,c,3*b);for(d=0;d<b;d++){e=m[3*d];f=m[3*d+1];g=m[3*d+2];h=M[2*e];e=M[2*e+1];i=M[2*f];j=M[2*f+1];f=M[2*g];k=M[2*g+1];g=J.faceVertexUvs[0];var l=[];l.push(new THREE.UV(h,e));l.push(new THREE.UV(i,j));l.push(new THREE.UV(f,
k));g.push(l)}}function F(b,c){var d,e,f,g,h,i,j,k,m,l,n=new Uint32Array(a,c,4*b);for(d=0;d<b;d++){e=n[4*d];f=n[4*d+1];g=n[4*d+2];h=n[4*d+3];i=M[2*e];e=M[2*e+1];j=M[2*f];m=M[2*f+1];k=M[2*g];l=M[2*g+1];g=M[2*h];f=M[2*h+1];h=J.faceVertexUvs[0];var p=[];p.push(new THREE.UV(i,e));p.push(new THREE.UV(j,m));p.push(new THREE.UV(k,l));p.push(new THREE.UV(g,f));h.push(p)}}function C(b,c,d){for(var e,f,g,h,c=new Uint32Array(a,c,3*b),i=new Uint16Array(a,d,b),d=0;d<b;d++)e=c[3*d],f=c[3*d+1],g=c[3*d+2],h=i[d],
J.faces.push(new THREE.Face3(e,f,g,null,null,h))}function G(b,c,d){for(var e,f,g,h,i,c=new Uint32Array(a,c,4*b),j=new Uint16Array(a,d,b),d=0;d<b;d++)e=c[4*d],f=c[4*d+1],g=c[4*d+2],h=c[4*d+3],i=j[d],J.faces.push(new THREE.Face4(e,f,g,h,null,null,i))}function H(b,c,d,e){for(var f,g,h,i,j,k,m,c=new Uint32Array(a,c,3*b),d=new Uint32Array(a,d,3*b),l=new Uint16Array(a,e,b),e=0;e<b;e++){f=c[3*e];g=c[3*e+1];h=c[3*e+2];j=d[3*e];k=d[3*e+1];m=d[3*e+2];i=l[e];var n=K[3*k],p=K[3*k+1];k=K[3*k+2];var q=K[3*m],r=
K[3*m+1];m=K[3*m+2];J.faces.push(new THREE.Face3(f,g,h,[new THREE.Vector3(K[3*j],K[3*j+1],K[3*j+2]),new THREE.Vector3(n,p,k),new THREE.Vector3(q,r,m)],null,i))}}function D(b,c,d,e){for(var f,g,h,i,j,k,m,l,n,c=new Uint32Array(a,c,4*b),d=new Uint32Array(a,d,4*b),p=new Uint16Array(a,e,b),e=0;e<b;e++){f=c[4*e];g=c[4*e+1];h=c[4*e+2];i=c[4*e+3];k=d[4*e];m=d[4*e+1];l=d[4*e+2];n=d[4*e+3];j=p[e];var q=K[3*m],r=K[3*m+1];m=K[3*m+2];var t=K[3*l],s=K[3*l+1];l=K[3*l+2];var u=K[3*n],v=K[3*n+1];n=K[3*n+2];J.faces.push(new THREE.Face4(f,
g,h,i,[new THREE.Vector3(K[3*k],K[3*k+1],K[3*k+2]),new THREE.Vector3(q,r,m),new THREE.Vector3(t,s,l),new THREE.Vector3(u,v,n)],null,j))}}var J=this,L=0,K=[],M=[],N,S,ca;THREE.Geometry.call(this);THREE.Loader.prototype.initMaterials(J,d,b);r=a;S=L;b=new Uint8Array(r,S,12);q="";for(x=0;12>x;x++)q+=String.fromCharCode(b[S+x]);c=w(r,S+12);w(r,S+13);w(r,S+14);w(r,S+15);e=w(r,S+16);i=w(r,S+17);k=w(r,S+18);j=w(r,S+19);l=v(r,S+20);m=v(r,S+20+4);p=v(r,S+20+8);n=v(r,S+20+12);q=v(r,S+20+16);t=v(r,S+20+20);s=
v(r,S+20+24);x=v(r,S+20+28);b=v(r,S+20+32);u=v(r,S+20+36);r=v(r,S+20+40);L+=c;S=3*e+j;ca=4*e+j;N=n*S;c=q*(S+3*i);e=t*(S+3*k);j=s*(S+3*i+3*k);S=x*ca;i=b*(ca+4*i);k=u*(ca+4*k);ca=L;var L=new Float32Array(a,L,3*l),ha,E,O,Q;for(ha=0;ha<l;ha++)E=L[3*ha],O=L[3*ha+1],Q=L[3*ha+2],J.vertices.push(new THREE.Vector3(E,O,Q));l=L=ca+3*l*Float32Array.BYTES_PER_ELEMENT;if(m){L=new Int8Array(a,L,3*m);for(ca=0;ca<m;ca++)ha=L[3*ca],E=L[3*ca+1],O=L[3*ca+2],K.push(ha/127,E/127,O/127)}L=l+3*m*Int8Array.BYTES_PER_ELEMENT;
m=L+=y(3*m);if(p){L=new Float32Array(a,L,2*p);for(l=0;l<p;l++)ca=L[2*l],ha=L[2*l+1],M.push(ca,ha)}p=L=m+2*p*Float32Array.BYTES_PER_ELEMENT;N=p+N+y(2*n);m=N+c+y(2*q);c=m+e+y(2*t);e=c+j+y(2*s);S=e+S+y(2*x);j=S+i+y(2*b);i=j+k+y(2*u);t&&(k=m+3*t*Uint32Array.BYTES_PER_ELEMENT,C(t,m,k+3*t*Uint32Array.BYTES_PER_ELEMENT),A(t,k));s&&(t=c+3*s*Uint32Array.BYTES_PER_ELEMENT,k=t+3*s*Uint32Array.BYTES_PER_ELEMENT,H(s,c,t,k+3*s*Uint32Array.BYTES_PER_ELEMENT),A(s,k));u&&(s=j+4*u*Uint32Array.BYTES_PER_ELEMENT,G(u,
j,s+4*u*Uint32Array.BYTES_PER_ELEMENT),F(u,s));r&&(u=i+4*r*Uint32Array.BYTES_PER_ELEMENT,s=u+4*r*Uint32Array.BYTES_PER_ELEMENT,D(r,i,u,s+4*r*Uint32Array.BYTES_PER_ELEMENT),F(r,s));n&&C(n,p,p+3*n*Uint32Array.BYTES_PER_ELEMENT);q&&(n=N+3*q*Uint32Array.BYTES_PER_ELEMENT,H(q,N,n,n+3*q*Uint32Array.BYTES_PER_ELEMENT));x&&G(x,e,e+4*x*Uint32Array.BYTES_PER_ELEMENT);b&&(q=S+4*b*Uint32Array.BYTES_PER_ELEMENT,D(b,S,q,q+4*b*Uint32Array.BYTES_PER_ELEMENT));this.computeCentroids();this.computeFaceNormals();THREE.Loader.prototype.hasNormals(this)&&
this.computeTangents()};e.prototype=Object.create(THREE.Geometry.prototype);b(new e(c))};THREE.ImageLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null};
THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b){var c=this;void 0===b&&(b=new Image);b.addEventListener("load",function(){c.dispatchEvent({type:"load",content:b})},!1);b.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);c.crossOrigin&&(b.crossOrigin=c.crossOrigin);b.src=a}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a)};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);
THREE.JSONLoader.prototype.load=function(a,b,c){c=c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};
THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,g=0;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var h=JSON.parse(f.responseText);a.createModel(h,c,d)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+f.status+"]");else f.readyState===f.LOADING?e&&(0===g&&(g=f.getResponseHeader("Content-Length")),
e({total:g,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&(g=f.getResponseHeader("Content-Length"))};f.open("GET",b,!0);f.send(null)};
THREE.JSONLoader.prototype.createModel=function(a,b,c){var d=new THREE.Geometry,e=void 0!==a.scale?1/a.scale:1;this.initMaterials(d,a.materials,c);var f,g,h,i,k,j,l,m,p,n,q,t,s,x,u=a.faces;p=a.vertices;var r=a.normals,y=a.colors,w=0;for(f=0;f<a.uvs.length;f++)a.uvs[f].length&&w++;for(f=0;f<w;f++)d.faceUvs[f]=[],d.faceVertexUvs[f]=[];c=0;for(i=p.length;c<i;)k=new THREE.Vector3,k.x=p[c++]*e,k.y=p[c++]*e,k.z=p[c++]*e,d.vertices.push(k);c=0;for(i=u.length;c<i;){p=u[c++];k=p&1;h=p&2;f=p&4;g=p&8;l=p&16;
j=p&32;n=p&64;p&=128;k?(q=new THREE.Face4,q.a=u[c++],q.b=u[c++],q.c=u[c++],q.d=u[c++],k=4):(q=new THREE.Face3,q.a=u[c++],q.b=u[c++],q.c=u[c++],k=3);h&&(h=u[c++],q.materialIndex=h);h=d.faces.length;if(f)for(f=0;f<w;f++)t=a.uvs[f],m=u[c++],x=t[2*m],m=t[2*m+1],d.faceUvs[f][h]=new THREE.UV(x,m);if(g)for(f=0;f<w;f++){t=a.uvs[f];s=[];for(g=0;g<k;g++)m=u[c++],x=t[2*m],m=t[2*m+1],s[g]=new THREE.UV(x,m);d.faceVertexUvs[f][h]=s}l&&(l=3*u[c++],g=new THREE.Vector3,g.x=r[l++],g.y=r[l++],g.z=r[l],q.normal=g);if(j)for(f=
0;f<k;f++)l=3*u[c++],g=new THREE.Vector3,g.x=r[l++],g.y=r[l++],g.z=r[l],q.vertexNormals.push(g);n&&(j=u[c++],j=new THREE.Color(y[j]),q.color=j);if(p)for(f=0;f<k;f++)j=u[c++],j=new THREE.Color(y[j]),q.vertexColors.push(j);d.faces.push(q)}if(a.skinWeights){c=0;for(i=a.skinWeights.length;c<i;c+=2)u=a.skinWeights[c],r=a.skinWeights[c+1],d.skinWeights.push(new THREE.Vector4(u,r,0,0))}if(a.skinIndices){c=0;for(i=a.skinIndices.length;c<i;c+=2)u=a.skinIndices[c],r=a.skinIndices[c+1],d.skinIndices.push(new THREE.Vector4(u,
r,0,0))}d.bones=a.bones;d.animation=a.animation;if(void 0!==a.morphTargets){c=0;for(i=a.morphTargets.length;c<i;c++){d.morphTargets[c]={};d.morphTargets[c].name=a.morphTargets[c].name;d.morphTargets[c].vertices=[];y=d.morphTargets[c].vertices;w=a.morphTargets[c].vertices;u=0;for(r=w.length;u<r;u+=3)p=new THREE.Vector3,p.x=w[u]*e,p.y=w[u+1]*e,p.z=w[u+2]*e,y.push(p)}}if(void 0!==a.morphColors){c=0;for(i=a.morphColors.length;c<i;c++){d.morphColors[c]={};d.morphColors[c].name=a.morphColors[c].name;d.morphColors[c].colors=
[];r=d.morphColors[c].colors;y=a.morphColors[c].colors;e=0;for(u=y.length;e<u;e+=3)w=new THREE.Color(16755200),w.setRGB(y[e],y[e+1],y[e+2]),r.push(w)}}d.computeCentroids();d.computeFaceNormals();this.hasNormals(d)&&d.computeTangents();b(d)};THREE.LoadingMonitor=function(){THREE.EventTarget.call(this);var a=this,b=0,c=0,d=function(){b++;a.dispatchEvent({type:"progress",loaded:b,total:c});b===c&&a.dispatchEvent({type:"load"})};this.add=function(a){c++;a.addEventListener("load",d,!1)}};
THREE.GeometryLoader=function(){THREE.EventTarget.call(this);this.path=this.crossOrigin=null};
THREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,load:function(a){var b=this,c=null;if(null===b.path){var d=a.split("/");d.pop();b.path=1>d.length?".":d.join("/")}d=new XMLHttpRequest;d.addEventListener("load",function(d){d.target.responseText?c=b.parse(JSON.parse(d.target.responseText),e):b.dispatchEvent({type:"error",message:"Invalid file ["+a+"]"})},!1);d.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);d.open("GET",a,
!0);d.send(null);var e=new THREE.LoadingMonitor;e.addEventListener("load",function(){b.dispatchEvent({type:"load",content:c})});e.add(d)},parse:function(a,b){var c=this,d=new THREE.Geometry,e=void 0!==a.scale?1/a.scale:1;if(a.materials){d.materials=[];for(var f=0;f<a.materials.length;++f){var g=a.materials[f],h=function(a){a=Math.log(a)/Math.LN2;return Math.floor(a)==a},i=function(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))},k=function(a,d,e,f,g,j){a[d]=new THREE.Texture;a[d].sourceFile=
e;if(f&&(a[d].repeat.set(f[0],f[1]),1!==f[0]&&(a[d].wrapS=THREE.RepeatWrapping),1!==f[1]))a[d].wrapT=THREE.RepeatWrapping;g&&a[d].offset.set(g[0],g[1]);if(j&&(f={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==f[j[0]]&&(a[d].wrapS=f[j[0]]),void 0!==f[j[1]]))a[d].wrapT=f[j[1]];var k=a[d],a=new THREE.ImageLoader;a.addEventListener("load",function(a){a=a.content;if(!h(a.width)||!h(a.height)){var b=i(a.width),c=i(a.height);k.image=document.createElement("canvas");k.image.width=
b;k.image.height=c;k.image.getContext("2d").drawImage(a,0,0,b,c)}else k.image=a;k.needsUpdate=!0});a.crossOrigin=c.crossOrigin;a.load(c.path+"/"+e);b&&b.add(a)},j=function(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]},l="MeshLambertMaterial",m={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(g.shading){var p=g.shading.toLowerCase();"phong"===p?l="MeshPhongMaterial":"basic"===p&&(l="MeshBasicMaterial")}void 0!==g.blending&&void 0!==THREE[g.blending]&&
(m.blending=THREE[g.blending]);if(void 0!==g.transparent||1>g.opacity)m.transparent=g.transparent;void 0!==g.depthTest&&(m.depthTest=g.depthTest);void 0!==g.depthWrite&&(m.depthWrite=g.depthWrite);void 0!==g.vertexColors&&("face"==g.vertexColors?m.vertexColors=THREE.FaceColors:g.vertexColors&&(m.vertexColors=THREE.VertexColors));g.colorDiffuse?m.color=j(g.colorDiffuse):g.DbgColor&&(m.color=g.DbgColor);g.colorSpecular&&(m.specular=j(g.colorSpecular));g.colorAmbient&&(m.ambient=j(g.colorAmbient));g.transparency&&
(m.opacity=g.transparency);g.specularCoef&&(m.shininess=g.specularCoef);void 0!==g.visible&&(m.visible=g.visible);void 0!==g.flipSided&&(m.side=THREE.BackSide);void 0!==g.doubleSided&&(m.side=THREE.DoubleSide);void 0!==g.wireframe&&(m.wireframe=g.wireframe);g.mapDiffuse&&k(m,"map",g.mapDiffuse,g.mapDiffuseRepeat,g.mapDiffuseOffset,g.mapDiffuseWrap);g.mapLight&&k(m,"lightMap",g.mapLight,g.mapLightRepeat,g.mapLightOffset,g.mapLightWrap);g.mapBump&&k(m,"bumpMap",g.mapBump,g.mapBumpRepeat,g.mapBumpOffset,
g.mapBumpWrap);g.mapNormal&&k(m,"normalMap",g.mapNormal,g.mapNormalRepeat,g.mapNormalOffset,g.mapNormalWrap);g.mapSpecular&&k(m,"specularMap",g.mapSpecular,g.mapSpecularRepeat,g.mapSpecularOffset,g.mapSpecularWrap);g.mapNormal?(k=THREE.ShaderUtils.lib.normal,j=THREE.UniformsUtils.clone(k.uniforms),j.tNormal.value=m.normalMap,g.mapNormalFactor&&j.uNormalScale.value.set(g.mapNormalFactor,g.mapNormalFactor),m.map&&(j.tDiffuse.value=m.map,j.enableDiffuse.value=!0),m.specularMap&&(j.tSpecular.value=m.specularMap,
j.enableSpecular.value=!0),m.lightMap&&(j.tAO.value=m.lightMap,j.enableAO.value=!0),j.uDiffuseColor.value.setHex(m.color),j.uSpecularColor.value.setHex(m.specular),j.uAmbientColor.value.setHex(m.ambient),j.uShininess.value=m.shininess,void 0!==m.opacity&&(j.uOpacity.value=m.opacity),m=new THREE.ShaderMaterial({fragmentShader:k.fragmentShader,vertexShader:k.vertexShader,uniforms:j,lights:!0,fog:!0})):m=new THREE[l](m);void 0!==g.DbgName&&(m.name=g.DbgName);d.materials[f]=m}}var g=a.faces,n=a.vertices,
m=a.normals,k=a.colors,j=0;if(a.uvs)for(f=0;f<a.uvs.length;f++)a.uvs[f].length&&j++;for(f=0;f<j;f++)d.faceUvs[f]=[],d.faceVertexUvs[f]=[];l=0;for(p=n.length;l<p;){var q=new THREE.Vector3;q.x=n[l++]*e;q.y=n[l++]*e;q.z=n[l++]*e;d.vertices.push(q)}l=0;for(p=g.length;l<p;){var t=g[l++],s=t&2,f=t&4,x=t&8,u=t&16,n=t&32,r=t&64,q=t&128;if(t&1){t=new THREE.Face4;t.a=g[l++];t.b=g[l++];t.c=g[l++];t.d=g[l++];var y=4}else t=new THREE.Face3,t.a=g[l++],t.b=g[l++],t.c=g[l++],y=3;s&&(s=g[l++],t.materialIndex=s);var w=
d.faces.length;if(f)for(f=0;f<j;f++){var v=a.uvs[f],s=g[l++],A=v[2*s],s=v[2*s+1];d.faceUvs[f][w]=new THREE.UV(A,s)}if(x)for(f=0;f<j;f++){for(var v=a.uvs[f],x=[],F=0;F<y;F++)s=g[l++],A=v[2*s],s=v[2*s+1],x[F]=new THREE.UV(A,s);d.faceVertexUvs[f][w]=x}u&&(u=3*g[l++],s=new THREE.Vector3,s.x=m[u++],s.y=m[u++],s.z=m[u],t.normal=s);if(n)for(f=0;f<y;f++)u=3*g[l++],s=new THREE.Vector3,s.x=m[u++],s.y=m[u++],s.z=m[u],t.vertexNormals.push(s);r&&(n=g[l++],t.color=new THREE.Color(k[n]));if(q)for(f=0;f<y;f++)n=
g[l++],t.vertexColors.push(new THREE.Color(k[n]));d.faces.push(t)}if(a.skinWeights){f=0;for(g=a.skinWeights.length;f<g;f+=2)d.skinWeights.push(new THREE.Vector4(a.skinWeights[f],a.skinWeights[f+1],0,0))}if(a.skinIndices){f=0;for(g=a.skinIndices.length;f<g;f+=2)m=0,d.skinIndices.push(new THREE.Vector4(a.skinIndices[f],a.skinIndices[f+1],m,0))}d.bones=a.bones;d.animation=a.animation;if(a.morphTargets){f=0;for(g=a.morphTargets.length;f<g;f++){d.morphTargets[f]={};d.morphTargets[f].name=a.morphTargets[f].name;
d.morphTargets[f].vertices=[];m=d.morphTargets[f].vertices;k=a.morphTargets[f].vertices;s=0;for(j=k.length;s<j;s+=3)q=new THREE.Vector3,q.x=k[s]*e,q.y=k[s+1]*e,q.z=k[s+2]*e,m.push(q)}}if(a.morphColors){f=0;for(g=a.morphColors.length;f<g;f++){d.morphColors[f]={};d.morphColors[f].name=a.morphColors[f].name;d.morphColors[f].colors=[];e=d.morphColors[f].colors;k=a.morphColors[f].colors;m=0;for(j=k.length;m<j;m+=3)l=new THREE.Color(16755200),l.setRGB(k[m],k[m+1],k[m+2]),e.push(l)}}d.computeCentroids();
d.computeFaceNormals();return d}};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlerMap={};this.addGeometryHandler("ascii",THREE.JSONLoader);this.addGeometryHandler("binary",THREE.BinaryLoader)};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;
THREE.SceneLoader.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(4===d.readyState)if(200===d.status||0===d.status){var e=JSON.parse(d.responseText);c.parse(e,b,a)}else console.error("THREE.SceneLoader: Couldn't load ["+a+"] ["+d.status+"]")};d.open("GET",a,!0);d.send(null)};THREE.SceneLoader.prototype.addGeometryHandler=function(a,b){this.geometryHandlerMap[a]={loaderClass:b}};
THREE.SceneLoader.prototype.parse=function(a,b,c){function d(a,b){return"relativeToHTML"==b?a:k+"/"+a}function e(a,b){for(var c in b)if(void 0===M.objects[c]){var d=b[c],f=null;if(void 0!==d.geometry){if(A=M.geometries[d.geometry])f=!1,F=M.materials[d.materials[0]],(f=F instanceof THREE.ShaderMaterial)&&A.computeTangents(),x=d.position,u=d.rotation,r=d.quaternion,y=d.scale,t=d.matrix,r=0,0===d.materials.length&&(F=new THREE.MeshFaceMaterial),1<d.materials.length&&(F=new THREE.MeshFaceMaterial),d.morph?
(f=new THREE.MorphAnimMesh(A,F),void 0!==d.duration&&(f.duration=d.duration),void 0!==d.time&&(f.time=d.time),void 0!==d.mirroredLoop&&(f.mirroredLoop=d.mirroredLoop),F.morphNormals&&A.computeMorphNormals()):f=new THREE.Mesh(A,F),f.name=c,t?(f.matrixAutoUpdate=!1,f.matrix.set(t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],t[15])):(f.position.set(x[0],x[1],x[2]),r?(f.quaternion.set(r[0],r[1],r[2],r[3]),f.useQuaternion=!0):f.rotation.set(u[0],u[1],u[2]),f.scale.set(y[0],
y[1],y[2])),f.visible=d.visible,f.castShadow=d.castShadow,f.receiveShadow=d.receiveShadow,a.add(f),M.objects[c]=f}else x=d.position,u=d.rotation,r=d.quaternion,y=d.scale,r=0,f=new THREE.Object3D,f.name=c,f.position.set(x[0],x[1],x[2]),r?(f.quaternion.set(r[0],r[1],r[2],r[3]),f.useQuaternion=!0):f.rotation.set(u[0],u[1],u[2]),f.scale.set(y[0],y[1],y[2]),f.visible=void 0!==d.visible?d.visible:!1,a.add(f),M.objects[c]=f,M.empties[c]=f;if(f){if(void 0!==d.properties)for(var g in d.properties)f.properties[g]=
d.properties[g];void 0!==d.children&&e(f,d.children)}}}function f(a){return function(b){M.geometries[a]=b;e(M.scene,N.objects);D-=1;i.onLoadComplete();h()}}function g(a){return function(b){M.geometries[a]=b}}function h(){i.callbackProgress({totalModels:L,totalTextures:K,loadedModels:L-D,loadedTextures:K-J},M);i.onLoadProgress();0===D&&0===J&&b(M)}var i=this,k=THREE.Loader.prototype.extractUrlBase(c),j,l,m,p,n,q,t,s,x,u,r,y,w,v,A,F,C,G,H,D,J,L,K,M,N=a;for(w in this.geometryHandlerMap)this.geometryHandlerMap[w].loaderObject=
new this.geometryHandlerMap[w].loaderClass;J=D=0;M={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{}};if(N.transform&&(a=N.transform.position,c=N.transform.rotation,w=N.transform.scale,a&&M.scene.position.set(a[0],a[1],a[2]),c&&M.scene.rotation.set(c[0],c[1],c[2]),w&&M.scene.scale.set(w[0],w[1],w[2]),a||c||w))M.scene.updateMatrix(),M.scene.updateMatrixWorld();a=function(a){return function(){J-=a;h();i.onLoadComplete()}};for(p in N.cameras)w=
N.cameras[p],"perspective"===w.type?C=new THREE.PerspectiveCamera(w.fov,w.aspect,w.near,w.far):"ortho"===w.type&&(C=new THREE.OrthographicCamera(w.left,w.right,w.top,w.bottom,w.near,w.far)),x=w.position,c=w.target,w=w.up,C.position.set(x[0],x[1],x[2]),C.target=new THREE.Vector3(c[0],c[1],c[2]),w&&C.up.set(w[0],w[1],w[2]),M.cameras[p]=C;for(m in N.lights)c=N.lights[m],p=void 0!==c.color?c.color:16777215,C=void 0!==c.intensity?c.intensity:1,"directional"===c.type?(x=c.direction,s=new THREE.DirectionalLight(p,
C),s.position.set(x[0],x[1],x[2]),s.position.normalize()):"point"===c.type?(x=c.position,s=c.distance,s=new THREE.PointLight(p,C,s),s.position.set(x[0],x[1],x[2])):"ambient"===c.type&&(s=new THREE.AmbientLight(p)),M.scene.add(s),M.lights[m]=s;for(n in N.fogs)m=N.fogs[n],"linear"===m.type?G=new THREE.Fog(0,m.near,m.far):"exp2"===m.type&&(G=new THREE.FogExp2(0,m.density)),w=m.color,G.color.setRGB(w[0],w[1],w[2]),M.fogs[n]=G;M.cameras&&N.defaults.camera&&(M.currentCamera=M.cameras[N.defaults.camera]);
M.fogs&&N.defaults.fog&&(M.scene.fog=M.fogs[N.defaults.fog]);w=N.defaults.bgcolor;M.bgColor=new THREE.Color;M.bgColor.setRGB(w[0],w[1],w[2]);M.bgColorAlpha=N.defaults.bgalpha;for(j in N.geometries)n=N.geometries[j],n.type in this.geometryHandlerMap&&(D+=1,i.onLoadStart());L=D;for(j in N.geometries)if(n=N.geometries[j],"cube"===n.type)A=new THREE.CubeGeometry(n.width,n.height,n.depth,n.segmentsWidth,n.segmentsHeight,n.segmentsDepth,null,n.flipped,n.sides),M.geometries[j]=A;else if("plane"===n.type)A=
new THREE.PlaneGeometry(n.width,n.height,n.segmentsWidth,n.segmentsHeight),M.geometries[j]=A;else if("sphere"===n.type)A=new THREE.SphereGeometry(n.radius,n.segmentsWidth,n.segmentsHeight),M.geometries[j]=A;else if("cylinder"===n.type)A=new THREE.CylinderGeometry(n.topRad,n.botRad,n.height,n.radSegs,n.heightSegs),M.geometries[j]=A;else if("torus"===n.type)A=new THREE.TorusGeometry(n.radius,n.tube,n.segmentsR,n.segmentsT),M.geometries[j]=A;else if("icosahedron"===n.type)A=new THREE.IcosahedronGeometry(n.radius,
n.subdivisions),M.geometries[j]=A;else if(n.type in this.geometryHandlerMap){G={};for(H in n)"type"!==H&&"url"!==H&&(G[H]=n[H]);this.geometryHandlerMap[n.type].loaderObject.load(d(n.url,N.urlBaseType),f(j),G)}else"embedded"===n.type&&(n=N.embeds[n.id],n.metadata=N.metadata,n&&this.geometryHandlerMap.ascii.loaderObject.createModel(n,g(j),""));for(q in N.textures)if(j=N.textures[q],j.url instanceof Array){J+=j.url.length;for(H=0;H<j.url.length;H++)i.onLoadStart()}else J+=1,i.onLoadStart();K=J;for(q in N.textures){j=
N.textures[q];void 0!==j.mapping&&void 0!==THREE[j.mapping]&&(j.mapping=new THREE[j.mapping]);if(j.url instanceof Array){n=j.url.length;G=[];for(H=0;H<n;H++)G[H]=d(j.url[H],N.urlBaseType);H=(H=G[0].endsWith(".dds"))?THREE.ImageUtils.loadCompressedTextureCube(G,j.mapping,a(n)):THREE.ImageUtils.loadTextureCube(G,j.mapping,a(n))}else{H=j.url.toLowerCase().endsWith(".dds");n=d(j.url,N.urlBaseType);G=a(1);H=H?THREE.ImageUtils.loadCompressedTexture(n,j.mapping,G):THREE.ImageUtils.loadTexture(n,j.mapping,
G);void 0!==THREE[j.minFilter]&&(H.minFilter=THREE[j.minFilter]);void 0!==THREE[j.magFilter]&&(H.magFilter=THREE[j.magFilter]);j.anisotropy&&(H.anisotropy=j.anisotropy);if(j.repeat&&(H.repeat.set(j.repeat[0],j.repeat[1]),1!==j.repeat[0]&&(H.wrapS=THREE.RepeatWrapping),1!==j.repeat[1]))H.wrapT=THREE.RepeatWrapping;j.offset&&H.offset.set(j.offset[0],j.offset[1]);if(j.wrap&&(n={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==n[j.wrap[0]]&&(H.wrapS=n[j.wrap[0]]),void 0!==n[j.wrap[1]]))H.wrapT=
n[j.wrap[1]]}M.textures[q]=H}for(l in N.materials){t=N.materials[l];for(v in t.parameters)"envMap"===v||"map"===v||"lightMap"===v||"bumpMap"===v?t.parameters[v]=M.textures[t.parameters[v]]:"shading"===v?t.parameters[v]="flat"===t.parameters[v]?THREE.FlatShading:THREE.SmoothShading:"side"===v?t.parameters[v]="double"==t.parameters[v]?THREE.DoubleSide:"back"==t.parameters[v]?THREE.BackSide:THREE.FrontSide:"blending"===v?t.parameters[v]=t.parameters[v]in THREE?THREE[t.parameters[v]]:THREE.NormalBlending:
"combine"===v?t.parameters[v]="MixOperation"==t.parameters[v]?THREE.MixOperation:THREE.MultiplyOperation:"vertexColors"===v?"face"==t.parameters[v]?t.parameters[v]=THREE.FaceColors:t.parameters[v]&&(t.parameters[v]=THREE.VertexColors):"wrapRGB"===v&&(q=t.parameters[v],t.parameters[v]=new THREE.Vector3(q[0],q[1],q[2]));void 0!==t.parameters.opacity&&1>t.parameters.opacity&&(t.parameters.transparent=!0);t.parameters.normalMap?(q=THREE.ShaderUtils.lib.normal,a=THREE.UniformsUtils.clone(q.uniforms),j=
t.parameters.color,H=t.parameters.specular,n=t.parameters.ambient,G=t.parameters.shininess,a.tNormal.value=M.textures[t.parameters.normalMap],t.parameters.normalScale&&a.uNormalScale.value.set(t.parameters.normalScale[0],t.parameters.normalScale[1]),t.parameters.map&&(a.tDiffuse.value=t.parameters.map,a.enableDiffuse.value=!0),t.parameters.envMap&&(a.tCube.value=t.parameters.envMap,a.enableReflection.value=!0,a.uReflectivity.value=t.parameters.reflectivity),t.parameters.lightMap&&(a.tAO.value=t.parameters.lightMap,
a.enableAO.value=!0),t.parameters.specularMap&&(a.tSpecular.value=M.textures[t.parameters.specularMap],a.enableSpecular.value=!0),t.parameters.displacementMap&&(a.tDisplacement.value=M.textures[t.parameters.displacementMap],a.enableDisplacement.value=!0,a.uDisplacementBias.value=t.parameters.displacementBias,a.uDisplacementScale.value=t.parameters.displacementScale),a.uDiffuseColor.value.setHex(j),a.uSpecularColor.value.setHex(H),a.uAmbientColor.value.setHex(n),a.uShininess.value=G,t.parameters.opacity&&
(a.uOpacity.value=t.parameters.opacity),F=new THREE.ShaderMaterial({fragmentShader:q.fragmentShader,vertexShader:q.vertexShader,uniforms:a,lights:!0,fog:!0})):F=new THREE[t.type](t.parameters);M.materials[l]=F}e(M.scene,N.objects);i.callbackSync(M);h()};THREE.TextureLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null};
THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a){var b=this,c=new Image;c.addEventListener("load",function(){var a=new THREE.Texture(c);a.needsUpdate=!0;b.dispatchEvent({type:"load",content:a})},!1);c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);b.crossOrigin&&(c.crossOrigin=b.crossOrigin);c.src=a}};
THREE.Material=function(){THREE.MaterialLibrary.push(this);this.id=THREE.MaterialIdCount++;this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.overdraw=!1;this.needsUpdate=this.visible=!0};
THREE.Material.prototype.setValues=function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn("THREE.Material: '"+b+"' parameter is undefined.");else if(b in this){var d=this[b];d instanceof THREE.Color&&c instanceof THREE.Color?d.copy(c):d instanceof THREE.Color&&"number"===typeof c?d.setHex(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]=c}}};
THREE.Material.prototype.clone=function(a){void 0===a&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;
a.visible=this.visible;return a};THREE.Material.prototype.deallocate=function(){var a=THREE.MaterialLibrary.indexOf(this);-1!==a&&THREE.MaterialLibrary.splice(a,1)};THREE.MaterialIdCount=0;THREE.MaterialLibrary=[];THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};
THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=
this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=
"round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;
a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.wrapAround=this.perPixel=this.metal=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=
1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.perPixel=this.perPixel;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);
a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};
THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshFaceMaterial=function(){};
THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial};THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleBasicMaterial.prototype.clone=function(){var a=new THREE.ParticleBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(){};this.setValues(a)};THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleCanvasMaterial.prototype.clone=function(){var a=new THREE.ParticleCanvasMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.program=this.program;return a};THREE.ParticleDOMMaterial=function(a){this.element=a};THREE.ParticleDOMMaterial.prototype.clone=function(){return new THREE.ParticleDOMMaterial(this.element)};
THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=this.uniforms;a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=
this.morphNormals;return a};
THREE.Texture=function(a,b,c,d,e,f,g,h,i){THREE.TextureLibrary.push(this);this.id=THREE.TextureIdCount++;this.image=a;this.mapping=void 0!==b?b:new THREE.UVMapping;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==e?e:THREE.LinearFilter;this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==i?i:1;this.format=void 0!==g?g:THREE.RGBAFormat;this.type=void 0!==h?h:THREE.UnsignedByteType;this.offset=
new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.needsUpdate=!1;this.onUpdate=null};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture;a.image=this.image;a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;return a},deallocate:function(){var a=THREE.TextureLibrary.indexOf(this);
-1!==a&&THREE.TextureLibrary.splice(a,1)}};THREE.TextureIdCount=0;THREE.TextureLibrary=[];THREE.CompressedTexture=function(a,b,c,d,e,f,g,h,i,k){THREE.Texture.call(this,null,f,g,h,i,k,d,e);this.image={width:b,height:c};this.mipmaps=a};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);
THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;a.image=this.image;a.mipmaps=this.mipmaps;a.format=this.format;a.type=this.type;a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.DataTexture=function(a,b,c,d,e,f,g,h,i,k){THREE.Texture.call(this,null,f,g,h,i,k,d,e);this.image={data:a,width:b,height:c}};
THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.image.data,this.image.width,this.image.height,this.format,this.type,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=Object.create(THREE.Object3D.prototype);
THREE.Particle.prototype.clone=function(a){void 0===a&&(a=new THREE.Particle(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.ParticleBasicMaterial({color:16777215*Math.random()});this.sortParticles=!1;this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius);this.frustumCulled=!1};
THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);THREE.ParticleSystem.prototype.clone=function(a){void 0===a&&(a=new THREE.ParticleSystem(this.geometry,this.material));a.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,a);return a};
THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==c?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);
THREE.Line.prototype.clone=function(a){void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,a);return a};
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0});if(this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var c=0;c<this.geometry.morphTargets.length;c++)this.morphTargetInfluences.push(0),
this.morphTargetDictionary[this.geometry.morphTargets[c].name]=c}};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};
THREE.Mesh.prototype.clone=function(a){void 0===a&&(a=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);
THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)};
THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var d,e,f;if(void 0!==this.geometry.bones){for(a=0;a<this.geometry.bones.length;a++)c=this.geometry.bones[a],d=c.pos,e=c.rotq,f=c.scl,b=this.addBone(),b.name=c.name,b.position.set(d[0],d[1],d[2]),b.quaternion.set(e[0],e[1],e[2],e[3]),b.useQuaternion=!0,void 0!==f?b.scale.set(f[0],f[1],f[2]):b.scale.set(1,1,1);for(a=0;a<this.bones.length;a++)c=
this.geometry.bones[a],b=this.bones[a],-1===c.parent?this.add(b):this.bones[c.parent].add(b);a=this.bones.length;this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=a=256<a?64:64<a?32:16<a?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=
THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*a);this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(a){void 0===a&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var a=0,b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];a=0;for(b=this.bones.length;a<
b;a++)c=new THREE.Matrix4,c.getInverse(this.bones[a].skinMatrix),this.boneInverses.push(c)}a=0;for(b=this.bones.length;a<b;a++)THREE.SkinnedMesh.offsetMatrix.multiply(this.bones[a].skinMatrix,this.boneInverses[a]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*a);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)};
THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1)}};THREE.SkinnedMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,a);return a};THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4;
THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};
THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};
THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)(\d+)/,e=0,f=a.morphTargets.length;e<f;e++){var g=a.morphTargets[e].name.match(d);if(g&&1<g.length){g=g[1];c[g]||(c[g]={start:Infinity,end:-Infinity});var h=c[g];e<h.start&&(h.start=e);e>h.end&&(h.end=e);b||(b=g)}}a.firstAnimation=b};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=1E3*((c.end-c.start)/b),this.time=0):console.warn("animation["+a+"] undefined")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)if(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time)this.time=0,this.directionBackwards=!1}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&
(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};
THREE.MorphAnimMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.MorphAnimMesh(this.geometry,this.material));a.duration=this.duration;a.mirroredLoop=this.mirroredLoop;a.time=this.time;a.lastKeyframe=this.lastKeyframe;a.currentKeyframe=this.currentKeyframe;a.direction=this.direction;a.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,a);return a};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype);
THREE.Ribbon.prototype.clone=function(a){void 0===a&&(a=new THREE.Ribbon(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);for(var b=Math.abs(b),c=0;c<this.LODs.length&&!(b<this.LODs[c].visibleAtDistance);c++);this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};
THREE.LOD.prototype.update=function(a){if(1<this.LODs.length){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.elements[2]*this.matrixWorld.elements[12]+a.elements[6]*this.matrixWorld.elements[13]+a.elements[10]*this.matrixWorld.elements[14]+a.elements[14]);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=
!1}};THREE.LOD.prototype.clone=function(){};
THREE.Sprite=function(a){THREE.Object3D.call(this);this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.map=void 0!==a.map?a.map:new THREE.Texture;this.blending=void 0!==a.blending?a.blending:THREE.NormalBlending;this.blendSrc=void 0!==a.blendSrc?a.blendSrc:THREE.SrcAlphaFactor;this.blendDst=void 0!==a.blendDst?a.blendDst:THREE.OneMinusSrcAlphaFactor;this.blendEquation=void 0!==a.blendEquation?a.blendEquation:THREE.AddEquation;this.useScreenCoordinates=void 0!==a.useScreenCoordinates?
a.useScreenCoordinates:!0;this.mergeWith3D=void 0!==a.mergeWith3D?a.mergeWith3D:!this.useScreenCoordinates;this.affectedByDistance=void 0!==a.affectedByDistance?a.affectedByDistance:!this.useScreenCoordinates;this.scaleByViewport=void 0!==a.scaleByViewport?a.scaleByViewport:!this.affectedByDistance;this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=
new THREE.Vector2(1,1)};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(1!==this.scale.x||1!==this.scale.y)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};
THREE.Sprite.prototype.clone=function(a){void 0===a&&(a=new THREE.Sprite({}));a.color.copy(this.color);a.map=this.map;a.blending=this.blending;a.useScreenCoordinates=this.useScreenCoordinates;a.mergeWith3D=this.mergeWith3D;a.affectedByDistance=this.affectedByDistance;a.scaleByViewport=this.scaleByViewport;a.alignment=this.alignment;a.rotation3d.copy(this.rotation3d);a.rotation=this.rotation;a.opacity=this.opacity;a.uvOffset.copy(this.uvOffset);a.uvScale.copy(this.uvScale);THREE.Object3D.prototype.clone.call(this,
a);return a};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);
THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a),a.target&&void 0===a.target.parent&&this.add(a.target);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&-1===this.__objects.indexOf(a)){this.__objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])};
THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);-1!==b&&this.__lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.__objects.indexOf(a),-1!==b&&(this.__objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.__removeObject(a.children[b])};
THREE.Fog=function(a,b,c){this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};
THREE.CanvasRenderer=function(a){function b(a){x!==a&&(x=q.globalAlpha=a)}function c(a){u!==a&&(a===THREE.NormalBlending?q.globalCompositeOperation="source-over":a===THREE.AdditiveBlending?q.globalCompositeOperation="lighter":a===THREE.SubtractiveBlending&&(q.globalCompositeOperation="darker"),u=a)}function d(a){r!==a&&(r=q.strokeStyle=a)}function e(a){y!==a&&(y=q.fillStyle=a)}console.log("THREE.CanvasRenderer",THREE.REVISION);var a=a||{},f=this,g,h,i,k=new THREE.Projector,j=void 0!==a.canvas?a.canvas:
document.createElement("canvas"),l,m,p,n,q=j.getContext("2d"),t=new THREE.Color(0),s=0,x=1,u=0,r=null,y=null,w=null,v=null,A=null,F,C,G,H,D=new THREE.RenderableVertex,J=new THREE.RenderableVertex,L,K,M,N,S,ca,ha,E,O,Q,ja,sa,P=new THREE.Color,da=new THREE.Color,T=new THREE.Color,Y=new THREE.Color,la=new THREE.Color,R=new THREE.Color,aa=new THREE.Color,va={},Na={},ya,ta,pa,Ea,Pa,bb,Ya,jb,mb,ib,Ga=new THREE.Rectangle,Ca=new THREE.Rectangle,qa=new THREE.Rectangle,ob=!1,ka=new THREE.Color,eb=new THREE.Color,
Ta=new THREE.Color,Aa=new THREE.Vector3,Z,ga,Za,Qa,pb,o,a=16;Z=document.createElement("canvas");Z.width=Z.height=2;ga=Z.getContext("2d");ga.fillStyle="rgba(0,0,0,1)";ga.fillRect(0,0,2,2);Za=ga.getImageData(0,0,2,2);Qa=Za.data;pb=document.createElement("canvas");pb.width=pb.height=a;o=pb.getContext("2d");o.translate(-a/2,-a/2);o.scale(a,a);a--;this.domElement=j;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.setSize=function(a,b){l=a;m=b;p=Math.floor(l/
2);n=Math.floor(m/2);j.width=l;j.height=m;Ga.set(-p,-n,p,n);Ca.set(-p,-n,p,n);x=1;u=0;A=v=w=y=r=null};this.setClearColor=function(a,b){t.copy(a);s=void 0!==b?b:1;Ca.set(-p,-n,p,n)};this.setClearColorHex=function(a,b){t.setHex(a);s=void 0!==b?b:1;Ca.set(-p,-n,p,n)};this.getMaxAnisotropy=function(){return 0};this.clear=function(){q.setTransform(1,0,0,-1,p,n);!1===Ca.isEmpty()&&(Ca.minSelf(Ga),Ca.inflate(2),1>s&&q.clearRect(Math.floor(Ca.getX()),Math.floor(Ca.getY()),Math.floor(Ca.getWidth()),Math.floor(Ca.getHeight())),
0<s&&(c(THREE.NormalBlending),b(1),e("rgba("+Math.floor(255*t.r)+","+Math.floor(255*t.g)+","+Math.floor(255*t.b)+","+s+")"),q.fillRect(Math.floor(Ca.getX()),Math.floor(Ca.getY()),Math.floor(Ca.getWidth()),Math.floor(Ca.getHeight()))),Ca.empty())};this.render=function(a,j){function m(a,b,c){for(var d=0,e=i.length;d<e;d++){var f=i[d],g=f.color;if(f instanceof THREE.DirectionalLight){var h=f.matrixWorld.getPosition().normalize(),j=b.dot(h);0>=j||(j*=f.intensity,c.r+=g.r*j,c.g+=g.g*j,c.b+=g.b*j)}else f instanceof
THREE.PointLight&&(h=f.matrixWorld.getPosition(),j=b.dot(Aa.sub(h,a).normalize()),0>=j||(j*=0==f.distance?1:1-Math.min(a.distanceTo(h)/f.distance,1),0!=j&&(j*=f.intensity,c.r+=g.r*j,c.g+=g.g*j,c.b+=g.b*j)))}}function l(a,d,e,g,h,i,k,o){f.info.render.vertices+=3;f.info.render.faces++;b(o.opacity);c(o.blending);L=a.positionScreen.x;K=a.positionScreen.y;M=d.positionScreen.x;N=d.positionScreen.y;S=e.positionScreen.x;ca=e.positionScreen.y;r(L,K,M,N,S,ca);(o instanceof THREE.MeshLambertMaterial||o instanceof
THREE.MeshPhongMaterial)&&null===o.map&&null===o.map?(R.copy(o.color),aa.copy(o.emissive),o.vertexColors===THREE.FaceColors&&(R.r*=k.color.r,R.g*=k.color.g,R.b*=k.color.b),!0===ob)?!1===o.wireframe&&o.shading==THREE.SmoothShading&&3==k.vertexNormalsLength?(da.r=T.r=Y.r=ka.r,da.g=T.g=Y.g=ka.g,da.b=T.b=Y.b=ka.b,m(k.v1.positionWorld,k.vertexNormalsWorld[0],da),m(k.v2.positionWorld,k.vertexNormalsWorld[1],T),m(k.v3.positionWorld,k.vertexNormalsWorld[2],Y),da.r=da.r*R.r+aa.r,da.g=da.g*R.g+aa.g,da.b=da.b*
R.b+aa.b,T.r=T.r*R.r+aa.r,T.g=T.g*R.g+aa.g,T.b=T.b*R.b+aa.b,Y.r=Y.r*R.r+aa.r,Y.g=Y.g*R.g+aa.g,Y.b=Y.b*R.b+aa.b,la.r=0.5*(T.r+Y.r),la.g=0.5*(T.g+Y.g),la.b=0.5*(T.b+Y.b),pa=Bc(da,T,Y,la),x(L,K,M,N,S,ca,0,0,1,0,0,1,pa)):(P.r=ka.r,P.g=ka.g,P.b=ka.b,m(k.centroidWorld,k.normalWorld,P),P.r=P.r*R.r+aa.r,P.g=P.g*R.g+aa.g,P.b=P.b*R.b+aa.b,!0===o.wireframe?s(P,o.wireframeLinewidth,o.wireframeLinecap,o.wireframeLinejoin):u(P)):!0===o.wireframe?s(o.color,o.wireframeLinewidth,o.wireframeLinecap,o.wireframeLinejoin):
u(o.color):o instanceof THREE.MeshBasicMaterial||o instanceof THREE.MeshLambertMaterial||o instanceof THREE.MeshPhongMaterial?null!==o.map?o.map.mapping instanceof THREE.UVMapping&&(Ea=k.uvs[0],hc(L,K,M,N,S,ca,Ea[g].u,Ea[g].v,Ea[h].u,Ea[h].v,Ea[i].u,Ea[i].v,o.map)):null!==o.envMap?o.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(a=j.matrixWorldInverse,Aa.copy(k.vertexNormalsWorld[g]),Pa=0.5*(Aa.x*a.elements[0]+Aa.y*a.elements[4]+Aa.z*a.elements[8])+0.5,bb=0.5*(Aa.x*a.elements[1]+Aa.y*
a.elements[5]+Aa.z*a.elements[9])+0.5,Aa.copy(k.vertexNormalsWorld[h]),Ya=0.5*(Aa.x*a.elements[0]+Aa.y*a.elements[4]+Aa.z*a.elements[8])+0.5,jb=0.5*(Aa.x*a.elements[1]+Aa.y*a.elements[5]+Aa.z*a.elements[9])+0.5,Aa.copy(k.vertexNormalsWorld[i]),mb=0.5*(Aa.x*a.elements[0]+Aa.y*a.elements[4]+Aa.z*a.elements[8])+0.5,ib=0.5*(Aa.x*a.elements[1]+Aa.y*a.elements[5]+Aa.z*a.elements[9])+0.5,hc(L,K,M,N,S,ca,Pa,bb,Ya,jb,mb,ib,o.envMap)):(P.copy(o.color),o.vertexColors===THREE.FaceColors&&(P.r*=k.color.r,P.g*=
k.color.g,P.b*=k.color.b),!0===o.wireframe?s(P,o.wireframeLinewidth,o.wireframeLinecap,o.wireframeLinejoin):u(P)):o instanceof THREE.MeshDepthMaterial?(ya=j.near,ta=j.far,da.r=da.g=da.b=1-dc(a.positionScreen.z,ya,ta),T.r=T.g=T.b=1-dc(d.positionScreen.z,ya,ta),Y.r=Y.g=Y.b=1-dc(e.positionScreen.z,ya,ta),la.r=0.5*(T.r+Y.r),la.g=0.5*(T.g+Y.g),la.b=0.5*(T.b+Y.b),pa=Bc(da,T,Y,la),x(L,K,M,N,S,ca,0,0,1,0,0,1,pa)):o instanceof THREE.MeshNormalMaterial&&(P.r=y(k.normalWorld.x),P.g=y(k.normalWorld.y),P.b=y(k.normalWorld.z),
!0===o.wireframe?s(P,o.wireframeLinewidth,o.wireframeLinecap,o.wireframeLinejoin):u(P))}function r(a,b,c,d,e,f){q.beginPath();q.moveTo(a,b);q.lineTo(c,d);q.lineTo(e,f);q.closePath()}function t(a,b,c,d,e,f,g,h){q.beginPath();q.moveTo(a,b);q.lineTo(c,d);q.lineTo(e,f);q.lineTo(g,h);q.closePath()}function s(a,b,c,e){w!==b&&(w=q.lineWidth=b);v!==c&&(v=q.lineCap=c);A!==e&&(A=q.lineJoin=e);d(a.getContextStyle());q.stroke();qa.inflate(2*b)}function u(a){e(a.getContextStyle());q.fill()}function hc(a,b,c,d,
f,g,h,i,j,k,o,m,l){if(!(l instanceof THREE.DataTexture||void 0===l.image||0==l.image.width)){if(!0===l.needsUpdate){var n=l.wrapS==THREE.RepeatWrapping,p=l.wrapT==THREE.RepeatWrapping;va[l.id]=q.createPattern(l.image,!0===n&&!0===p?"repeat":!0===n&&!1===p?"repeat-x":!1===n&&!0===p?"repeat-y":"no-repeat");l.needsUpdate=!1}void 0===va[l.id]?e("rgba(0,0,0,1)"):e(va[l.id]);var n=l.offset.x/l.repeat.x,p=l.offset.y/l.repeat.y,Z=l.image.width*l.repeat.x,hc=l.image.height*l.repeat.y,h=(h+n)*Z,i=(1-i+p)*hc,
c=c-a,d=d-b,f=f-a,g=g-b,j=(j+n)*Z-h,k=(1-k+p)*hc-i,o=(o+n)*Z-h,m=(1-m+p)*hc-i,n=j*m-o*k;0===n?(void 0===Na[l.id]&&(b=document.createElement("canvas"),b.width=l.image.width,b.height=l.image.height,b=b.getContext("2d"),b.drawImage(l.image,0,0),Na[l.id]=b.getImageData(0,0,l.image.width,l.image.height).data),b=Na[l.id],h=4*(Math.floor(h)+Math.floor(i)*l.image.width),P.setRGB(b[h]/255,b[h+1]/255,b[h+2]/255),u(P)):(n=1/n,l=(m*c-k*f)*n,k=(m*d-k*g)*n,c=(j*f-o*c)*n,d=(j*g-o*d)*n,a=a-l*h-c*i,h=b-k*h-d*i,q.save(),
q.transform(l,k,c,d,a,h),q.fill(),q.restore())}}function x(a,b,c,d,e,f,g,h,i,j,k,o,l){var m,n;m=l.width-1;n=l.height-1;g*=m;h*=n;c-=a;d-=b;e-=a;f-=b;i=i*m-g;j=j*n-h;k=k*m-g;o=o*n-h;n=1/(i*o-k*j);m=(o*c-j*e)*n;j=(o*d-j*f)*n;c=(i*e-k*c)*n;d=(i*f-k*d)*n;a=a-m*g-c*h;b=b-j*g-d*h;q.save();q.transform(m,j,c,d,a,b);q.clip();q.drawImage(l,0,0);q.restore()}function Bc(a,b,c,d){Qa[0]=255*a.r|0;Qa[1]=255*a.g|0;Qa[2]=255*a.b|0;Qa[4]=255*b.r|0;Qa[5]=255*b.g|0;Qa[6]=255*b.b|0;Qa[8]=255*c.r|0;Qa[9]=255*c.g|0;Qa[10]=
255*c.b|0;Qa[12]=255*d.r|0;Qa[13]=255*d.g|0;Qa[14]=255*d.b|0;ga.putImageData(Za,0,0);o.drawImage(Z,0,0);return pb}function dc(a,b,c){a=(a-b)/(c-b);return a*a*(3-2*a)}function y(a){a=0.5*(a+1);return 0>a?0:1<a?1:a}function Sb(a,b){var c=b.x-a.x,d=b.y-a.y,e=c*c+d*d;0!==e&&(e=1/Math.sqrt(e),c*=e,d*=e,b.x+=c,b.y+=d,a.x-=c,a.y-=d)}if(!1===j instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{var Tb,Dc,na,ba;!0===this.autoClear?this.clear():
q.setTransform(1,0,0,-1,p,n);f.info.render.vertices=0;f.info.render.faces=0;g=k.projectScene(a,j,this.sortObjects,this.sortElements);h=g.elements;i=g.lights;ob=0<i.length;if(!0===ob){ka.setRGB(0,0,0);eb.setRGB(0,0,0);Ta.setRGB(0,0,0);Tb=0;for(Dc=i.length;Tb<Dc;Tb++){ba=i[Tb];var oa=ba.color;ba instanceof THREE.AmbientLight?(ka.r+=oa.r,ka.g+=oa.g,ka.b+=oa.b):ba instanceof THREE.DirectionalLight?(eb.r+=oa.r,eb.g+=oa.g,eb.b+=oa.b):ba instanceof THREE.PointLight&&(Ta.r+=oa.r,Ta.g+=oa.g,Ta.b+=oa.b)}}Tb=
0;for(Dc=h.length;Tb<Dc;Tb++)if(na=h[Tb],ba=na.material,!(void 0===ba||!1===ba.visible)){qa.empty();if(na instanceof THREE.RenderableParticle){F=na;F.x*=p;F.y*=n;var oa=F,cb=na;b(ba.opacity);c(ba.blending);var ub=void 0,vb=void 0,qb=void 0,rb=void 0,ic=na=void 0,Pc=void 0;ba instanceof THREE.ParticleBasicMaterial?null===ba.map?(qb=cb.object.scale.x,rb=cb.object.scale.y,qb*=cb.scale.x*p,rb*=cb.scale.y*n,qa.set(oa.x-qb,oa.y-rb,oa.x+qb,oa.y+rb),!1!==Ga.intersects(qa)&&(e(ba.color.getContextStyle()),
q.save(),q.translate(oa.x,oa.y),q.rotate(-cb.rotation),q.scale(qb,rb),q.fillRect(-1,-1,2,2),q.restore())):(na=ba.map.image,ic=na.width>>1,Pc=na.height>>1,qb=cb.scale.x*p,rb=cb.scale.y*n,ub=qb*ic,vb=rb*Pc,qa.set(oa.x-ub,oa.y-vb,oa.x+ub,oa.y+vb),!1!==Ga.intersects(qa)&&(q.save(),q.translate(oa.x,oa.y),q.rotate(-cb.rotation),q.scale(qb,-rb),q.translate(-ic,-Pc),q.drawImage(na,0,0),q.restore())):ba instanceof THREE.ParticleCanvasMaterial&&(ub=cb.scale.x*p,vb=cb.scale.y*n,qa.set(oa.x-ub,oa.y-vb,oa.x+ub,
oa.y+vb),!1!==Ga.intersects(qa)&&(d(ba.color.getContextStyle()),e(ba.color.getContextStyle()),q.save(),q.translate(oa.x,oa.y),q.rotate(-cb.rotation),q.scale(ub,vb),ba.program(q),q.restore()))}else if(na instanceof THREE.RenderableLine){if(F=na.v1,C=na.v2,F.positionScreen.x*=p,F.positionScreen.y*=n,C.positionScreen.x*=p,C.positionScreen.y*=n,qa.addPoint(F.positionScreen.x,F.positionScreen.y),qa.addPoint(C.positionScreen.x,C.positionScreen.y),!0===Ga.intersects(qa)&&(oa=F,cb=C,b(ba.opacity),c(ba.blending),
q.beginPath(),q.moveTo(oa.positionScreen.x,oa.positionScreen.y),q.lineTo(cb.positionScreen.x,cb.positionScreen.y),ba instanceof THREE.LineBasicMaterial))oa=ba.linewidth,w!==oa&&(w=q.lineWidth=oa),oa=ba.linecap,v!==oa&&(v=q.lineCap=oa),oa=ba.linejoin,A!==oa&&(A=q.lineJoin=oa),d(ba.color.getContextStyle()),q.stroke(),qa.inflate(2*ba.linewidth)}else if(na instanceof THREE.RenderableFace3)F=na.v1,C=na.v2,G=na.v3,F.positionScreen.x*=p,F.positionScreen.y*=n,C.positionScreen.x*=p,C.positionScreen.y*=n,G.positionScreen.x*=
p,G.positionScreen.y*=n,!0===ba.overdraw&&(Sb(F.positionScreen,C.positionScreen),Sb(C.positionScreen,G.positionScreen),Sb(G.positionScreen,F.positionScreen)),qa.add3Points(F.positionScreen.x,F.positionScreen.y,C.positionScreen.x,C.positionScreen.y,G.positionScreen.x,G.positionScreen.y),!0===Ga.intersects(qa)&&l(F,C,G,0,1,2,na,ba,a);else if(na instanceof THREE.RenderableFace4&&(F=na.v1,C=na.v2,G=na.v3,H=na.v4,F.positionScreen.x*=p,F.positionScreen.y*=n,C.positionScreen.x*=p,C.positionScreen.y*=n,G.positionScreen.x*=
p,G.positionScreen.y*=n,H.positionScreen.x*=p,H.positionScreen.y*=n,D.positionScreen.copy(C.positionScreen),J.positionScreen.copy(H.positionScreen),!0===ba.overdraw&&(Sb(F.positionScreen,C.positionScreen),Sb(C.positionScreen,H.positionScreen),Sb(H.positionScreen,F.positionScreen),Sb(G.positionScreen,D.positionScreen),Sb(G.positionScreen,J.positionScreen)),qa.addPoint(F.positionScreen.x,F.positionScreen.y),qa.addPoint(C.positionScreen.x,C.positionScreen.y),qa.addPoint(G.positionScreen.x,G.positionScreen.y),
qa.addPoint(H.positionScreen.x,H.positionScreen.y),!0===Ga.intersects(qa)))(oa=F,cb=C,ub=G,vb=H,qb=D,rb=J,ic=a,f.info.render.vertices+=4,f.info.render.faces++,b(ba.opacity),c(ba.blending),void 0!==ba.map&&null!==ba.map||void 0!==ba.envMap&&null!==ba.envMap)?(l(oa,cb,vb,0,1,3,na,ba,ic),l(qb,ub,rb,1,2,3,na,ba,ic)):(L=oa.positionScreen.x,K=oa.positionScreen.y,M=cb.positionScreen.x,N=cb.positionScreen.y,S=ub.positionScreen.x,ca=ub.positionScreen.y,ha=vb.positionScreen.x,E=vb.positionScreen.y,O=qb.positionScreen.x,
Q=qb.positionScreen.y,ja=rb.positionScreen.x,sa=rb.positionScreen.y,ba instanceof THREE.MeshLambertMaterial||ba instanceof THREE.MeshPhongMaterial)?(R.copy(ba.color),aa.copy(ba.emissive),ba.vertexColors===THREE.FaceColors&&(R.r*=na.color.r,R.g*=na.color.g,R.b*=na.color.b),!0===ob)?!1===ba.wireframe&&ba.shading==THREE.SmoothShading&&4==na.vertexNormalsLength?(da.r=T.r=Y.r=la.r=ka.r,da.g=T.g=Y.g=la.g=ka.g,da.b=T.b=Y.b=la.b=ka.b,m(na.v1.positionWorld,na.vertexNormalsWorld[0],da),m(na.v2.positionWorld,
na.vertexNormalsWorld[1],T),m(na.v4.positionWorld,na.vertexNormalsWorld[3],Y),m(na.v3.positionWorld,na.vertexNormalsWorld[2],la),da.r=da.r*R.r+aa.r,da.g=da.g*R.g+aa.g,da.b=da.b*R.b+aa.b,T.r=T.r*R.r+aa.r,T.g=T.g*R.g+aa.g,T.b=T.b*R.b+aa.b,Y.r=Y.r*R.r+aa.r,Y.g=Y.g*R.g+aa.g,Y.b=Y.b*R.b+aa.b,la.r=la.r*R.r+aa.r,la.g=la.g*R.g+aa.g,la.b=la.b*R.b+aa.b,pa=Bc(da,T,Y,la),r(L,K,M,N,ha,E),x(L,K,M,N,ha,E,0,0,1,0,0,1,pa),r(O,Q,S,ca,ja,sa),x(O,Q,S,ca,ja,sa,1,0,1,1,0,1,pa)):(P.r=ka.r,P.g=ka.g,P.b=ka.b,m(na.centroidWorld,
na.normalWorld,P),P.r=P.r*R.r+aa.r,P.g=P.g*R.g+aa.g,P.b=P.b*R.b+aa.b,t(L,K,M,N,S,ca,ha,E),!0===ba.wireframe?s(P,ba.wireframeLinewidth,ba.wireframeLinecap,ba.wireframeLinejoin):u(P)):(P.r=R.r+aa.r,P.g=R.g+aa.g,P.b=R.b+aa.b,t(L,K,M,N,S,ca,ha,E),!0===ba.wireframe?s(P,ba.wireframeLinewidth,ba.wireframeLinecap,ba.wireframeLinejoin):u(P)):ba instanceof THREE.MeshBasicMaterial?(P.copy(ba.color),ba.vertexColors===THREE.FaceColors&&(P.r*=na.color.r,P.g*=na.color.g,P.b*=na.color.b),t(L,K,M,N,S,ca,ha,E),!0===
ba.wireframe?s(P,ba.wireframeLinewidth,ba.wireframeLinecap,ba.wireframeLinejoin):u(P)):ba instanceof THREE.MeshNormalMaterial?(P.r=y(na.normalWorld.x),P.g=y(na.normalWorld.y),P.b=y(na.normalWorld.z),t(L,K,M,N,S,ca,ha,E),!0===ba.wireframe?s(P,ba.wireframeLinewidth,ba.wireframeLinecap,ba.wireframeLinejoin):u(P)):ba instanceof THREE.MeshDepthMaterial&&(ya=j.near,ta=j.far,da.r=da.g=da.b=1-dc(oa.positionScreen.z,ya,ta),T.r=T.g=T.b=1-dc(cb.positionScreen.z,ya,ta),Y.r=Y.g=Y.b=1-dc(vb.positionScreen.z,ya,
ta),la.r=la.g=la.b=1-dc(ub.positionScreen.z,ya,ta),pa=Bc(da,T,Y,la),r(L,K,M,N,ha,E),x(L,K,M,N,ha,E,0,0,1,0,0,1,pa),r(O,Q,S,ca,ja,sa),x(O,Q,S,ca,ja,sa,1,0,1,1,0,1,pa));Ca.addRectangle(qa)}q.setTransform(1,0,0,1,0,0)}}};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",
envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 mPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 mPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",
envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 nWorld = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",
lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",
normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",
specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",
lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nlVector = normalize( lVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - mPosition.xyz ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",
lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",
lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = mPosition.xyz;\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -viewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\nvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, N_BONE_PIXEL_X );\nfloat y = floor( j / N_BONE_PIXEL_X );\nconst float dx = 1.0 / N_BONE_PIXEL_X;\nconst float dy = 1.0 / N_BONE_PIXEL_Y;\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",
skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",
morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",
default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",
skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",
shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * mPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,d,e={};for(b=0;b<a.length;b++)for(c in d=this.clone(a[b]),d)e[c]=d[c];return e},clone:function(a){var b,c,d,e={};for(b in a)for(c in e[b]={},a[b])d=a[b][c],e[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return e}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",
value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightPosition:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",
value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngle:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",
value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",
value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalMatrix * normal;\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,
"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,
THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,
THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,
"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,
THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,
THREE.ShaderChunk.defaultnormal_vertex,"vNormal = transformedNormal;",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,
THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,
THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",
THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};
THREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;"v2"===f.type?g=2:"v3"===f.type?g=3:"v4"===f.type?g=4:"c"===f.type&&(g=3);f.size=g;f.array=new Float32Array(c*g);f.buffer=o.createBuffer();f.buffer.belongsToAttribute=e;f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}
function c(a,b){if(a.material&&!(a.material instanceof THREE.MeshFaceMaterial))return a.material;if(0<=b.materialIndex)return a.geometry.materials[b.materialIndex]}function d(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:a&&void 0!==a.shading&&a.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function e(a){return a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a instanceof THREE.ShaderMaterial?!0:!1}function f(a){var b,
c,d;for(b in a.attributes)d="index"===b?o.ELEMENT_ARRAY_BUFFER:o.ARRAY_BUFFER,c=a.attributes[b],c.buffer=o.createBuffer(),o.bindBuffer(d,c.buffer),o.bufferData(d,c.array,o.STATIC_DRAW)}function g(a,b,c){var d,e,f,g,h=a.vertices;g=h.length;var i=a.colors,j=i.length,k=a.__vertexArray,l=a.__colorArray,m=a.__sortArray,n=a.verticesNeedUpdate,p=a.colorsNeedUpdate,q=a.__webglCustomAttributesList;if(c.sortParticles){Z.copy(Aa);Z.multiplySelf(c.matrixWorld);for(d=0;d<g;d++)e=h[d],ga.copy(e),Z.multiplyVector3(ga),
m[d]=[ga.z,d];m.sort(function(a,b){return b[0]-a[0]});for(d=0;d<g;d++)e=h[m[d][1]],f=3*d,k[f]=e.x,k[f+1]=e.y,k[f+2]=e.z;for(d=0;d<j;d++)f=3*d,e=i[m[d][1]],l[f]=e.r,l[f+1]=e.g,l[f+2]=e.b;if(q){i=0;for(j=q.length;i<j;i++)if(h=q[i],void 0===h.boundTo||"vertices"===h.boundTo)if(f=0,e=h.value.length,1===h.size)for(d=0;d<e;d++)g=m[d][1],h.array[d]=h.value[g];else if(2===h.size)for(d=0;d<e;d++)g=m[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,f+=2;else if(3===h.size)if("c"===h.type)for(d=0;d<e;d++)g=
m[d][1],g=h.value[g],h.array[f]=g.r,h.array[f+1]=g.g,h.array[f+2]=g.b,f+=3;else for(d=0;d<e;d++)g=m[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,f+=3;else if(4===h.size)for(d=0;d<e;d++)g=m[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,h.array[f+3]=g.w,f+=4}}else{if(n)for(d=0;d<g;d++)e=h[d],f=3*d,k[f]=e.x,k[f+1]=e.y,k[f+2]=e.z;if(p)for(d=0;d<j;d++)e=i[d],f=3*d,l[f]=e.r,l[f+1]=e.g,l[f+2]=e.b;if(q){i=0;for(j=q.length;i<j;i++)if(h=q[i],h.needsUpdate&&(void 0===
h.boundTo||"vertices"===h.boundTo))if(e=h.value.length,f=0,1===h.size)for(d=0;d<e;d++)h.array[d]=h.value[d];else if(2===h.size)for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,f+=2;else if(3===h.size)if("c"===h.type)for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.r,h.array[f+1]=g.g,h.array[f+2]=g.b,f+=3;else for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,f+=3;else if(4===h.size)for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,h.array[f+
3]=g.w,f+=4}}if(n||c.sortParticles)o.bindBuffer(o.ARRAY_BUFFER,a.__webglVertexBuffer),o.bufferData(o.ARRAY_BUFFER,k,b);if(p||c.sortParticles)o.bindBuffer(o.ARRAY_BUFFER,a.__webglColorBuffer),o.bufferData(o.ARRAY_BUFFER,l,b);if(q){i=0;for(j=q.length;i<j;i++)if(h=q[i],h.needsUpdate||c.sortParticles)o.bindBuffer(o.ARRAY_BUFFER,h.buffer),o.bufferData(o.ARRAY_BUFFER,h.array,b)}}function h(a,b,c){var d=a.attributes,e=d.index,f=d.position,g=d.normal,h=d.uv,i=d.color,d=d.tangent;a.elementsNeedUpdate&&void 0!==
e&&(o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,e.buffer),o.bufferData(o.ELEMENT_ARRAY_BUFFER,e.array,b));a.verticesNeedUpdate&&void 0!==f&&(o.bindBuffer(o.ARRAY_BUFFER,f.buffer),o.bufferData(o.ARRAY_BUFFER,f.array,b));a.normalsNeedUpdate&&void 0!==g&&(o.bindBuffer(o.ARRAY_BUFFER,g.buffer),o.bufferData(o.ARRAY_BUFFER,g.array,b));a.uvsNeedUpdate&&void 0!==h&&(o.bindBuffer(o.ARRAY_BUFFER,h.buffer),o.bufferData(o.ARRAY_BUFFER,h.array,b));a.colorsNeedUpdate&&void 0!==i&&(o.bindBuffer(o.ARRAY_BUFFER,i.buffer),
o.bufferData(o.ARRAY_BUFFER,i.array,b));a.tangentsNeedUpdate&&void 0!==d&&(o.bindBuffer(o.ARRAY_BUFFER,d.buffer),o.bufferData(o.ARRAY_BUFFER,d.array,b));if(c)for(var j in a.attributes)delete a.attributes[j].array}function i(a,b){return b.z-a.z}function k(a,b){return b[1]-a[1]}function j(a,b,c){if(a.length)for(var d=0,e=a.length;d<e;d++)la=P=null,T=Y=Na=va=bb=Pa=ya=-1,Qa=!0,a[d].render(b,c,ka,eb),la=P=null,T=Y=Na=va=bb=Pa=ya=-1,Qa=!0}function l(a,b,c,d,e,f,g,h){var i,j,k,o;b?(j=a.length-1,o=b=-1):
(j=0,b=a.length,o=1);for(var l=j;l!==b;l+=o)if(i=a[l],i.render){j=i.object;k=i.buffer;if(h)i=h;else{i=i[c];if(!i)continue;g&&Q.setBlending(i.blending,i.blendEquation,i.blendSrc,i.blendDst);Q.setDepthTest(i.depthTest);Q.setDepthWrite(i.depthWrite);v(i.polygonOffset,i.polygonOffsetFactor,i.polygonOffsetUnits)}Q.setMaterialFaces(i);k instanceof THREE.BufferGeometry?Q.renderBufferDirect(d,e,f,i,k,j):Q.renderBuffer(d,e,f,i,k,j)}}function m(a,b,c,d,e,f,g){for(var h,i,j=0,k=a.length;j<k;j++)if(h=a[j],i=
h.object,i.visible){if(g)h=g;else{h=h[b];if(!h)continue;f&&Q.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst);Q.setDepthTest(h.depthTest);Q.setDepthWrite(h.depthWrite);v(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}Q.renderImmediateObject(c,d,e,h,i)}}function p(a,b,c){a.push({buffer:b,object:c,opaque:null,transparent:null})}function n(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function q(a){for(var b in a.attributes)a.attributes[b].needsUpdate=
!1}function t(a,b){for(var c=a.length-1;0<=c;c--)a[c].object===b&&a.splice(c,1)}function s(a,b){for(var c=a.length-1;0<=c;c--)a[c]===b&&a.splice(c,1)}function x(a,b,c,d,e){aa=0;d.needsUpdate&&(d.program&&Q.deallocateMaterial(d),Q.initMaterial(d,b,c,e),d.needsUpdate=!1);d.morphTargets&&!e.__webglMorphTargetInfluences&&(e.__webglMorphTargetInfluences=new Float32Array(Q.maxMorphTargets));var f=!1,g=d.program,h=g.uniforms,i=d.uniforms;g!==P&&(o.useProgram(g),P=g,f=!0);d.id!==T&&(T=d.id,f=!0);if(f||a!==
la)o.uniformMatrix4fv(h.projectionMatrix,!1,a._projectionMatrixArray),a!==la&&(la=a);if(d.skinning)if(pc&&e.useVertexTexture){if(null!==h.boneTexture){var j=u();o.uniform1i(h.boneTexture,j);Q.setTexture(e.boneTexture,j)}}else null!==h.boneGlobalMatrices&&o.uniformMatrix4fv(h.boneGlobalMatrices,!1,e.boneMatrices);if(f){c&&d.fog&&(i.fogColor.value=c.color,c instanceof THREE.Fog?(i.fogNear.value=c.near,i.fogFar.value=c.far):c instanceof THREE.FogExp2&&(i.fogDensity.value=c.density));if(d instanceof THREE.MeshPhongMaterial||
d instanceof THREE.MeshLambertMaterial||d.lights){if(Qa){for(var k=0,l=0,m=0,n,p,q,Z,r=pb,t=r.directional.colors,s=r.directional.positions,ga=r.point.colors,v=r.point.positions,x=r.point.distances,A=r.spot.colors,F=r.spot.positions,E=r.spot.distances,G=r.spot.directions,H=r.spot.angles,N=r.spot.exponents,K=r.hemi.skyColors,M=r.hemi.groundColors,L=r.hemi.positions,nb=0,O=0,S=0,Y=0,c=n=q=q=p=0,f=b.length;c<f;c++)j=b[c],!j.onlyShadow&&j.visible&&(n=j.color,Z=j.intensity,p=j.distance,j instanceof THREE.AmbientLight?
Q.gammaInput?(k+=n.r*n.r,l+=n.g*n.g,m+=n.b*n.b):(k+=n.r,l+=n.g,m+=n.b):j instanceof THREE.DirectionalLight?(p=3*nb,Q.gammaInput?y(t,p,n,Z*Z):w(t,p,n,Z),Za.copy(j.matrixWorld.getPosition()),Za.subSelf(j.target.matrixWorld.getPosition()),Za.normalize(),s[p]=Za.x,s[p+1]=Za.y,s[p+2]=Za.z,nb+=1):j instanceof THREE.PointLight?(q=3*O,Q.gammaInput?y(ga,q,n,Z*Z):w(ga,q,n,Z),Z=j.matrixWorld.getPosition(),v[q]=Z.x,v[q+1]=Z.y,v[q+2]=Z.z,x[O]=p,O+=1):j instanceof THREE.SpotLight?(q=3*S,Q.gammaInput?y(A,q,n,Z*
Z):w(A,q,n,Z),Z=j.matrixWorld.getPosition(),F[q]=Z.x,F[q+1]=Z.y,F[q+2]=Z.z,E[S]=p,Za.copy(Z),Za.subSelf(j.target.matrixWorld.getPosition()),Za.normalize(),G[q]=Za.x,G[q+1]=Za.y,G[q+2]=Za.z,H[S]=Math.cos(j.angle),N[S]=j.exponent,S+=1):j instanceof THREE.HemisphereLight&&(p=j.color,q=j.groundColor,n=3*Y,Q.gammaInput?(Z*=Z,y(K,n,p,Z),y(M,n,q,Z)):(w(K,n,p,Z),w(M,n,q,Z)),Z=j.matrixWorld.getPosition(),L[n]=Z.x,L[n+1]=Z.y,L[n+2]=Z.z,Y+=1));c=3*nb;for(f=t.length;c<f;c++)t[c]=0;c=3*O;for(f=ga.length;c<f;c++)ga[c]=
0;c=3*S;for(f=A.length;c<f;c++)A[c]=0;c=3*Y;for(f=K.length;c<f;c++)K[c]=0;c=3*Y;for(f=M.length;c<f;c++)M[c]=0;r.directional.length=nb;r.point.length=O;r.spot.length=S;r.hemi.length=Y;r.ambient[0]=k;r.ambient[1]=l;r.ambient[2]=m;Qa=!1}c=pb;i.ambientLightColor.value=c.ambient;i.directionalLightColor.value=c.directional.colors;i.directionalLightDirection.value=c.directional.positions;i.pointLightColor.value=c.point.colors;i.pointLightPosition.value=c.point.positions;i.pointLightDistance.value=c.point.distances;
i.spotLightColor.value=c.spot.colors;i.spotLightPosition.value=c.spot.positions;i.spotLightDistance.value=c.spot.distances;i.spotLightDirection.value=c.spot.directions;i.spotLightAngle.value=c.spot.angles;i.spotLightExponent.value=c.spot.exponents;i.hemisphereLightSkyColor.value=c.hemi.skyColors;i.hemisphereLightGroundColor.value=c.hemi.groundColors;i.hemisphereLightPosition.value=c.hemi.positions}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial){i.opacity.value=
d.opacity;Q.gammaInput?i.diffuse.value.copyGammaToLinear(d.color):i.diffuse.value=d.color;i.map.value=d.map;i.lightMap.value=d.lightMap;i.specularMap.value=d.specularMap;d.bumpMap&&(i.bumpMap.value=d.bumpMap,i.bumpScale.value=d.bumpScale);d.normalMap&&(i.normalMap.value=d.normalMap,i.normalScale.value.copy(d.normalScale));var R;d.map?R=d.map:d.specularMap?R=d.specularMap:d.normalMap?R=d.normalMap:d.bumpMap&&(R=d.bumpMap);void 0!==R&&(c=R.offset,R=R.repeat,i.offsetRepeat.value.set(c.x,c.y,R.x,R.y));
i.envMap.value=d.envMap;i.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;i.reflectivity.value=d.reflectivity;i.refractionRatio.value=d.refractionRatio;i.combine.value=d.combine;i.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping}d instanceof THREE.LineBasicMaterial?(i.diffuse.value=d.color,i.opacity.value=d.opacity):d instanceof THREE.ParticleBasicMaterial?(i.psColor.value=d.color,i.opacity.value=d.opacity,i.size.value=d.size,i.scale.value=J.height/
2,i.map.value=d.map):d instanceof THREE.MeshPhongMaterial?(i.shininess.value=d.shininess,Q.gammaInput?(i.ambient.value.copyGammaToLinear(d.ambient),i.emissive.value.copyGammaToLinear(d.emissive),i.specular.value.copyGammaToLinear(d.specular)):(i.ambient.value=d.ambient,i.emissive.value=d.emissive,i.specular.value=d.specular),d.wrapAround&&i.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshLambertMaterial?(Q.gammaInput?(i.ambient.value.copyGammaToLinear(d.ambient),i.emissive.value.copyGammaToLinear(d.emissive)):
(i.ambient.value=d.ambient,i.emissive.value=d.emissive),d.wrapAround&&i.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(i.mNear.value=a.near,i.mFar.value=a.far,i.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(i.opacity.value=d.opacity);if(e.receiveShadow&&!d._shadowPass&&i.shadowMatrix){c=R=0;for(f=b.length;c<f;c++)if(j=b[c],j.castShadow&&(j instanceof THREE.SpotLight||j instanceof THREE.DirectionalLight&&!j.shadowCascade))i.shadowMap.value[R]=j.shadowMap,i.shadowMapSize.value[R]=
j.shadowMapSize,i.shadowMatrix.value[R]=j.shadowMatrix,i.shadowDarkness.value[R]=j.shadowDarkness,i.shadowBias.value[R]=j.shadowBias,R++}b=d.uniformsList;i=0;for(R=b.length;i<R;i++)if(f=g.uniforms[b[i][1]])if(c=b[i][0],k=c.type,j=c.value,"i"===k)o.uniform1i(f,j);else if("f"===k)o.uniform1f(f,j);else if("v2"===k)o.uniform2f(f,j.x,j.y);else if("v3"===k)o.uniform3f(f,j.x,j.y,j.z);else if("v4"===k)o.uniform4f(f,j.x,j.y,j.z,j.w);else if("c"===k)o.uniform3f(f,j.r,j.g,j.b);else if("iv1"===k)o.uniform1iv(f,
j);else if("iv"===k)o.uniform3iv(f,j);else if("fv1"===k)o.uniform1fv(f,j);else if("fv"===k)o.uniform3fv(f,j);else if("v2v"===k){void 0===c._array&&(c._array=new Float32Array(2*j.length));k=0;for(l=j.length;k<l;k++)m=2*k,c._array[m]=j[k].x,c._array[m+1]=j[k].y;o.uniform2fv(f,c._array)}else if("v3v"===k){void 0===c._array&&(c._array=new Float32Array(3*j.length));k=0;for(l=j.length;k<l;k++)m=3*k,c._array[m]=j[k].x,c._array[m+1]=j[k].y,c._array[m+2]=j[k].z;o.uniform3fv(f,c._array)}else if("v4v"===k){void 0===
c._array&&(c._array=new Float32Array(4*j.length));k=0;for(l=j.length;k<l;k++)m=4*k,c._array[m]=j[k].x,c._array[m+1]=j[k].y,c._array[m+2]=j[k].z,c._array[m+3]=j[k].w;o.uniform4fv(f,c._array)}else if("m4"===k)void 0===c._array&&(c._array=new Float32Array(16)),j.flattenToArray(c._array),o.uniformMatrix4fv(f,!1,c._array);else if("m4v"===k){void 0===c._array&&(c._array=new Float32Array(16*j.length));k=0;for(l=j.length;k<l;k++)j[k].flattenToArrayOffset(c._array,16*k);o.uniformMatrix4fv(f,!1,c._array)}else if("t"===
k){if(m=j,j=u(),o.uniform1i(f,j),m)if(m.image instanceof Array&&6===m.image.length){if(c=m,f=j,6===c.image.length)if(c.needsUpdate){c.image.__webglTextureCube||(c.image.__webglTextureCube=o.createTexture());o.activeTexture(o.TEXTURE0+f);o.bindTexture(o.TEXTURE_CUBE_MAP,c.image.__webglTextureCube);o.pixelStorei(o.UNPACK_FLIP_Y_WEBGL,c.flipY);f=c instanceof THREE.CompressedTexture;j=[];for(k=0;6>k;k++)l=j,m=k,Q.autoScaleCubemaps&&!f?(r=c.image[k],s=bc,r.width<=s&&r.height<=s||(ga=Math.max(r.width,r.height),
t=Math.floor(r.width*s/ga),s=Math.floor(r.height*s/ga),ga=document.createElement("canvas"),ga.width=t,ga.height=s,ga.getContext("2d").drawImage(r,0,0,r.width,r.height,0,0,t,s),r=ga)):r=c.image[k],l[m]=r;k=j[0];l=0===(k.width&k.width-1)&&0===(k.height&k.height-1);m=D(c.format);r=D(c.type);C(o.TEXTURE_CUBE_MAP,c,l);for(k=0;6>k;k++)if(f){s=j[k].mipmaps;ga=0;for(v=s.length;ga<v;ga++)t=s[ga],o.compressedTexImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+k,ga,m,t.width,t.height,0,t.data)}else o.texImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+
k,0,m,m,r,j[k]);c.generateMipmaps&&l&&o.generateMipmap(o.TEXTURE_CUBE_MAP);c.needsUpdate=!1;if(c.onUpdate)c.onUpdate()}else o.activeTexture(o.TEXTURE0+f),o.bindTexture(o.TEXTURE_CUBE_MAP,c.image.__webglTextureCube)}else m instanceof THREE.WebGLRenderTargetCube?(c=m,o.activeTexture(o.TEXTURE0+j),o.bindTexture(o.TEXTURE_CUBE_MAP,c.__webglTexture)):Q.setTexture(m,j)}else if("tv"===k){void 0===c._array&&(c._array=[]);k=0;for(l=c.value.length;k<l;k++)c._array[k]=u();o.uniform1iv(f,c._array);k=0;for(l=
c.value.length;k<l;k++)m=c.value[k],j=c._array[k],m&&Q.setTexture(m,j)}if((d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==h.cameraPosition)b=a.matrixWorld.getPosition(),o.uniform3f(h.cameraPosition,b.x,b.y,b.z);(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==h.viewMatrix&&o.uniformMatrix4fv(h.viewMatrix,!1,a._viewMatrixArray)}o.uniformMatrix4fv(h.modelViewMatrix,!1,e._modelViewMatrix.elements);
h.normalMatrix&&o.uniformMatrix3fv(h.normalMatrix,!1,e._normalMatrix.elements);null!==h.modelMatrix&&o.uniformMatrix4fv(h.modelMatrix,!1,e.matrixWorld.elements);return g}function u(){var a=aa;a>=gc&&console.warn("Trying to use "+a+" texture units while this GPU supports only "+gc);aa+=1;return a}function r(a,b){a._modelViewMatrix.multiply(b.matrixWorldInverse,a.matrixWorld);a._normalMatrix.getInverse(a._modelViewMatrix);a._normalMatrix.transpose()}function y(a,b,c,d){a[b]=c.r*c.r*d;a[b+1]=c.g*c.g*
d;a[b+2]=c.b*c.b*d}function w(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function v(a,b,c){Ya!==a&&(a?o.enable(o.POLYGON_OFFSET_FILL):o.disable(o.POLYGON_OFFSET_FILL),Ya=a);if(a&&(jb!==b||mb!==c))o.polygonOffset(b,c),jb=b,mb=c}function A(a){for(var a=a.split("\n"),b=0,c=a.length;b<c;b++)a[b]=b+1+": "+a[b];return a.join("\n")}function F(a,b){var c;"fragment"===a?c=o.createShader(o.FRAGMENT_SHADER):"vertex"===a&&(c=o.createShader(o.VERTEX_SHADER));o.shaderSource(c,b);o.compileShader(c);return!o.getShaderParameter(c,
o.COMPILE_STATUS)?(console.error(o.getShaderInfoLog(c)),console.error(A(b)),null):c}function C(a,b,c){c?(o.texParameteri(a,o.TEXTURE_WRAP_S,D(b.wrapS)),o.texParameteri(a,o.TEXTURE_WRAP_T,D(b.wrapT)),o.texParameteri(a,o.TEXTURE_MAG_FILTER,D(b.magFilter)),o.texParameteri(a,o.TEXTURE_MIN_FILTER,D(b.minFilter))):(o.texParameteri(a,o.TEXTURE_WRAP_S,o.CLAMP_TO_EDGE),o.texParameteri(a,o.TEXTURE_WRAP_T,o.CLAMP_TO_EDGE),o.texParameteri(a,o.TEXTURE_MAG_FILTER,H(b.magFilter)),o.texParameteri(a,o.TEXTURE_MIN_FILTER,
H(b.minFilter)));if(nb&&b.type!==THREE.FloatType&&(1<b.anisotropy||b.__oldAnisotropy))o.texParameterf(a,nb.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,Cc)),b.__oldAnisotropy=b.anisotropy}function G(a,b){o.bindRenderbuffer(o.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(o.renderbufferStorage(o.RENDERBUFFER,o.DEPTH_COMPONENT16,b.width,b.height),o.framebufferRenderbuffer(o.FRAMEBUFFER,o.DEPTH_ATTACHMENT,o.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(o.renderbufferStorage(o.RENDERBUFFER,o.DEPTH_STENCIL,
b.width,b.height),o.framebufferRenderbuffer(o.FRAMEBUFFER,o.DEPTH_STENCIL_ATTACHMENT,o.RENDERBUFFER,a)):o.renderbufferStorage(o.RENDERBUFFER,o.RGBA4,b.width,b.height)}function H(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?o.NEAREST:o.LINEAR}function D(a){if(a===THREE.RepeatWrapping)return o.REPEAT;if(a===THREE.ClampToEdgeWrapping)return o.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return o.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return o.NEAREST;
if(a===THREE.NearestMipMapNearestFilter)return o.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return o.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return o.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return o.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return o.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return o.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return o.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return o.UNSIGNED_SHORT_5_5_5_1;
if(a===THREE.UnsignedShort565Type)return o.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return o.BYTE;if(a===THREE.ShortType)return o.SHORT;if(a===THREE.UnsignedShortType)return o.UNSIGNED_SHORT;if(a===THREE.IntType)return o.INT;if(a===THREE.UnsignedIntType)return o.UNSIGNED_INT;if(a===THREE.FloatType)return o.FLOAT;if(a===THREE.AlphaFormat)return o.ALPHA;if(a===THREE.RGBFormat)return o.RGB;if(a===THREE.RGBAFormat)return o.RGBA;if(a===THREE.LuminanceFormat)return o.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return o.LUMINANCE_ALPHA;
if(a===THREE.AddEquation)return o.FUNC_ADD;if(a===THREE.SubtractEquation)return o.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return o.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return o.ZERO;if(a===THREE.OneFactor)return o.ONE;if(a===THREE.SrcColorFactor)return o.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return o.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return o.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return o.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return o.DST_ALPHA;
if(a===THREE.OneMinusDstAlphaFactor)return o.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return o.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return o.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return o.SRC_ALPHA_SATURATE;if(void 0!==kb){if(a===THREE.RGB_S3TC_DXT1_Format)return kb.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return kb.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return kb.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return kb.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}
console.log("THREE.WebGLRenderer",THREE.REVISION);var a=a||{},J=void 0!==a.canvas?a.canvas:document.createElement("canvas"),L=void 0!==a.precision?a.precision:"highp",K=void 0!==a.alpha?a.alpha:!0,M=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,N=void 0!==a.antialias?a.antialias:!1,S=void 0!==a.stencil?a.stencil:!0,ca=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,ha=void 0!==a.clearColor?new THREE.Color(a.clearColor):new THREE.Color(0),E=void 0!==a.clearAlpha?a.clearAlpha:0,
O=void 0!==a.maxLights?a.maxLights:4;this.domElement=J;this.context=null;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapCullFrontFaces=this.shadowMapSoft=this.shadowMapAutoUpdate=!0;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=
[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var Q=this,ja=[],sa=0,P=null,da=null,T=-1,Y=null,la=null,R=0,aa=0,va=-1,Na=-1,ya=-1,ta=-1,pa=-1,Ea=-1,Pa=-1,bb=-1,Ya=null,jb=null,mb=null,ib=null,Ga=0,Ca=0,qa=0,ob=0,ka=0,eb=0,Ta=new THREE.Frustum,Aa=new THREE.Matrix4,Z=new THREE.Matrix4,ga=new THREE.Vector4,Za=new THREE.Vector3,Qa=!0,pb={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],
positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],angles:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},o,nb,kb;try{if(!(o=J.getContext("experimental-webgl",{alpha:K,premultipliedAlpha:M,antialias:N,stencil:S,preserveDrawingBuffer:ca})))throw"Error creating WebGL context.";}catch(fb){console.error(fb)}a=o.getExtension("OES_texture_float");K=o.getExtension("OES_standard_derivatives");nb=o.getExtension("EXT_texture_filter_anisotropic")||
o.getExtension("MOZ_EXT_texture_filter_anisotropic")||o.getExtension("WEBKIT_EXT_texture_filter_anisotropic");kb=o.getExtension("WEBGL_compressed_texture_s3tc")||o.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||o.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");a||console.log("THREE.WebGLRenderer: Float textures not supported.");K||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");nb||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");kb||
console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");o.clearColor(0,0,0,1);o.clearDepth(1);o.clearStencil(0);o.enable(o.DEPTH_TEST);o.depthFunc(o.LEQUAL);o.frontFace(o.CCW);o.cullFace(o.BACK);o.enable(o.CULL_FACE);o.enable(o.BLEND);o.blendEquation(o.FUNC_ADD);o.blendFunc(o.SRC_ALPHA,o.ONE_MINUS_SRC_ALPHA);o.clearColor(ha.r,ha.g,ha.b,E);this.context=o;var gc=o.getParameter(o.MAX_TEXTURE_IMAGE_UNITS),K=o.getParameter(o.MAX_VERTEX_TEXTURE_IMAGE_UNITS);o.getParameter(o.MAX_TEXTURE_SIZE);
var bc=o.getParameter(o.MAX_CUBE_MAP_TEXTURE_SIZE),Cc=nb?o.getParameter(nb.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,cc=0<K,pc=cc&&a;kb&&o.getParameter(o.COMPRESSED_TEXTURE_FORMATS);this.getContext=function(){return o};this.supportsVertexTextures=function(){return cc};this.getMaxAnisotropy=function(){return Cc};this.setSize=function(a,b){J.width=a;J.height=b;this.setViewport(0,0,J.width,J.height)};this.setViewport=function(a,b,c,d){Ga=void 0!==a?a:0;Ca=void 0!==b?b:0;qa=void 0!==c?c:J.width;ob=void 0!==d?
d:J.height;o.viewport(Ga,Ca,qa,ob)};this.setScissor=function(a,b,c,d){o.scissor(a,b,c,d)};this.enableScissorTest=function(a){a?o.enable(o.SCISSOR_TEST):o.disable(o.SCISSOR_TEST)};this.setClearColorHex=function(a,b){ha.setHex(a);E=b;o.clearColor(ha.r,ha.g,ha.b,E)};this.setClearColor=function(a,b){ha.copy(a);E=b;o.clearColor(ha.r,ha.g,ha.b,E)};this.getClearColor=function(){return ha};this.getClearAlpha=function(){return E};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=o.COLOR_BUFFER_BIT;if(void 0===
b||b)d|=o.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=o.STENCIL_BUFFER_BIT;o.clear(d)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.addPostPlugin=function(a){a.init(this);this.renderPluginsPost.push(a)};this.addPrePlugin=function(a){a.init(this);this.renderPluginsPre.push(a)};this.deallocateObject=function(a){if(a.__webglInit)if(a.__webglInit=!1,delete a._modelViewMatrix,delete a._normalMatrix,delete a._normalMatrixArray,delete a._modelViewMatrixArray,delete a._modelMatrixArray,
a instanceof THREE.Mesh)for(var b in a.geometry.geometryGroups){var c=a.geometry.geometryGroups[b];o.deleteBuffer(c.__webglVertexBuffer);o.deleteBuffer(c.__webglNormalBuffer);o.deleteBuffer(c.__webglTangentBuffer);o.deleteBuffer(c.__webglColorBuffer);o.deleteBuffer(c.__webglUVBuffer);o.deleteBuffer(c.__webglUV2Buffer);o.deleteBuffer(c.__webglSkinIndicesBuffer);o.deleteBuffer(c.__webglSkinWeightsBuffer);o.deleteBuffer(c.__webglFaceBuffer);o.deleteBuffer(c.__webglLineBuffer);var d=void 0,e=void 0;if(c.numMorphTargets){d=
0;for(e=c.numMorphTargets;d<e;d++)o.deleteBuffer(c.__webglMorphTargetsBuffers[d])}if(c.numMorphNormals){d=0;for(e=c.numMorphNormals;d<e;d++)o.deleteBuffer(c.__webglMorphNormalsBuffers[d])}if(c.__webglCustomAttributesList)for(d in d=void 0,c.__webglCustomAttributesList)o.deleteBuffer(c.__webglCustomAttributesList[d].buffer);Q.info.memory.geometries--}else a instanceof THREE.Ribbon?(a=a.geometry,o.deleteBuffer(a.__webglVertexBuffer),o.deleteBuffer(a.__webglColorBuffer),Q.info.memory.geometries--):a instanceof
THREE.Line?(a=a.geometry,o.deleteBuffer(a.__webglVertexBuffer),o.deleteBuffer(a.__webglColorBuffer),Q.info.memory.geometries--):a instanceof THREE.ParticleSystem&&(a=a.geometry,o.deleteBuffer(a.__webglVertexBuffer),o.deleteBuffer(a.__webglColorBuffer),Q.info.memory.geometries--)};this.deallocateTexture=function(a){a.__webglInit&&(a.__webglInit=!1,o.deleteTexture(a.__webglTexture),Q.info.memory.textures--)};this.deallocateRenderTarget=function(a){if(a&&a.__webglTexture)if(o.deleteTexture(a.__webglTexture),
a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)o.deleteFramebuffer(a.__webglFramebuffer[b]),o.deleteRenderbuffer(a.__webglRenderbuffer[b]);else o.deleteFramebuffer(a.__webglFramebuffer),o.deleteRenderbuffer(a.__webglRenderbuffer)};this.deallocateMaterial=function(a){var b=a.program;if(b){a.program=void 0;var c,d,e=!1,a=0;for(c=ja.length;a<c;a++)if(d=ja[a],d.program===b){d.usedTimes--;0===d.usedTimes&&(e=!0);break}if(e){e=[];a=0;for(c=ja.length;a<c;a++)d=ja[a],d.program!==b&&e.push(d);
ja=e;o.deleteProgram(b);Q.info.memory.programs--}}};this.updateShadowMap=function(a,b){P=null;T=Y=bb=Pa=ya=-1;Qa=!0;Na=va=-1;this.shadowMapPlugin.update(a,b)};this.renderBufferImmediate=function(a,b,c){a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=o.createBuffer());a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=o.createBuffer());a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=o.createBuffer());a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=o.createBuffer());
a.hasPositions&&(o.bindBuffer(o.ARRAY_BUFFER,a.__webglVertexBuffer),o.bufferData(o.ARRAY_BUFFER,a.positionArray,o.DYNAMIC_DRAW),o.enableVertexAttribArray(b.attributes.position),o.vertexAttribPointer(b.attributes.position,3,o.FLOAT,!1,0,0));if(a.hasNormals){o.bindBuffer(o.ARRAY_BUFFER,a.__webglNormalBuffer);if(c.shading===THREE.FlatShading){var d,e,f,g,h,i,j,k,m,l,n,p=3*a.count;for(n=0;n<p;n+=9)l=a.normalArray,d=l[n],e=l[n+1],f=l[n+2],g=l[n+3],i=l[n+4],k=l[n+5],h=l[n+6],j=l[n+7],m=l[n+8],d=(d+g+h)/
3,e=(e+i+j)/3,f=(f+k+m)/3,l[n]=d,l[n+1]=e,l[n+2]=f,l[n+3]=d,l[n+4]=e,l[n+5]=f,l[n+6]=d,l[n+7]=e,l[n+8]=f}o.bufferData(o.ARRAY_BUFFER,a.normalArray,o.DYNAMIC_DRAW);o.enableVertexAttribArray(b.attributes.normal);o.vertexAttribPointer(b.attributes.normal,3,o.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(o.bindBuffer(o.ARRAY_BUFFER,a.__webglUvBuffer),o.bufferData(o.ARRAY_BUFFER,a.uvArray,o.DYNAMIC_DRAW),o.enableVertexAttribArray(b.attributes.uv),o.vertexAttribPointer(b.attributes.uv,2,o.FLOAT,!1,0,0));a.hasColors&&
c.vertexColors!==THREE.NoColors&&(o.bindBuffer(o.ARRAY_BUFFER,a.__webglColorBuffer),o.bufferData(o.ARRAY_BUFFER,a.colorArray,o.DYNAMIC_DRAW),o.enableVertexAttribArray(b.attributes.color),o.vertexAttribPointer(b.attributes.color,3,o.FLOAT,!1,0,0));o.drawArrays(o.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){if(!1!==d.visible)if(c=x(a,b,c,d,f),a=c.attributes,b=!1,d=16777215*e.id+2*c.id+(d.wireframe?1:0),d!==Y&&(Y=d,b=!0),f instanceof THREE.Mesh){f=e.offsets;1<f.length&&
(b=!0);d=0;for(c=f.length;d<c;++d){var g=f[d].index;if(b){var h=e.attributes.position,i=h.itemSize;o.bindBuffer(o.ARRAY_BUFFER,h.buffer);o.vertexAttribPointer(a.position,i,o.FLOAT,!1,0,4*g*i);h=e.attributes.normal;0<=a.normal&&h&&(i=h.itemSize,o.bindBuffer(o.ARRAY_BUFFER,h.buffer),o.vertexAttribPointer(a.normal,i,o.FLOAT,!1,0,4*g*i));h=e.attributes.uv;0<=a.uv&&h&&(h.buffer?(i=h.itemSize,o.bindBuffer(o.ARRAY_BUFFER,h.buffer),o.vertexAttribPointer(a.uv,i,o.FLOAT,!1,0,4*g*i),o.enableVertexAttribArray(a.uv)):
o.disableVertexAttribArray(a.uv));i=e.attributes.color;if(0<=a.color&&i){var j=i.itemSize;o.bindBuffer(o.ARRAY_BUFFER,i.buffer);o.vertexAttribPointer(a.color,j,o.FLOAT,!1,0,4*g*j)}h=e.attributes.tangent;0<=a.tangent&&h&&(i=h.itemSize,o.bindBuffer(o.ARRAY_BUFFER,h.buffer),o.vertexAttribPointer(a.tangent,i,o.FLOAT,!1,0,4*g*i));o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,e.attributes.index.buffer)}o.drawElements(o.TRIANGLES,f[d].count,o.UNSIGNED_SHORT,2*f[d].start);Q.info.render.calls++;Q.info.render.vertices+=
f[d].count;Q.info.render.faces+=f[d].count/3}}else f instanceof THREE.ParticleSystem&&b&&(h=e.attributes.position,i=h.itemSize,o.bindBuffer(o.ARRAY_BUFFER,h.buffer),o.vertexAttribPointer(a.position,i,o.FLOAT,!1,0,0),i=e.attributes.color,0<=a.color&&i&&(j=i.itemSize,o.bindBuffer(o.ARRAY_BUFFER,i.buffer),o.vertexAttribPointer(a.color,j,o.FLOAT,!1,0,0)),o.drawArrays(o.POINTS,0,h.numItems/3),Q.info.render.calls++,Q.info.render.points+=h.numItems/3)};this.renderBuffer=function(a,b,c,d,e,f){if(!1!==d.visible){var g,
h,c=x(a,b,c,d,f),b=c.attributes,a=!1,c=16777215*e.id+2*c.id+(d.wireframe?1:0);c!==Y&&(Y=c,a=!0);if(!d.morphTargets&&0<=b.position)a&&(o.bindBuffer(o.ARRAY_BUFFER,e.__webglVertexBuffer),o.vertexAttribPointer(b.position,3,o.FLOAT,!1,0,0));else if(f.morphTargetBase){c=d.program.attributes;-1!==f.morphTargetBase?(o.bindBuffer(o.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),o.vertexAttribPointer(c.position,3,o.FLOAT,!1,0,0)):0<=c.position&&(o.bindBuffer(o.ARRAY_BUFFER,e.__webglVertexBuffer),
o.vertexAttribPointer(c.position,3,o.FLOAT,!1,0,0));if(f.morphTargetForcedOrder.length){var i=0;h=f.morphTargetForcedOrder;for(g=f.morphTargetInfluences;i<d.numSupportedMorphTargets&&i<h.length;)o.bindBuffer(o.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[h[i]]),o.vertexAttribPointer(c["morphTarget"+i],3,o.FLOAT,!1,0,0),d.morphNormals&&(o.bindBuffer(o.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[h[i]]),o.vertexAttribPointer(c["morphNormal"+i],3,o.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[i]=g[h[i]],
i++}else{h=[];g=f.morphTargetInfluences;var j,l=g.length;for(j=0;j<l;j++)i=g[j],0<i&&h.push([j,i]);h.length>d.numSupportedMorphTargets?(h.sort(k),h.length=d.numSupportedMorphTargets):h.length>d.numSupportedMorphNormals?h.sort(k):0===h.length&&h.push([0,0]);for(i=0;i<d.numSupportedMorphTargets;)h[i]?(j=h[i][0],o.bindBuffer(o.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[j]),o.vertexAttribPointer(c["morphTarget"+i],3,o.FLOAT,!1,0,0),d.morphNormals&&(o.bindBuffer(o.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[j]),
o.vertexAttribPointer(c["morphNormal"+i],3,o.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[i]=g[j]):(o.vertexAttribPointer(c["morphTarget"+i],3,o.FLOAT,!1,0,0),d.morphNormals&&o.vertexAttribPointer(c["morphNormal"+i],3,o.FLOAT,!1,0,0),f.__webglMorphTargetInfluences[i]=0),i++}null!==d.program.uniforms.morphTargetInfluences&&o.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList){g=0;for(h=e.__webglCustomAttributesList.length;g<h;g++)c=
e.__webglCustomAttributesList[g],0<=b[c.buffer.belongsToAttribute]&&(o.bindBuffer(o.ARRAY_BUFFER,c.buffer),o.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,o.FLOAT,!1,0,0))}0<=b.color&&(o.bindBuffer(o.ARRAY_BUFFER,e.__webglColorBuffer),o.vertexAttribPointer(b.color,3,o.FLOAT,!1,0,0));0<=b.normal&&(o.bindBuffer(o.ARRAY_BUFFER,e.__webglNormalBuffer),o.vertexAttribPointer(b.normal,3,o.FLOAT,!1,0,0));0<=b.tangent&&(o.bindBuffer(o.ARRAY_BUFFER,e.__webglTangentBuffer),o.vertexAttribPointer(b.tangent,
4,o.FLOAT,!1,0,0));0<=b.uv&&(e.__webglUVBuffer?(o.bindBuffer(o.ARRAY_BUFFER,e.__webglUVBuffer),o.vertexAttribPointer(b.uv,2,o.FLOAT,!1,0,0),o.enableVertexAttribArray(b.uv)):o.disableVertexAttribArray(b.uv));0<=b.uv2&&(e.__webglUV2Buffer?(o.bindBuffer(o.ARRAY_BUFFER,e.__webglUV2Buffer),o.vertexAttribPointer(b.uv2,2,o.FLOAT,!1,0,0),o.enableVertexAttribArray(b.uv2)):o.disableVertexAttribArray(b.uv2));d.skinning&&(0<=b.skinIndex&&0<=b.skinWeight)&&(o.bindBuffer(o.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),
o.vertexAttribPointer(b.skinIndex,4,o.FLOAT,!1,0,0),o.bindBuffer(o.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),o.vertexAttribPointer(b.skinWeight,4,o.FLOAT,!1,0,0))}f instanceof THREE.Mesh?(d.wireframe?(d=d.wireframeLinewidth,d!==ib&&(o.lineWidth(d),ib=d),a&&o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),o.drawElements(o.LINES,e.__webglLineCount,o.UNSIGNED_SHORT,0)):(a&&o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),o.drawElements(o.TRIANGLES,e.__webglFaceCount,o.UNSIGNED_SHORT,0)),
Q.info.render.calls++,Q.info.render.vertices+=e.__webglFaceCount,Q.info.render.faces+=e.__webglFaceCount/3):f instanceof THREE.Line?(f=f.type===THREE.LineStrip?o.LINE_STRIP:o.LINES,d=d.linewidth,d!==ib&&(o.lineWidth(d),ib=d),o.drawArrays(f,0,e.__webglLineCount),Q.info.render.calls++):f instanceof THREE.ParticleSystem?(o.drawArrays(o.POINTS,0,e.__webglParticleCount),Q.info.render.calls++,Q.info.render.points+=e.__webglParticleCount):f instanceof THREE.Ribbon&&(o.drawArrays(o.TRIANGLE_STRIP,0,e.__webglVertexCount),
Q.info.render.calls++)}};this.render=function(a,b,c,d){if(!1===b instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var e,f,g,h,k=a.__lights,n=a.fog;T=-1;Qa=!0;this.autoUpdateScene&&a.updateMatrixWorld();void 0===b.parent&&b.updateMatrixWorld();b._viewMatrixArray||(b._viewMatrixArray=new Float32Array(16));b._projectionMatrixArray||(b._projectionMatrixArray=new Float32Array(16));b.matrixWorldInverse.getInverse(b.matrixWorld);b.matrixWorldInverse.flattenToArray(b._viewMatrixArray);
b.projectionMatrix.flattenToArray(b._projectionMatrixArray);Aa.multiply(b.projectionMatrix,b.matrixWorldInverse);Ta.setFromMatrix(Aa);this.autoUpdateObjects&&this.initWebGLObjects(a);j(this.renderPluginsPre,a,b);Q.info.render.calls=0;Q.info.render.vertices=0;Q.info.render.faces=0;Q.info.render.points=0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);h=a.__webglObjects;d=0;for(e=h.length;d<e;d++)if(f=h[d],g=f.object,f.render=!1,
g.visible&&(!(g instanceof THREE.Mesh||g instanceof THREE.ParticleSystem)||!g.frustumCulled||Ta.contains(g))){r(g,b);var p=f,q=p.object,Z=p.buffer,s=void 0,s=s=void 0,s=q.material;s instanceof THREE.MeshFaceMaterial?(s=Z.materialIndex,0<=s&&(s=q.geometry.materials[s],s.transparent?(p.transparent=s,p.opaque=null):(p.opaque=s,p.transparent=null))):s&&(s.transparent?(p.transparent=s,p.opaque=null):(p.opaque=s,p.transparent=null));f.render=!0;!0===this.sortObjects&&(null!==g.renderDepth?f.z=g.renderDepth:
(ga.copy(g.matrixWorld.getPosition()),Aa.multiplyVector3(ga),f.z=ga.z))}this.sortObjects&&h.sort(i);h=a.__webglObjectsImmediate;d=0;for(e=h.length;d<e;d++)f=h[d],g=f.object,g.visible&&(r(g,b),g=f.object.material,g.transparent?(f.transparent=g,f.opaque=null):(f.opaque=g,f.transparent=null));a.overrideMaterial?(d=a.overrideMaterial,this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),v(d.polygonOffset,d.polygonOffsetFactor,
d.polygonOffsetUnits),l(a.__webglObjects,!1,"",b,k,n,!0,d),m(a.__webglObjectsImmediate,"",b,k,n,!1,d)):(this.setBlending(THREE.NormalBlending),l(a.__webglObjects,!0,"opaque",b,k,n,!1),m(a.__webglObjectsImmediate,"opaque",b,k,n,!1),l(a.__webglObjects,!1,"transparent",b,k,n,!0),m(a.__webglObjectsImmediate,"transparent",b,k,n,!0));j(this.renderPluginsPost,a,b);c&&(c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter)&&(c instanceof THREE.WebGLRenderTargetCube?(o.bindTexture(o.TEXTURE_CUBE_MAP,
c.__webglTexture),o.generateMipmap(o.TEXTURE_CUBE_MAP),o.bindTexture(o.TEXTURE_CUBE_MAP,null)):(o.bindTexture(o.TEXTURE_2D,c.__webglTexture),o.generateMipmap(o.TEXTURE_2D),o.bindTexture(o.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(a,b,c,d,e){var f=x(a,b,c,d,e);Y=-1;Q.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,o,Ta):e.render(function(a){Q.renderBufferImmediate(a,f,d)})};this.initWebGLObjects=function(a){a.__webglObjects||
(a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);for(;a.__objectsAdded.length;){var i=a.__objectsAdded[0],j=a,k=void 0,l=void 0,m=void 0;if(!i.__webglInit)if(i.__webglInit=!0,i._modelViewMatrix=new THREE.Matrix4,i._normalMatrix=new THREE.Matrix3,i instanceof THREE.Mesh)if(l=i.geometry,l instanceof THREE.Geometry){if(void 0===l.geometryGroups){var Z=l,r=void 0,u=void 0,ga=void 0,v=void 0,Za=void 0,x=void 0,w=void 0,y={},A=Z.morphTargets.length,Qa=Z.morphNormals.length;
Z.geometryGroups={};r=0;for(u=Z.faces.length;r<u;r++)ga=Z.faces[r],v=ga.materialIndex,x=void 0!==v?v:-1,void 0===y[x]&&(y[x]={hash:x,counter:0}),w=y[x].hash+"_"+y[x].counter,void 0===Z.geometryGroups[w]&&(Z.geometryGroups[w]={faces3:[],faces4:[],materialIndex:v,vertices:0,numMorphTargets:A,numMorphNormals:Qa}),Za=ga instanceof THREE.Face3?3:4,65535<Z.geometryGroups[w].vertices+Za&&(y[x].counter+=1,w=y[x].hash+"_"+y[x].counter,void 0===Z.geometryGroups[w]&&(Z.geometryGroups[w]={faces3:[],faces4:[],
materialIndex:v,vertices:0,numMorphTargets:A,numMorphNormals:Qa})),ga instanceof THREE.Face3?Z.geometryGroups[w].faces3.push(r):Z.geometryGroups[w].faces4.push(r),Z.geometryGroups[w].vertices+=Za;Z.geometryGroupsList=[];var F=void 0;for(F in Z.geometryGroups)Z.geometryGroups[F].id=R++,Z.geometryGroupsList.push(Z.geometryGroups[F])}for(k in l.geometryGroups)if(m=l.geometryGroups[k],!m.__webglVertexBuffer){var C=m;C.__webglVertexBuffer=o.createBuffer();C.__webglNormalBuffer=o.createBuffer();C.__webglTangentBuffer=
o.createBuffer();C.__webglColorBuffer=o.createBuffer();C.__webglUVBuffer=o.createBuffer();C.__webglUV2Buffer=o.createBuffer();C.__webglSkinIndicesBuffer=o.createBuffer();C.__webglSkinWeightsBuffer=o.createBuffer();C.__webglFaceBuffer=o.createBuffer();C.__webglLineBuffer=o.createBuffer();var E=void 0,G=void 0;if(C.numMorphTargets){C.__webglMorphTargetsBuffers=[];E=0;for(G=C.numMorphTargets;E<G;E++)C.__webglMorphTargetsBuffers.push(o.createBuffer())}if(C.numMorphNormals){C.__webglMorphNormalsBuffers=
[];E=0;for(G=C.numMorphNormals;E<G;E++)C.__webglMorphNormalsBuffers.push(o.createBuffer())}Q.info.memory.geometries++;var D=m,H=i,pb=H.geometry,J=D.faces3,N=D.faces4,P=3*J.length+4*N.length,K=1*J.length+2*N.length,M=3*J.length+4*N.length,L=c(H,D),nb=e(L),O=d(L),S=L.vertexColors?L.vertexColors:!1;D.__vertexArray=new Float32Array(3*P);O&&(D.__normalArray=new Float32Array(3*P));pb.hasTangents&&(D.__tangentArray=new Float32Array(4*P));S&&(D.__colorArray=new Float32Array(3*P));if(nb){if(0<pb.faceUvs.length||
0<pb.faceVertexUvs.length)D.__uvArray=new Float32Array(2*P);if(1<pb.faceUvs.length||1<pb.faceVertexUvs.length)D.__uv2Array=new Float32Array(2*P)}H.geometry.skinWeights.length&&H.geometry.skinIndices.length&&(D.__skinIndexArray=new Float32Array(4*P),D.__skinWeightArray=new Float32Array(4*P));D.__faceArray=new Uint16Array(3*K);D.__lineArray=new Uint16Array(2*M);var T=void 0,Y=void 0;if(D.numMorphTargets){D.__morphTargetsArrays=[];T=0;for(Y=D.numMorphTargets;T<Y;T++)D.__morphTargetsArrays.push(new Float32Array(3*
P))}if(D.numMorphNormals){D.__morphNormalsArrays=[];T=0;for(Y=D.numMorphNormals;T<Y;T++)D.__morphNormalsArrays.push(new Float32Array(3*P))}D.__webglFaceCount=3*K;D.__webglLineCount=2*M;if(L.attributes){void 0===D.__webglCustomAttributesList&&(D.__webglCustomAttributesList=[]);var da=void 0;for(da in L.attributes){var aa=L.attributes[da],fb={},gc;for(gc in aa)fb[gc]=aa[gc];if(!fb.__webglInitialized||fb.createUniqueBuffers){fb.__webglInitialized=!0;var kb=1;"v2"===fb.type?kb=2:"v3"===fb.type?kb=3:"v4"===
fb.type?kb=4:"c"===fb.type&&(kb=3);fb.size=kb;fb.array=new Float32Array(P*kb);fb.buffer=o.createBuffer();fb.buffer.belongsToAttribute=da;aa.needsUpdate=!0;fb.__original=aa}D.__webglCustomAttributesList.push(fb)}}D.__inittedArrays=!0;l.verticesNeedUpdate=!0;l.morphTargetsNeedUpdate=!0;l.elementsNeedUpdate=!0;l.uvsNeedUpdate=!0;l.normalsNeedUpdate=!0;l.tangentsNeedUpdate=!0;l.colorsNeedUpdate=!0}}else l instanceof THREE.BufferGeometry&&f(l);else if(i instanceof THREE.Ribbon){if(l=i.geometry,!l.__webglVertexBuffer){var ha=
l;ha.__webglVertexBuffer=o.createBuffer();ha.__webglColorBuffer=o.createBuffer();Q.info.memory.geometries++;var ca=l,ja=ca.vertices.length;ca.__vertexArray=new Float32Array(3*ja);ca.__colorArray=new Float32Array(3*ja);ca.__webglVertexCount=ja;l.verticesNeedUpdate=!0;l.colorsNeedUpdate=!0}}else if(i instanceof THREE.Line){if(l=i.geometry,!l.__webglVertexBuffer){var la=l;la.__webglVertexBuffer=o.createBuffer();la.__webglColorBuffer=o.createBuffer();Q.info.memory.geometries++;var bc=l,Cc=i,cc=bc.vertices.length;
bc.__vertexArray=new Float32Array(3*cc);bc.__colorArray=new Float32Array(3*cc);bc.__webglLineCount=cc;b(bc,Cc);l.verticesNeedUpdate=!0;l.colorsNeedUpdate=!0}}else if(i instanceof THREE.ParticleSystem&&(l=i.geometry,!l.__webglVertexBuffer))if(l instanceof THREE.Geometry){var sa=l;sa.__webglVertexBuffer=o.createBuffer();sa.__webglColorBuffer=o.createBuffer();Q.info.memory.geometries++;var va=l,pc=i,pa=va.vertices.length;va.__vertexArray=new Float32Array(3*pa);va.__colorArray=new Float32Array(3*pa);
va.__sortArray=[];va.__webglParticleCount=pa;b(va,pc);l.verticesNeedUpdate=!0;l.colorsNeedUpdate=!0}else l instanceof THREE.BufferGeometry&&f(l);if(!i.__webglActive){if(i instanceof THREE.Mesh)if(l=i.geometry,l instanceof THREE.BufferGeometry)p(j.__webglObjects,l,i);else for(k in l.geometryGroups)m=l.geometryGroups[k],p(j.__webglObjects,m,i);else i instanceof THREE.Ribbon||i instanceof THREE.Line||i instanceof THREE.ParticleSystem?(l=i.geometry,p(j.__webglObjects,l,i)):i instanceof THREE.ImmediateRenderObject||
i.immediateRenderCallback?j.__webglObjectsImmediate.push({object:i,opaque:null,transparent:null}):i instanceof THREE.Sprite?j.__webglSprites.push(i):i instanceof THREE.LensFlare&&j.__webglFlares.push(i);i.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){var ka=a.__objectsRemoved[0],ya=a;ka instanceof THREE.Mesh||ka instanceof THREE.ParticleSystem||ka instanceof THREE.Ribbon||ka instanceof THREE.Line?t(ya.__webglObjects,ka):ka instanceof THREE.Sprite?s(ya.__webglSprites,
ka):ka instanceof THREE.LensFlare?s(ya.__webglFlares,ka):(ka instanceof THREE.ImmediateRenderObject||ka.immediateRenderCallback)&&t(ya.__webglObjectsImmediate,ka);ka.__webglActive=!1;a.__objectsRemoved.splice(0,1)}for(var Na=0,Aa=a.__webglObjects.length;Na<Aa;Na++){var qa=a.__webglObjects[Na].object,ia=qa.geometry,Ea=void 0,Ca=void 0,ta=void 0;if(qa instanceof THREE.Mesh)if(ia instanceof THREE.BufferGeometry)(ia.verticesNeedUpdate||ia.elementsNeedUpdate||ia.uvsNeedUpdate||ia.normalsNeedUpdate||ia.colorsNeedUpdate||
ia.tangentsNeedUpdate)&&h(ia,o.DYNAMIC_DRAW,!ia.dynamic),ia.verticesNeedUpdate=!1,ia.elementsNeedUpdate=!1,ia.uvsNeedUpdate=!1,ia.normalsNeedUpdate=!1,ia.colorsNeedUpdate=!1,ia.tangentsNeedUpdate=!1;else{for(var Pa=0,Ta=ia.geometryGroupsList.length;Pa<Ta;Pa++)if(Ea=ia.geometryGroupsList[Pa],ta=c(qa,Ea),Ca=ta.attributes&&n(ta),ia.verticesNeedUpdate||ia.morphTargetsNeedUpdate||ia.elementsNeedUpdate||ia.uvsNeedUpdate||ia.normalsNeedUpdate||ia.colorsNeedUpdate||ia.tangentsNeedUpdate||Ca){var ua=Ea,bb=
qa,Ga=o.DYNAMIC_DRAW,eb=!ia.dynamic,Ya=ta;if(ua.__inittedArrays){var jb=d(Ya),ib=Ya.vertexColors?Ya.vertexColors:!1,ob=e(Ya),mb=jb===THREE.SmoothShading,I=void 0,$=void 0,Ub=void 0,U=void 0,jc=void 0,Vb=void 0,wb=void 0,Ec=void 0,Nb=void 0,kc=void 0,lc=void 0,V=void 0,W=void 0,X=void 0,ra=void 0,xb=void 0,yb=void 0,zb=void 0,qc=void 0,Ab=void 0,Bb=void 0,Cb=void 0,rc=void 0,Db=void 0,Eb=void 0,Fb=void 0,sc=void 0,Gb=void 0,Hb=void 0,Ib=void 0,tc=void 0,Jb=void 0,Kb=void 0,Lb=void 0,uc=void 0,za=void 0,
Xc=void 0,Wb=void 0,mc=void 0,nc=void 0,Ua=void 0,Yc=void 0,Ra=void 0,Sa=void 0,Xb=void 0,Ob=void 0,La=0,Oa=0,Pb=0,Qb=0,sb=0,$a=0,Da=0,db=0,Ma=0,fa=0,ma=0,B=0,Ba=void 0,Va=ua.__vertexArray,vc=ua.__uvArray,wc=ua.__uv2Array,tb=ua.__normalArray,Ha=ua.__tangentArray,Wa=ua.__colorArray,Ia=ua.__skinIndexArray,Ja=ua.__skinWeightArray,Qc=ua.__morphTargetsArrays,Rc=ua.__morphNormalsArrays,Sc=ua.__webglCustomAttributesList,z=void 0,Mb=ua.__faceArray,lb=ua.__lineArray,gb=bb.geometry,fd=gb.elementsNeedUpdate,
Zc=gb.uvsNeedUpdate,gd=gb.normalsNeedUpdate,hd=gb.tangentsNeedUpdate,id=gb.colorsNeedUpdate,jd=gb.morphTargetsNeedUpdate,ec=gb.vertices,wa=ua.faces3,xa=ua.faces4,ab=gb.faces,Tc=gb.faceVertexUvs[0],Uc=gb.faceVertexUvs[1],fc=gb.skinIndices,Yb=gb.skinWeights,Zb=gb.morphTargets,Fc=gb.morphNormals;if(gb.verticesNeedUpdate){I=0;for($=wa.length;I<$;I++)U=ab[wa[I]],V=ec[U.a],W=ec[U.b],X=ec[U.c],Va[Oa]=V.x,Va[Oa+1]=V.y,Va[Oa+2]=V.z,Va[Oa+3]=W.x,Va[Oa+4]=W.y,Va[Oa+5]=W.z,Va[Oa+6]=X.x,Va[Oa+7]=X.y,Va[Oa+8]=
X.z,Oa+=9;I=0;for($=xa.length;I<$;I++)U=ab[xa[I]],V=ec[U.a],W=ec[U.b],X=ec[U.c],ra=ec[U.d],Va[Oa]=V.x,Va[Oa+1]=V.y,Va[Oa+2]=V.z,Va[Oa+3]=W.x,Va[Oa+4]=W.y,Va[Oa+5]=W.z,Va[Oa+6]=X.x,Va[Oa+7]=X.y,Va[Oa+8]=X.z,Va[Oa+9]=ra.x,Va[Oa+10]=ra.y,Va[Oa+11]=ra.z,Oa+=12;o.bindBuffer(o.ARRAY_BUFFER,ua.__webglVertexBuffer);o.bufferData(o.ARRAY_BUFFER,Va,Ga)}if(jd){Ua=0;for(Yc=Zb.length;Ua<Yc;Ua++){I=ma=0;for($=wa.length;I<$;I++)Xb=wa[I],U=ab[Xb],V=Zb[Ua].vertices[U.a],W=Zb[Ua].vertices[U.b],X=Zb[Ua].vertices[U.c],
Ra=Qc[Ua],Ra[ma]=V.x,Ra[ma+1]=V.y,Ra[ma+2]=V.z,Ra[ma+3]=W.x,Ra[ma+4]=W.y,Ra[ma+5]=W.z,Ra[ma+6]=X.x,Ra[ma+7]=X.y,Ra[ma+8]=X.z,Ya.morphNormals&&(mb?(Ob=Fc[Ua].vertexNormals[Xb],Ab=Ob.a,Bb=Ob.b,Cb=Ob.c):Cb=Bb=Ab=Fc[Ua].faceNormals[Xb],Sa=Rc[Ua],Sa[ma]=Ab.x,Sa[ma+1]=Ab.y,Sa[ma+2]=Ab.z,Sa[ma+3]=Bb.x,Sa[ma+4]=Bb.y,Sa[ma+5]=Bb.z,Sa[ma+6]=Cb.x,Sa[ma+7]=Cb.y,Sa[ma+8]=Cb.z),ma+=9;I=0;for($=xa.length;I<$;I++)Xb=xa[I],U=ab[Xb],V=Zb[Ua].vertices[U.a],W=Zb[Ua].vertices[U.b],X=Zb[Ua].vertices[U.c],ra=Zb[Ua].vertices[U.d],
Ra=Qc[Ua],Ra[ma]=V.x,Ra[ma+1]=V.y,Ra[ma+2]=V.z,Ra[ma+3]=W.x,Ra[ma+4]=W.y,Ra[ma+5]=W.z,Ra[ma+6]=X.x,Ra[ma+7]=X.y,Ra[ma+8]=X.z,Ra[ma+9]=ra.x,Ra[ma+10]=ra.y,Ra[ma+11]=ra.z,Ya.morphNormals&&(mb?(Ob=Fc[Ua].vertexNormals[Xb],Ab=Ob.a,Bb=Ob.b,Cb=Ob.c,rc=Ob.d):rc=Cb=Bb=Ab=Fc[Ua].faceNormals[Xb],Sa=Rc[Ua],Sa[ma]=Ab.x,Sa[ma+1]=Ab.y,Sa[ma+2]=Ab.z,Sa[ma+3]=Bb.x,Sa[ma+4]=Bb.y,Sa[ma+5]=Bb.z,Sa[ma+6]=Cb.x,Sa[ma+7]=Cb.y,Sa[ma+8]=Cb.z,Sa[ma+9]=rc.x,Sa[ma+10]=rc.y,Sa[ma+11]=rc.z),ma+=12;o.bindBuffer(o.ARRAY_BUFFER,
ua.__webglMorphTargetsBuffers[Ua]);o.bufferData(o.ARRAY_BUFFER,Qc[Ua],Ga);Ya.morphNormals&&(o.bindBuffer(o.ARRAY_BUFFER,ua.__webglMorphNormalsBuffers[Ua]),o.bufferData(o.ARRAY_BUFFER,Rc[Ua],Ga))}}if(Yb.length){I=0;for($=wa.length;I<$;I++)U=ab[wa[I]],Gb=Yb[U.a],Hb=Yb[U.b],Ib=Yb[U.c],Ja[fa]=Gb.x,Ja[fa+1]=Gb.y,Ja[fa+2]=Gb.z,Ja[fa+3]=Gb.w,Ja[fa+4]=Hb.x,Ja[fa+5]=Hb.y,Ja[fa+6]=Hb.z,Ja[fa+7]=Hb.w,Ja[fa+8]=Ib.x,Ja[fa+9]=Ib.y,Ja[fa+10]=Ib.z,Ja[fa+11]=Ib.w,Jb=fc[U.a],Kb=fc[U.b],Lb=fc[U.c],Ia[fa]=Jb.x,Ia[fa+
1]=Jb.y,Ia[fa+2]=Jb.z,Ia[fa+3]=Jb.w,Ia[fa+4]=Kb.x,Ia[fa+5]=Kb.y,Ia[fa+6]=Kb.z,Ia[fa+7]=Kb.w,Ia[fa+8]=Lb.x,Ia[fa+9]=Lb.y,Ia[fa+10]=Lb.z,Ia[fa+11]=Lb.w,fa+=12;I=0;for($=xa.length;I<$;I++)U=ab[xa[I]],Gb=Yb[U.a],Hb=Yb[U.b],Ib=Yb[U.c],tc=Yb[U.d],Ja[fa]=Gb.x,Ja[fa+1]=Gb.y,Ja[fa+2]=Gb.z,Ja[fa+3]=Gb.w,Ja[fa+4]=Hb.x,Ja[fa+5]=Hb.y,Ja[fa+6]=Hb.z,Ja[fa+7]=Hb.w,Ja[fa+8]=Ib.x,Ja[fa+9]=Ib.y,Ja[fa+10]=Ib.z,Ja[fa+11]=Ib.w,Ja[fa+12]=tc.x,Ja[fa+13]=tc.y,Ja[fa+14]=tc.z,Ja[fa+15]=tc.w,Jb=fc[U.a],Kb=fc[U.b],Lb=fc[U.c],
uc=fc[U.d],Ia[fa]=Jb.x,Ia[fa+1]=Jb.y,Ia[fa+2]=Jb.z,Ia[fa+3]=Jb.w,Ia[fa+4]=Kb.x,Ia[fa+5]=Kb.y,Ia[fa+6]=Kb.z,Ia[fa+7]=Kb.w,Ia[fa+8]=Lb.x,Ia[fa+9]=Lb.y,Ia[fa+10]=Lb.z,Ia[fa+11]=Lb.w,Ia[fa+12]=uc.x,Ia[fa+13]=uc.y,Ia[fa+14]=uc.z,Ia[fa+15]=uc.w,fa+=16;0<fa&&(o.bindBuffer(o.ARRAY_BUFFER,ua.__webglSkinIndicesBuffer),o.bufferData(o.ARRAY_BUFFER,Ia,Ga),o.bindBuffer(o.ARRAY_BUFFER,ua.__webglSkinWeightsBuffer),o.bufferData(o.ARRAY_BUFFER,Ja,Ga))}if(id&&ib){I=0;for($=wa.length;I<$;I++)U=ab[wa[I]],wb=U.vertexColors,
Ec=U.color,3===wb.length&&ib===THREE.VertexColors?(Db=wb[0],Eb=wb[1],Fb=wb[2]):Fb=Eb=Db=Ec,Wa[Ma]=Db.r,Wa[Ma+1]=Db.g,Wa[Ma+2]=Db.b,Wa[Ma+3]=Eb.r,Wa[Ma+4]=Eb.g,Wa[Ma+5]=Eb.b,Wa[Ma+6]=Fb.r,Wa[Ma+7]=Fb.g,Wa[Ma+8]=Fb.b,Ma+=9;I=0;for($=xa.length;I<$;I++)U=ab[xa[I]],wb=U.vertexColors,Ec=U.color,4===wb.length&&ib===THREE.VertexColors?(Db=wb[0],Eb=wb[1],Fb=wb[2],sc=wb[3]):sc=Fb=Eb=Db=Ec,Wa[Ma]=Db.r,Wa[Ma+1]=Db.g,Wa[Ma+2]=Db.b,Wa[Ma+3]=Eb.r,Wa[Ma+4]=Eb.g,Wa[Ma+5]=Eb.b,Wa[Ma+6]=Fb.r,Wa[Ma+7]=Fb.g,Wa[Ma+8]=
Fb.b,Wa[Ma+9]=sc.r,Wa[Ma+10]=sc.g,Wa[Ma+11]=sc.b,Ma+=12;0<Ma&&(o.bindBuffer(o.ARRAY_BUFFER,ua.__webglColorBuffer),o.bufferData(o.ARRAY_BUFFER,Wa,Ga))}if(hd&&gb.hasTangents){I=0;for($=wa.length;I<$;I++)U=ab[wa[I]],Nb=U.vertexTangents,xb=Nb[0],yb=Nb[1],zb=Nb[2],Ha[Da]=xb.x,Ha[Da+1]=xb.y,Ha[Da+2]=xb.z,Ha[Da+3]=xb.w,Ha[Da+4]=yb.x,Ha[Da+5]=yb.y,Ha[Da+6]=yb.z,Ha[Da+7]=yb.w,Ha[Da+8]=zb.x,Ha[Da+9]=zb.y,Ha[Da+10]=zb.z,Ha[Da+11]=zb.w,Da+=12;I=0;for($=xa.length;I<$;I++)U=ab[xa[I]],Nb=U.vertexTangents,xb=Nb[0],
yb=Nb[1],zb=Nb[2],qc=Nb[3],Ha[Da]=xb.x,Ha[Da+1]=xb.y,Ha[Da+2]=xb.z,Ha[Da+3]=xb.w,Ha[Da+4]=yb.x,Ha[Da+5]=yb.y,Ha[Da+6]=yb.z,Ha[Da+7]=yb.w,Ha[Da+8]=zb.x,Ha[Da+9]=zb.y,Ha[Da+10]=zb.z,Ha[Da+11]=zb.w,Ha[Da+12]=qc.x,Ha[Da+13]=qc.y,Ha[Da+14]=qc.z,Ha[Da+15]=qc.w,Da+=16;o.bindBuffer(o.ARRAY_BUFFER,ua.__webglTangentBuffer);o.bufferData(o.ARRAY_BUFFER,Ha,Ga)}if(gd&&jb){I=0;for($=wa.length;I<$;I++)if(U=ab[wa[I]],jc=U.vertexNormals,Vb=U.normal,3===jc.length&&mb)for(za=0;3>za;za++)Wb=jc[za],tb[$a]=Wb.x,tb[$a+1]=
Wb.y,tb[$a+2]=Wb.z,$a+=3;else for(za=0;3>za;za++)tb[$a]=Vb.x,tb[$a+1]=Vb.y,tb[$a+2]=Vb.z,$a+=3;I=0;for($=xa.length;I<$;I++)if(U=ab[xa[I]],jc=U.vertexNormals,Vb=U.normal,4===jc.length&&mb)for(za=0;4>za;za++)Wb=jc[za],tb[$a]=Wb.x,tb[$a+1]=Wb.y,tb[$a+2]=Wb.z,$a+=3;else for(za=0;4>za;za++)tb[$a]=Vb.x,tb[$a+1]=Vb.y,tb[$a+2]=Vb.z,$a+=3;o.bindBuffer(o.ARRAY_BUFFER,ua.__webglNormalBuffer);o.bufferData(o.ARRAY_BUFFER,tb,Ga)}if(Zc&&Tc&&ob){I=0;for($=wa.length;I<$;I++)if(Ub=wa[I],kc=Tc[Ub],void 0!==kc)for(za=
0;3>za;za++)mc=kc[za],vc[Pb]=mc.u,vc[Pb+1]=mc.v,Pb+=2;I=0;for($=xa.length;I<$;I++)if(Ub=xa[I],kc=Tc[Ub],void 0!==kc)for(za=0;4>za;za++)mc=kc[za],vc[Pb]=mc.u,vc[Pb+1]=mc.v,Pb+=2;0<Pb&&(o.bindBuffer(o.ARRAY_BUFFER,ua.__webglUVBuffer),o.bufferData(o.ARRAY_BUFFER,vc,Ga))}if(Zc&&Uc&&ob){I=0;for($=wa.length;I<$;I++)if(Ub=wa[I],lc=Uc[Ub],void 0!==lc)for(za=0;3>za;za++)nc=lc[za],wc[Qb]=nc.u,wc[Qb+1]=nc.v,Qb+=2;I=0;for($=xa.length;I<$;I++)if(Ub=xa[I],lc=Uc[Ub],void 0!==lc)for(za=0;4>za;za++)nc=lc[za],wc[Qb]=
nc.u,wc[Qb+1]=nc.v,Qb+=2;0<Qb&&(o.bindBuffer(o.ARRAY_BUFFER,ua.__webglUV2Buffer),o.bufferData(o.ARRAY_BUFFER,wc,Ga))}if(fd){I=0;for($=wa.length;I<$;I++)Mb[sb]=La,Mb[sb+1]=La+1,Mb[sb+2]=La+2,sb+=3,lb[db]=La,lb[db+1]=La+1,lb[db+2]=La,lb[db+3]=La+2,lb[db+4]=La+1,lb[db+5]=La+2,db+=6,La+=3;I=0;for($=xa.length;I<$;I++)Mb[sb]=La,Mb[sb+1]=La+1,Mb[sb+2]=La+3,Mb[sb+3]=La+1,Mb[sb+4]=La+2,Mb[sb+5]=La+3,sb+=6,lb[db]=La,lb[db+1]=La+1,lb[db+2]=La,lb[db+3]=La+3,lb[db+4]=La+1,lb[db+5]=La+2,lb[db+6]=La+2,lb[db+7]=
La+3,db+=8,La+=4;o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,ua.__webglFaceBuffer);o.bufferData(o.ELEMENT_ARRAY_BUFFER,Mb,Ga);o.bindBuffer(o.ELEMENT_ARRAY_BUFFER,ua.__webglLineBuffer);o.bufferData(o.ELEMENT_ARRAY_BUFFER,lb,Ga)}if(Sc){za=0;for(Xc=Sc.length;za<Xc;za++)if(z=Sc[za],z.__original.needsUpdate){B=0;if(1===z.size)if(void 0===z.boundTo||"vertices"===z.boundTo){I=0;for($=wa.length;I<$;I++)U=ab[wa[I]],z.array[B]=z.value[U.a],z.array[B+1]=z.value[U.b],z.array[B+2]=z.value[U.c],B+=3;I=0;for($=xa.length;I<
$;I++)U=ab[xa[I]],z.array[B]=z.value[U.a],z.array[B+1]=z.value[U.b],z.array[B+2]=z.value[U.c],z.array[B+3]=z.value[U.d],B+=4}else{if("faces"===z.boundTo){I=0;for($=wa.length;I<$;I++)Ba=z.value[wa[I]],z.array[B]=Ba,z.array[B+1]=Ba,z.array[B+2]=Ba,B+=3;I=0;for($=xa.length;I<$;I++)Ba=z.value[xa[I]],z.array[B]=Ba,z.array[B+1]=Ba,z.array[B+2]=Ba,z.array[B+3]=Ba,B+=4}}else if(2===z.size)if(void 0===z.boundTo||"vertices"===z.boundTo){I=0;for($=wa.length;I<$;I++)U=ab[wa[I]],V=z.value[U.a],W=z.value[U.b],
X=z.value[U.c],z.array[B]=V.x,z.array[B+1]=V.y,z.array[B+2]=W.x,z.array[B+3]=W.y,z.array[B+4]=X.x,z.array[B+5]=X.y,B+=6;I=0;for($=xa.length;I<$;I++)U=ab[xa[I]],V=z.value[U.a],W=z.value[U.b],X=z.value[U.c],ra=z.value[U.d],z.array[B]=V.x,z.array[B+1]=V.y,z.array[B+2]=W.x,z.array[B+3]=W.y,z.array[B+4]=X.x,z.array[B+5]=X.y,z.array[B+6]=ra.x,z.array[B+7]=ra.y,B+=8}else{if("faces"===z.boundTo){I=0;for($=wa.length;I<$;I++)X=W=V=Ba=z.value[wa[I]],z.array[B]=V.x,z.array[B+1]=V.y,z.array[B+2]=W.x,z.array[B+
3]=W.y,z.array[B+4]=X.x,z.array[B+5]=X.y,B+=6;I=0;for($=xa.length;I<$;I++)ra=X=W=V=Ba=z.value[xa[I]],z.array[B]=V.x,z.array[B+1]=V.y,z.array[B+2]=W.x,z.array[B+3]=W.y,z.array[B+4]=X.x,z.array[B+5]=X.y,z.array[B+6]=ra.x,z.array[B+7]=ra.y,B+=8}}else if(3===z.size){var ea;ea="c"===z.type?["r","g","b"]:["x","y","z"];if(void 0===z.boundTo||"vertices"===z.boundTo){I=0;for($=wa.length;I<$;I++)U=ab[wa[I]],V=z.value[U.a],W=z.value[U.b],X=z.value[U.c],z.array[B]=V[ea[0]],z.array[B+1]=V[ea[1]],z.array[B+2]=
V[ea[2]],z.array[B+3]=W[ea[0]],z.array[B+4]=W[ea[1]],z.array[B+5]=W[ea[2]],z.array[B+6]=X[ea[0]],z.array[B+7]=X[ea[1]],z.array[B+8]=X[ea[2]],B+=9;I=0;for($=xa.length;I<$;I++)U=ab[xa[I]],V=z.value[U.a],W=z.value[U.b],X=z.value[U.c],ra=z.value[U.d],z.array[B]=V[ea[0]],z.array[B+1]=V[ea[1]],z.array[B+2]=V[ea[2]],z.array[B+3]=W[ea[0]],z.array[B+4]=W[ea[1]],z.array[B+5]=W[ea[2]],z.array[B+6]=X[ea[0]],z.array[B+7]=X[ea[1]],z.array[B+8]=X[ea[2]],z.array[B+9]=ra[ea[0]],z.array[B+10]=ra[ea[1]],z.array[B+11]=
ra[ea[2]],B+=12}else if("faces"===z.boundTo){I=0;for($=wa.length;I<$;I++)X=W=V=Ba=z.value[wa[I]],z.array[B]=V[ea[0]],z.array[B+1]=V[ea[1]],z.array[B+2]=V[ea[2]],z.array[B+3]=W[ea[0]],z.array[B+4]=W[ea[1]],z.array[B+5]=W[ea[2]],z.array[B+6]=X[ea[0]],z.array[B+7]=X[ea[1]],z.array[B+8]=X[ea[2]],B+=9;I=0;for($=xa.length;I<$;I++)ra=X=W=V=Ba=z.value[xa[I]],z.array[B]=V[ea[0]],z.array[B+1]=V[ea[1]],z.array[B+2]=V[ea[2]],z.array[B+3]=W[ea[0]],z.array[B+4]=W[ea[1]],z.array[B+5]=W[ea[2]],z.array[B+6]=X[ea[0]],
z.array[B+7]=X[ea[1]],z.array[B+8]=X[ea[2]],z.array[B+9]=ra[ea[0]],z.array[B+10]=ra[ea[1]],z.array[B+11]=ra[ea[2]],B+=12}else if("faceVertices"===z.boundTo){I=0;for($=wa.length;I<$;I++)Ba=z.value[wa[I]],V=Ba[0],W=Ba[1],X=Ba[2],z.array[B]=V[ea[0]],z.array[B+1]=V[ea[1]],z.array[B+2]=V[ea[2]],z.array[B+3]=W[ea[0]],z.array[B+4]=W[ea[1]],z.array[B+5]=W[ea[2]],z.array[B+6]=X[ea[0]],z.array[B+7]=X[ea[1]],z.array[B+8]=X[ea[2]],B+=9;I=0;for($=xa.length;I<$;I++)Ba=z.value[xa[I]],V=Ba[0],W=Ba[1],X=Ba[2],ra=
Ba[3],z.array[B]=V[ea[0]],z.array[B+1]=V[ea[1]],z.array[B+2]=V[ea[2]],z.array[B+3]=W[ea[0]],z.array[B+4]=W[ea[1]],z.array[B+5]=W[ea[2]],z.array[B+6]=X[ea[0]],z.array[B+7]=X[ea[1]],z.array[B+8]=X[ea[2]],z.array[B+9]=ra[ea[0]],z.array[B+10]=ra[ea[1]],z.array[B+11]=ra[ea[2]],B+=12}}else if(4===z.size)if(void 0===z.boundTo||"vertices"===z.boundTo){I=0;for($=wa.length;I<$;I++)U=ab[wa[I]],V=z.value[U.a],W=z.value[U.b],X=z.value[U.c],z.array[B]=V.x,z.array[B+1]=V.y,z.array[B+2]=V.z,z.array[B+3]=V.w,z.array[B+
4]=W.x,z.array[B+5]=W.y,z.array[B+6]=W.z,z.array[B+7]=W.w,z.array[B+8]=X.x,z.array[B+9]=X.y,z.array[B+10]=X.z,z.array[B+11]=X.w,B+=12;I=0;for($=xa.length;I<$;I++)U=ab[xa[I]],V=z.value[U.a],W=z.value[U.b],X=z.value[U.c],ra=z.value[U.d],z.array[B]=V.x,z.array[B+1]=V.y,z.array[B+2]=V.z,z.array[B+3]=V.w,z.array[B+4]=W.x,z.array[B+5]=W.y,z.array[B+6]=W.z,z.array[B+7]=W.w,z.array[B+8]=X.x,z.array[B+9]=X.y,z.array[B+10]=X.z,z.array[B+11]=X.w,z.array[B+12]=ra.x,z.array[B+13]=ra.y,z.array[B+14]=ra.z,z.array[B+
15]=ra.w,B+=16}else if("faces"===z.boundTo){I=0;for($=wa.length;I<$;I++)X=W=V=Ba=z.value[wa[I]],z.array[B]=V.x,z.array[B+1]=V.y,z.array[B+2]=V.z,z.array[B+3]=V.w,z.array[B+4]=W.x,z.array[B+5]=W.y,z.array[B+6]=W.z,z.array[B+7]=W.w,z.array[B+8]=X.x,z.array[B+9]=X.y,z.array[B+10]=X.z,z.array[B+11]=X.w,B+=12;I=0;for($=xa.length;I<$;I++)ra=X=W=V=Ba=z.value[xa[I]],z.array[B]=V.x,z.array[B+1]=V.y,z.array[B+2]=V.z,z.array[B+3]=V.w,z.array[B+4]=W.x,z.array[B+5]=W.y,z.array[B+6]=W.z,z.array[B+7]=W.w,z.array[B+
8]=X.x,z.array[B+9]=X.y,z.array[B+10]=X.z,z.array[B+11]=X.w,z.array[B+12]=ra.x,z.array[B+13]=ra.y,z.array[B+14]=ra.z,z.array[B+15]=ra.w,B+=16}else if("faceVertices"===z.boundTo){I=0;for($=wa.length;I<$;I++)Ba=z.value[wa[I]],V=Ba[0],W=Ba[1],X=Ba[2],z.array[B]=V.x,z.array[B+1]=V.y,z.array[B+2]=V.z,z.array[B+3]=V.w,z.array[B+4]=W.x,z.array[B+5]=W.y,z.array[B+6]=W.z,z.array[B+7]=W.w,z.array[B+8]=X.x,z.array[B+9]=X.y,z.array[B+10]=X.z,z.array[B+11]=X.w,B+=12;I=0;for($=xa.length;I<$;I++)Ba=z.value[xa[I]],
V=Ba[0],W=Ba[1],X=Ba[2],ra=Ba[3],z.array[B]=V.x,z.array[B+1]=V.y,z.array[B+2]=V.z,z.array[B+3]=V.w,z.array[B+4]=W.x,z.array[B+5]=W.y,z.array[B+6]=W.z,z.array[B+7]=W.w,z.array[B+8]=X.x,z.array[B+9]=X.y,z.array[B+10]=X.z,z.array[B+11]=X.w,z.array[B+12]=ra.x,z.array[B+13]=ra.y,z.array[B+14]=ra.z,z.array[B+15]=ra.w,B+=16}o.bindBuffer(o.ARRAY_BUFFER,z.buffer);o.bufferData(o.ARRAY_BUFFER,z.array,Ga)}}eb&&(delete ua.__inittedArrays,delete ua.__colorArray,delete ua.__normalArray,delete ua.__tangentArray,
delete ua.__uvArray,delete ua.__uv2Array,delete ua.__faceArray,delete ua.__vertexArray,delete ua.__lineArray,delete ua.__skinIndexArray,delete ua.__skinWeightArray)}}ia.verticesNeedUpdate=!1;ia.morphTargetsNeedUpdate=!1;ia.elementsNeedUpdate=!1;ia.uvsNeedUpdate=!1;ia.normalsNeedUpdate=!1;ia.colorsNeedUpdate=!1;ia.tangentsNeedUpdate=!1;ta.attributes&&q(ta)}else if(qa instanceof THREE.Ribbon){if(ia.verticesNeedUpdate||ia.colorsNeedUpdate){var $b=ia,$c=o.DYNAMIC_DRAW,xc=void 0,yc=void 0,Gc=void 0,ac=
void 0,Hc=void 0,ad=$b.vertices,bd=$b.colors,kd=ad.length,ld=bd.length,Ic=$b.__vertexArray,Jc=$b.__colorArray,md=$b.colorsNeedUpdate;if($b.verticesNeedUpdate){for(xc=0;xc<kd;xc++)Gc=ad[xc],ac=3*xc,Ic[ac]=Gc.x,Ic[ac+1]=Gc.y,Ic[ac+2]=Gc.z;o.bindBuffer(o.ARRAY_BUFFER,$b.__webglVertexBuffer);o.bufferData(o.ARRAY_BUFFER,Ic,$c)}if(md){for(yc=0;yc<ld;yc++)Hc=bd[yc],ac=3*yc,Jc[ac]=Hc.r,Jc[ac+1]=Hc.g,Jc[ac+2]=Hc.b;o.bindBuffer(o.ARRAY_BUFFER,$b.__webglColorBuffer);o.bufferData(o.ARRAY_BUFFER,Jc,$c)}}ia.verticesNeedUpdate=
!1;ia.colorsNeedUpdate=!1}else if(qa instanceof THREE.Line){ta=c(qa,Ea);Ca=ta.attributes&&n(ta);if(ia.verticesNeedUpdate||ia.colorsNeedUpdate||Ca){var Rb=ia,Vc=o.DYNAMIC_DRAW,zc=void 0,Ac=void 0,Kc=void 0,Ka=void 0,Lc=void 0,cd=Rb.vertices,dd=Rb.colors,nd=cd.length,od=dd.length,Mc=Rb.__vertexArray,Nc=Rb.__colorArray,pd=Rb.colorsNeedUpdate,Wc=Rb.__webglCustomAttributesList,Oc=void 0,ed=void 0,Xa=void 0,oc=void 0,hb=void 0,Fa=void 0;if(Rb.verticesNeedUpdate){for(zc=0;zc<nd;zc++)Kc=cd[zc],Ka=3*zc,Mc[Ka]=
Kc.x,Mc[Ka+1]=Kc.y,Mc[Ka+2]=Kc.z;o.bindBuffer(o.ARRAY_BUFFER,Rb.__webglVertexBuffer);o.bufferData(o.ARRAY_BUFFER,Mc,Vc)}if(pd){for(Ac=0;Ac<od;Ac++)Lc=dd[Ac],Ka=3*Ac,Nc[Ka]=Lc.r,Nc[Ka+1]=Lc.g,Nc[Ka+2]=Lc.b;o.bindBuffer(o.ARRAY_BUFFER,Rb.__webglColorBuffer);o.bufferData(o.ARRAY_BUFFER,Nc,Vc)}if(Wc){Oc=0;for(ed=Wc.length;Oc<ed;Oc++)if(Fa=Wc[Oc],Fa.needsUpdate&&(void 0===Fa.boundTo||"vertices"===Fa.boundTo)){Ka=0;oc=Fa.value.length;if(1===Fa.size)for(Xa=0;Xa<oc;Xa++)Fa.array[Xa]=Fa.value[Xa];else if(2===
Fa.size)for(Xa=0;Xa<oc;Xa++)hb=Fa.value[Xa],Fa.array[Ka]=hb.x,Fa.array[Ka+1]=hb.y,Ka+=2;else if(3===Fa.size)if("c"===Fa.type)for(Xa=0;Xa<oc;Xa++)hb=Fa.value[Xa],Fa.array[Ka]=hb.r,Fa.array[Ka+1]=hb.g,Fa.array[Ka+2]=hb.b,Ka+=3;else for(Xa=0;Xa<oc;Xa++)hb=Fa.value[Xa],Fa.array[Ka]=hb.x,Fa.array[Ka+1]=hb.y,Fa.array[Ka+2]=hb.z,Ka+=3;else if(4===Fa.size)for(Xa=0;Xa<oc;Xa++)hb=Fa.value[Xa],Fa.array[Ka]=hb.x,Fa.array[Ka+1]=hb.y,Fa.array[Ka+2]=hb.z,Fa.array[Ka+3]=hb.w,Ka+=4;o.bindBuffer(o.ARRAY_BUFFER,Fa.buffer);
o.bufferData(o.ARRAY_BUFFER,Fa.array,Vc)}}}ia.verticesNeedUpdate=!1;ia.colorsNeedUpdate=!1;ta.attributes&&q(ta)}else qa instanceof THREE.ParticleSystem&&(ia instanceof THREE.BufferGeometry?((ia.verticesNeedUpdate||ia.colorsNeedUpdate)&&h(ia,o.DYNAMIC_DRAW,!ia.dynamic),ia.verticesNeedUpdate=!1,ia.colorsNeedUpdate=!1):(ta=c(qa,Ea),Ca=ta.attributes&&n(ta),(ia.verticesNeedUpdate||ia.colorsNeedUpdate||qa.sortParticles||Ca)&&g(ia,o.DYNAMIC_DRAW,qa),ia.verticesNeedUpdate=!1,ia.colorsNeedUpdate=!1,ta.attributes&&
q(ta)))}};this.initMaterial=function(a,b,c,d){var e,f,g,h,i,j,k,l,m;a instanceof THREE.MeshDepthMaterial?m="depth":a instanceof THREE.MeshNormalMaterial?m="normal":a instanceof THREE.MeshBasicMaterial?m="basic":a instanceof THREE.MeshLambertMaterial?m="lambert":a instanceof THREE.MeshPhongMaterial?m="phong":a instanceof THREE.LineBasicMaterial?m="basic":a instanceof THREE.ParticleBasicMaterial&&(m="particle_basic");if(m){var n=THREE.ShaderLib[m];a.uniforms=THREE.UniformsUtils.clone(n.uniforms);a.vertexShader=
n.vertexShader;a.fragmentShader=n.fragmentShader}var p,q,Z;e=p=q=Z=n=0;for(f=b.length;e<f;e++)g=b[e],g.onlyShadow||(g instanceof THREE.DirectionalLight&&p++,g instanceof THREE.PointLight&&q++,g instanceof THREE.SpotLight&&Z++,g instanceof THREE.HemisphereLight&&n++);q+Z+p+n<=O?e=p:(e=Math.ceil(O*p/(q+p)),Z=q=O-e,n=e);f=q;g=Z;h=n;n=p=0;for(Z=b.length;n<Z;n++)q=b[n],q.castShadow&&(q instanceof THREE.SpotLight&&p++,q instanceof THREE.DirectionalLight&&!q.shadowCascade&&p++);l=p;pc&&d&&d.useVertexTexture?
k=1024:(b=o.getParameter(o.MAX_VERTEX_UNIFORM_VECTORS),b=Math.floor((b-20)/4),void 0!==d&&d instanceof THREE.SkinnedMesh&&(b=Math.min(d.bones.length,b),b<d.bones.length&&console.warn("WebGLRenderer: too many bones - "+d.bones.length+", this GPU supports just "+b+" (try OpenGL instead of ANGLE)")),k=b);var r;a:{q=a.fragmentShader;Z=a.vertexShader;n=a.uniforms;b=a.attributes;p=a.defines;var c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,specularMap:!!a.specularMap,
vertexColors:a.vertexColors,fog:c,useFog:a.fog,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,maxBones:k,useVertexTexture:pc&&d&&d.useVertexTexture,boneTextureWidth:d&&d.boneTextureWidth,boneTextureHeight:d&&d.boneTextureHeight,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:e,maxPointLights:f,maxSpotLights:g,maxHemiLights:h,maxShadows:l,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapSoft:this.shadowMapSoft,
shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:a.side===THREE.DoubleSide,flipSided:a.side===THREE.BackSide},s,t,u,d=[];m?d.push(m):(d.push(q),d.push(Z));for(t in p)d.push(t),d.push(p[t]);for(s in c)d.push(s),d.push(c[s]);m=d.join();s=0;for(t=ja.length;s<t;s++)if(d=ja[s],d.code===m){d.usedTimes++;r=d.program;break a}s=[];for(u in p)t=p[u],!1!==t&&(t="#define "+u+" "+t,s.push(t));t=
s.join("\n");u=o.createProgram();s=["precision "+L+" float;",t,cc?"#define VERTEX_TEXTURES":"",Q.gammaInput?"#define GAMMA_INPUT":"",Q.gammaOutput?"#define GAMMA_OUTPUT":"",Q.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",
c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.useVertexTexture?"#define BONE_TEXTURE":"",c.boneTextureWidth?"#define N_BONE_PIXEL_X "+c.boneTextureWidth.toFixed(1):"",c.boneTextureHeight?"#define N_BONE_PIXEL_Y "+c.boneTextureHeight.toFixed(1):"",c.morphTargets?"#define USE_MORPHTARGETS":
"",c.morphNormals?"#define USE_MORPHNORMALS":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
t=["precision "+L+" float;",c.bumpMap||c.normalMap?"#extension GL_OES_standard_derivatives : enable":"",t,"#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",Q.gammaInput?"#define GAMMA_INPUT":"",Q.gammaOutput?"#define GAMMA_OUTPUT":"",Q.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",
c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?
"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");t=F("fragment",t+q);s=F("vertex",s+Z);o.attachShader(u,s);o.attachShader(u,t);o.linkProgram(u);o.getProgramParameter(u,o.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+o.getProgramParameter(u,
o.VALIDATE_STATUS)+", gl error ["+o.getError()+"]");o.deleteShader(t);o.deleteShader(s);u.uniforms={};u.attributes={};var ga;s="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" ");c.useVertexTexture?s.push("boneTexture"):s.push("boneGlobalMatrices");for(ga in n)s.push(ga);ga=s;s=0;for(t=ga.length;s<t;s++)d=ga[s],u.uniforms[d]=o.getUniformLocation(u,d);s="position normal uv uv2 tangent color skinIndex skinWeight".split(" ");for(ga=0;ga<
c.maxMorphTargets;ga++)s.push("morphTarget"+ga);for(ga=0;ga<c.maxMorphNormals;ga++)s.push("morphNormal"+ga);for(r in b)s.push(r);r=s;ga=0;for(s=r.length;ga<s;ga++)t=r[ga],u.attributes[t]=o.getAttribLocation(u,t);u.id=sa++;ja.push({program:u,code:m,usedTimes:1});Q.info.memory.programs=ja.length;r=u}a.program=r;r=a.program.attributes;0<=r.position&&o.enableVertexAttribArray(r.position);0<=r.color&&o.enableVertexAttribArray(r.color);0<=r.normal&&o.enableVertexAttribArray(r.normal);0<=r.tangent&&o.enableVertexAttribArray(r.tangent);
a.skinning&&(0<=r.skinIndex&&0<=r.skinWeight)&&(o.enableVertexAttribArray(r.skinIndex),o.enableVertexAttribArray(r.skinWeight));if(a.attributes)for(j in a.attributes)void 0!==r[j]&&0<=r[j]&&o.enableVertexAttribArray(r[j]);if(a.morphTargets){a.numSupportedMorphTargets=0;u="morphTarget";for(j=0;j<this.maxMorphTargets;j++)ga=u+j,0<=r[ga]&&(o.enableVertexAttribArray(r[ga]),a.numSupportedMorphTargets++)}if(a.morphNormals){a.numSupportedMorphNormals=0;u="morphNormal";for(j=0;j<this.maxMorphNormals;j++)ga=
u+j,0<=r[ga]&&(o.enableVertexAttribArray(r[ga]),a.numSupportedMorphNormals++)}a.uniformsList=[];for(i in a.uniforms)a.uniformsList.push([a.uniforms[i],i])};this.setFaceCulling=function(a,b){a?(!b||"ccw"===b?o.frontFace(o.CCW):o.frontFace(o.CW),"back"===a?o.cullFace(o.BACK):"front"===a?o.cullFace(o.FRONT):o.cullFace(o.FRONT_AND_BACK),o.enable(o.CULL_FACE)):o.disable(o.CULL_FACE)};this.setMaterialFaces=function(a){var b=a.side===THREE.DoubleSide,a=a.side===THREE.BackSide;va!==b&&(b?o.disable(o.CULL_FACE):
o.enable(o.CULL_FACE),va=b);Na!==a&&(a?o.frontFace(o.CW):o.frontFace(o.CCW),Na=a)};this.setDepthTest=function(a){Pa!==a&&(a?o.enable(o.DEPTH_TEST):o.disable(o.DEPTH_TEST),Pa=a)};this.setDepthWrite=function(a){bb!==a&&(o.depthMask(a),bb=a)};this.setBlending=function(a,b,c,d){a!==ya&&(a===THREE.NoBlending?o.disable(o.BLEND):a===THREE.AdditiveBlending?(o.enable(o.BLEND),o.blendEquation(o.FUNC_ADD),o.blendFunc(o.SRC_ALPHA,o.ONE)):a===THREE.SubtractiveBlending?(o.enable(o.BLEND),o.blendEquation(o.FUNC_ADD),
o.blendFunc(o.ZERO,o.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?(o.enable(o.BLEND),o.blendEquation(o.FUNC_ADD),o.blendFunc(o.ZERO,o.SRC_COLOR)):a===THREE.CustomBlending?o.enable(o.BLEND):(o.enable(o.BLEND),o.blendEquationSeparate(o.FUNC_ADD,o.FUNC_ADD),o.blendFuncSeparate(o.SRC_ALPHA,o.ONE_MINUS_SRC_ALPHA,o.ONE,o.ONE_MINUS_SRC_ALPHA)),ya=a);if(a===THREE.CustomBlending){if(b!==ta&&(o.blendEquation(D(b)),ta=b),c!==pa||d!==Ea)o.blendFunc(D(c),D(d)),pa=c,Ea=d}else Ea=pa=ta=null};this.setTexture=
function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.__webglTexture=o.createTexture(),Q.info.memory.textures++);o.activeTexture(o.TEXTURE0+b);o.bindTexture(o.TEXTURE_2D,a.__webglTexture);o.pixelStorei(o.UNPACK_FLIP_Y_WEBGL,a.flipY);o.pixelStorei(o.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);var c=a.image,d=0===(c.width&c.width-1)&&0===(c.height&c.height-1),e=D(a.format),f=D(a.type);C(o.TEXTURE_2D,a,d);if(a instanceof THREE.CompressedTexture)for(var f=a.mipmaps,g=0,h=f.length;g<
h;g++)c=f[g],o.compressedTexImage2D(o.TEXTURE_2D,g,e,c.width,c.height,0,c.data);else a instanceof THREE.DataTexture?o.texImage2D(o.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data):o.texImage2D(o.TEXTURE_2D,0,e,e,f,a.image);a.generateMipmaps&&d&&o.generateMipmap(o.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()}else o.activeTexture(o.TEXTURE0+b),o.bindTexture(o.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){void 0===
a.depthBuffer&&(a.depthBuffer=!0);void 0===a.stencilBuffer&&(a.stencilBuffer=!0);a.__webglTexture=o.createTexture();var c=0===(a.width&a.width-1)&&0===(a.height&a.height-1),d=D(a.format),e=D(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];o.bindTexture(o.TEXTURE_CUBE_MAP,a.__webglTexture);C(o.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++){a.__webglFramebuffer[f]=o.createFramebuffer();a.__webglRenderbuffer[f]=o.createRenderbuffer();o.texImage2D(o.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,
a.height,0,d,e,null);var g=a,h=o.TEXTURE_CUBE_MAP_POSITIVE_X+f;o.bindFramebuffer(o.FRAMEBUFFER,a.__webglFramebuffer[f]);o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,h,g.__webglTexture,0);G(a.__webglRenderbuffer[f],a)}c&&o.generateMipmap(o.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=o.createFramebuffer(),a.__webglRenderbuffer=o.createRenderbuffer(),o.bindTexture(o.TEXTURE_2D,a.__webglTexture),C(o.TEXTURE_2D,a,c),o.texImage2D(o.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=o.TEXTURE_2D,
o.bindFramebuffer(o.FRAMEBUFFER,a.__webglFramebuffer),o.framebufferTexture2D(o.FRAMEBUFFER,o.COLOR_ATTACHMENT0,d,a.__webglTexture,0),G(a.__webglRenderbuffer,a),c&&o.generateMipmap(o.TEXTURE_2D);b?o.bindTexture(o.TEXTURE_CUBE_MAP,null):o.bindTexture(o.TEXTURE_2D,null);o.bindRenderbuffer(o.RENDERBUFFER,null);o.bindFramebuffer(o.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=qa,a=ob,d=Ga,e=Ca);b!==da&&(o.bindFramebuffer(o.FRAMEBUFFER,
b),o.viewport(d,e,c,a),da=b);ka=c;eb=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==c.format?c.format:
THREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0};
THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.anisotropy=this.anisotropy;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;return a};
THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};
THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=this.color=null;this.uvs=[[]];this.z=null};
THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=this.color=null;this.uvs=[[]];this.z=null};
THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=this.object=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.material=null};
THREE.ColorUtils={adjustHSV:function(a,b,c,d){var e=THREE.ColorUtils.__hsv;THREE.ColorUtils.rgbToHsv(a,e);e.h=THREE.Math.clamp(e.h+b,0,1);e.s=THREE.Math.clamp(e.s+c,0,1);e.v=THREE.Math.clamp(e.v+d,0,1);a.setHSV(e.h,e.s,e.v)},rgbToHsv:function(a,b){var c=a.r,d=a.g,e=a.b,f=Math.max(Math.max(c,d),e),g=Math.min(Math.min(c,d),e);if(g===f)g=c=0;else{var h=f-g,g=h/f,c=(c===f?(d-e)/h:d===f?2+(e-c)/h:4+(c-d)/h)/6;0>c&&(c+=1);1<c&&(c-=1)}void 0===b&&(b={h:0,s:0,v:0});b.h=c;b.s=g;b.v=f;return b}};
THREE.ColorUtils.__hsv={h:0,s:0,v:0};
THREE.GeometryUtils={merge:function(a,b){for(var c,d,e=a.vertices.length,f=b instanceof THREE.Mesh?b.geometry:b,g=a.vertices,h=f.vertices,i=a.faces,k=f.faces,j=a.faceVertexUvs[0],l=f.faceVertexUvs[0],m={},p=0;p<a.materials.length;p++)m[a.materials[p].id]=p;b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),c=b.matrix,d=new THREE.Matrix4,d.extractRotation(c,b.scale));for(var p=0,n=h.length;p<n;p++){var q=h[p].clone();c&&c.multiplyVector3(q);g.push(q)}p=0;for(n=k.length;p<n;p++){var g=k[p],
t,s,x=g.vertexNormals,u=g.vertexColors;g instanceof THREE.Face3?t=new THREE.Face3(g.a+e,g.b+e,g.c+e):g instanceof THREE.Face4&&(t=new THREE.Face4(g.a+e,g.b+e,g.c+e,g.d+e));t.normal.copy(g.normal);d&&d.multiplyVector3(t.normal);h=0;for(q=x.length;h<q;h++)s=x[h].clone(),d&&d.multiplyVector3(s),t.vertexNormals.push(s);t.color.copy(g.color);h=0;for(q=u.length;h<q;h++)s=u[h],t.vertexColors.push(s.clone());void 0!==g.materialIndex&&(h=f.materials[g.materialIndex],q=h.id,u=m[q],void 0===u&&(u=a.materials.length,
m[q]=u,a.materials.push(h)),t.materialIndex=u);t.centroid.copy(g.centroid);c&&c.multiplyVector3(t.centroid);i.push(t)}p=0;for(n=l.length;p<n;p++){c=l[p];d=[];h=0;for(q=c.length;h<q;h++)d.push(new THREE.UV(c[h].u,c[h].v));j.push(d)}},clone:function(a){var b=new THREE.Geometry,c,d=a.vertices,e=a.faces,f=a.faceVertexUvs[0];a.materials&&(b.materials=a.materials.slice());a=0;for(c=d.length;a<c;a++)b.vertices.push(d[a].clone());a=0;for(c=e.length;a<c;a++)b.faces.push(e[a].clone());a=0;for(c=f.length;a<
c;a++){for(var d=f[a],e=[],g=0,h=d.length;g<h;g++)e.push(new THREE.UV(d[g].u,d[g].v));b.faceVertexUvs[0].push(e)}return b},randomPointInTriangle:function(a,b,c){var d,e,f,g=new THREE.Vector3,h=THREE.GeometryUtils.__v1;d=THREE.GeometryUtils.random();e=THREE.GeometryUtils.random();1<d+e&&(d=1-d,e=1-e);f=1-d-e;g.copy(a);g.multiplyScalar(d);h.copy(b);h.multiplyScalar(e);g.addSelf(h);h.copy(c);h.multiplyScalar(f);g.addSelf(h);return g},randomPointInFace:function(a,b,c){var d,e,f;if(a instanceof THREE.Face3)return d=
b.vertices[a.a],e=b.vertices[a.b],f=b.vertices[a.c],THREE.GeometryUtils.randomPointInTriangle(d,e,f);if(a instanceof THREE.Face4){d=b.vertices[a.a];e=b.vertices[a.b];f=b.vertices[a.c];var b=b.vertices[a.d],g;c?a._area1&&a._area2?(c=a._area1,g=a._area2):(c=THREE.GeometryUtils.triangleArea(d,e,b),g=THREE.GeometryUtils.triangleArea(e,f,b),a._area1=c,a._area2=g):(c=THREE.GeometryUtils.triangleArea(d,e,b),g=THREE.GeometryUtils.triangleArea(e,f,b));return THREE.GeometryUtils.random()*(c+g)<c?THREE.GeometryUtils.randomPointInTriangle(d,
e,b):THREE.GeometryUtils.randomPointInTriangle(e,f,b)}},randomPointsInGeometry:function(a,b){function c(a){function b(c,d){if(d<c)return c;var e=c+Math.floor((d-c)/2);return k[e]>a?b(c,e-1):k[e]<a?b(e+1,d):e}return b(0,k.length-1)}var d,e,f=a.faces,g=a.vertices,h=f.length,i=0,k=[],j,l,m,p;for(e=0;e<h;e++)d=f[e],d instanceof THREE.Face3?(j=g[d.a],l=g[d.b],m=g[d.c],d._area=THREE.GeometryUtils.triangleArea(j,l,m)):d instanceof THREE.Face4&&(j=g[d.a],l=g[d.b],m=g[d.c],p=g[d.d],d._area1=THREE.GeometryUtils.triangleArea(j,
l,p),d._area2=THREE.GeometryUtils.triangleArea(l,m,p),d._area=d._area1+d._area2),i+=d._area,k[e]=i;d=[];for(e=0;e<b;e++)g=THREE.GeometryUtils.random()*i,g=c(g),d[e]=THREE.GeometryUtils.randomPointInFace(f[g],a,!0);return d},triangleArea:function(a,b,c){var d,e=THREE.GeometryUtils.__v1;e.sub(a,b);d=e.length();e.sub(a,c);a=e.length();e.sub(b,c);c=e.length();b=0.5*(d+a+c);return Math.sqrt(b*(b-d)*(b-a)*(b-c))},center:function(a){a.computeBoundingBox();var b=a.boundingBox,c=new THREE.Vector3;c.add(b.min,
b.max);c.multiplyScalar(-0.5);a.applyMatrix((new THREE.Matrix4).makeTranslation(c.x,c.y,c.z));a.computeBoundingBox();return c},normalizeUVs:function(a){for(var a=a.faceVertexUvs[0],b=0,c=a.length;b<c;b++)for(var d=a[b],e=0,f=d.length;e<f;e++)if(1!==d[e].u&&(d[e].u-=Math.floor(d[e].u)),1!==d[e].v)d[e].v-=Math.floor(d[e].v)},triangulateQuads:function(a){var b,c,d,e,f=[],g=[],h=[];b=0;for(c=a.faceUvs.length;b<c;b++)g[b]=[];b=0;for(c=a.faceVertexUvs.length;b<c;b++)h[b]=[];b=0;for(c=a.faces.length;b<c;b++)if(d=
a.faces[b],d instanceof THREE.Face4){e=d.a;var i=d.b,k=d.c,j=d.d,l=new THREE.Face3,m=new THREE.Face3;l.color.copy(d.color);m.color.copy(d.color);l.materialIndex=d.materialIndex;m.materialIndex=d.materialIndex;l.a=e;l.b=i;l.c=j;m.a=i;m.b=k;m.c=j;4===d.vertexColors.length&&(l.vertexColors[0]=d.vertexColors[0].clone(),l.vertexColors[1]=d.vertexColors[1].clone(),l.vertexColors[2]=d.vertexColors[3].clone(),m.vertexColors[0]=d.vertexColors[1].clone(),m.vertexColors[1]=d.vertexColors[2].clone(),m.vertexColors[2]=
d.vertexColors[3].clone());f.push(l,m);d=0;for(e=a.faceVertexUvs.length;d<e;d++)a.faceVertexUvs[d].length&&(l=a.faceVertexUvs[d][b],i=l[1],k=l[2],j=l[3],l=[l[0].clone(),i.clone(),j.clone()],i=[i.clone(),k.clone(),j.clone()],h[d].push(l,i));d=0;for(e=a.faceUvs.length;d<e;d++)a.faceUvs[d].length&&(i=a.faceUvs[d][b],g[d].push(i,i))}else{f.push(d);d=0;for(e=a.faceUvs.length;d<e;d++)g[d].push(a.faceUvs[d][b]);d=0;for(e=a.faceVertexUvs.length;d<e;d++)h[d].push(a.faceVertexUvs[d][b])}a.faces=f;a.faceUvs=
g;a.faceVertexUvs=h;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals();a.hasTangents&&a.computeTangents()},explode:function(a){for(var b=[],c=0,d=a.faces.length;c<d;c++){var e=b.length,f=a.faces[c];if(f instanceof THREE.Face4){var g=f.a,h=f.b,i=f.c,g=a.vertices[g],h=a.vertices[h],i=a.vertices[i],k=a.vertices[f.d];b.push(g.clone());b.push(h.clone());b.push(i.clone());b.push(k.clone());f.a=e;f.b=e+1;f.c=e+2;f.d=e+3}else g=f.a,h=f.b,i=f.c,g=a.vertices[g],h=a.vertices[h],i=a.vertices[i],
b.push(g.clone()),b.push(h.clone()),b.push(i.clone()),f.a=e,f.b=e+1,f.c=e+2}a.vertices=b;delete a.__tmpVertices},tessellate:function(a,b){var c,d,e,f,g,h,i,k,j,l,m,p,n,q,t,s,x,u,r,y=[],w=[];c=0;for(d=a.faceVertexUvs.length;c<d;c++)w[c]=[];c=0;for(d=a.faces.length;c<d;c++)if(e=a.faces[c],e instanceof THREE.Face3)if(f=e.a,g=e.b,h=e.c,k=a.vertices[f],j=a.vertices[g],l=a.vertices[h],p=k.distanceTo(j),n=j.distanceTo(l),m=k.distanceTo(l),p>b||n>b||m>b){i=a.vertices.length;u=e.clone();r=e.clone();p>=n&&
p>=m?(k=k.clone(),k.lerpSelf(j,0.5),u.a=f,u.b=i,u.c=h,r.a=i,r.b=g,r.c=h,3===e.vertexNormals.length&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[1],0.5),u.vertexNormals[1].copy(f),r.vertexNormals[0].copy(f)),3===e.vertexColors.length&&(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[1],0.5),u.vertexColors[1].copy(f),r.vertexColors[0].copy(f)),e=0):n>=p&&n>=m?(k=j.clone(),k.lerpSelf(l,0.5),u.a=f,u.b=g,u.c=i,r.a=i,r.b=h,r.c=f,3===e.vertexNormals.length&&(f=e.vertexNormals[1].clone(),
f.lerpSelf(e.vertexNormals[2],0.5),u.vertexNormals[2].copy(f),r.vertexNormals[0].copy(f),r.vertexNormals[1].copy(e.vertexNormals[2]),r.vertexNormals[2].copy(e.vertexNormals[0])),3===e.vertexColors.length&&(f=e.vertexColors[1].clone(),f.lerpSelf(e.vertexColors[2],0.5),u.vertexColors[2].copy(f),r.vertexColors[0].copy(f),r.vertexColors[1].copy(e.vertexColors[2]),r.vertexColors[2].copy(e.vertexColors[0])),e=1):(k=k.clone(),k.lerpSelf(l,0.5),u.a=f,u.b=g,u.c=i,r.a=i,r.b=g,r.c=h,3===e.vertexNormals.length&&
(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[2],0.5),u.vertexNormals[2].copy(f),r.vertexNormals[0].copy(f)),3===e.vertexColors.length&&(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[2],0.5),u.vertexColors[2].copy(f),r.vertexColors[0].copy(f)),e=2);y.push(u,r);a.vertices.push(k);f=0;for(g=a.faceVertexUvs.length;f<g;f++)a.faceVertexUvs[f].length&&(k=a.faceVertexUvs[f][c],r=k[0],h=k[1],u=k[2],0===e?(j=r.clone(),j.lerpSelf(h,0.5),k=[r.clone(),j.clone(),u.clone()],h=[j.clone(),h.clone(),
u.clone()]):1===e?(j=h.clone(),j.lerpSelf(u,0.5),k=[r.clone(),h.clone(),j.clone()],h=[j.clone(),u.clone(),r.clone()]):(j=r.clone(),j.lerpSelf(u,0.5),k=[r.clone(),h.clone(),j.clone()],h=[j.clone(),h.clone(),u.clone()]),w[f].push(k,h))}else{y.push(e);f=0;for(g=a.faceVertexUvs.length;f<g;f++)w[f].push(a.faceVertexUvs[f][c])}else if(f=e.a,g=e.b,h=e.c,i=e.d,k=a.vertices[f],j=a.vertices[g],l=a.vertices[h],m=a.vertices[i],p=k.distanceTo(j),n=j.distanceTo(l),q=l.distanceTo(m),t=k.distanceTo(m),p>b||n>b||
q>b||t>b){s=a.vertices.length;x=a.vertices.length+1;u=e.clone();r=e.clone();p>=n&&p>=q&&p>=t||q>=n&&q>=p&&q>=t?(p=k.clone(),p.lerpSelf(j,0.5),j=l.clone(),j.lerpSelf(m,0.5),u.a=f,u.b=s,u.c=x,u.d=i,r.a=s,r.b=g,r.c=h,r.d=x,4===e.vertexNormals.length&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[1],0.5),g=e.vertexNormals[2].clone(),g.lerpSelf(e.vertexNormals[3],0.5),u.vertexNormals[1].copy(f),u.vertexNormals[2].copy(g),r.vertexNormals[0].copy(f),r.vertexNormals[3].copy(g)),4===e.vertexColors.length&&
(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[1],0.5),g=e.vertexColors[2].clone(),g.lerpSelf(e.vertexColors[3],0.5),u.vertexColors[1].copy(f),u.vertexColors[2].copy(g),r.vertexColors[0].copy(f),r.vertexColors[3].copy(g)),e=0):(p=j.clone(),p.lerpSelf(l,0.5),j=m.clone(),j.lerpSelf(k,0.5),u.a=f,u.b=g,u.c=s,u.d=x,r.a=x,r.b=s,r.c=h,r.d=i,4===e.vertexNormals.length&&(f=e.vertexNormals[1].clone(),f.lerpSelf(e.vertexNormals[2],0.5),g=e.vertexNormals[3].clone(),g.lerpSelf(e.vertexNormals[0],0.5),
u.vertexNormals[2].copy(f),u.vertexNormals[3].copy(g),r.vertexNormals[0].copy(g),r.vertexNormals[1].copy(f)),4===e.vertexColors.length&&(f=e.vertexColors[1].clone(),f.lerpSelf(e.vertexColors[2],0.5),g=e.vertexColors[3].clone(),g.lerpSelf(e.vertexColors[0],0.5),u.vertexColors[2].copy(f),u.vertexColors[3].copy(g),r.vertexColors[0].copy(g),r.vertexColors[1].copy(f)),e=1);y.push(u,r);a.vertices.push(p,j);f=0;for(g=a.faceVertexUvs.length;f<g;f++)a.faceVertexUvs[f].length&&(k=a.faceVertexUvs[f][c],r=k[0],
h=k[1],u=k[2],k=k[3],0===e?(j=r.clone(),j.lerpSelf(h,0.5),l=u.clone(),l.lerpSelf(k,0.5),r=[r.clone(),j.clone(),l.clone(),k.clone()],h=[j.clone(),h.clone(),u.clone(),l.clone()]):(j=h.clone(),j.lerpSelf(u,0.5),l=k.clone(),l.lerpSelf(r,0.5),r=[r.clone(),h.clone(),j.clone(),l.clone()],h=[l.clone(),j.clone(),u.clone(),k.clone()]),w[f].push(r,h))}else{y.push(e);f=0;for(g=a.faceVertexUvs.length;f<g;f++)w[f].push(a.faceVertexUvs[f][c])}a.faces=y;a.faceVertexUvs=w}};THREE.GeometryUtils.random=THREE.Math.random16;
THREE.GeometryUtils.__v1=new THREE.Vector3;
THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(a,b,c,d){var e=new Image,f=new THREE.Texture(e,b),b=new THREE.ImageLoader;b.addEventListener("load",function(a){f.image=a.content;f.needsUpdate=!0;c&&c(f)});b.addEventListener("error",function(a){d&&d(a.message)});b.crossOrigin=this.crossOrigin;b.load(a,e);return f},loadCompressedTexture:function(a,b,c,d){var e=new THREE.CompressedTexture;e.mapping=b;var f=new XMLHttpRequest;f.onload=function(){var a=THREE.ImageUtils.parseDDS(f.response,
!0);e.format=a.format;e.mipmaps=a.mipmaps;e.image.width=a.width;e.image.height=a.height;e.generateMipmaps=!1;e.needsUpdate=!0;c&&c(e)};f.onerror=d;f.open("GET",a,!0);f.responseType="arraybuffer";f.send(null);return e},loadTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.Texture;f.image=e;void 0!==b&&(f.mapping=b);f.flipY=!1;for(var b=0,g=a.length;b<g;++b){var h=new Image;e[b]=h;h.onload=function(){e.loadCount=e.loadCount+1;if(e.loadCount===6){f.needsUpdate=true;c&&c()}};h.onerror=
d;h.crossOrigin=this.crossOrigin;h.src=a[b]}return f},loadCompressedTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.CompressedTexture;f.image=e;void 0!==b&&(f.mapping=b);f.flipY=!1;f.generateMipmaps=!1;for(var b=function(a,b){return function(){var d=THREE.ImageUtils.parseDDS(a.response,true);b.format=d.format;b.mipmaps=d.mipmaps;b.width=d.width;b.height=d.height;e.loadCount=e.loadCount+1;if(e.loadCount===6){f.format=d.format;f.needsUpdate=true;c&&c()}}},g=0,h=a.length;g<h;++g){var i=
{};e[g]=i;var k=new XMLHttpRequest;k.onload=b(k,i);k.onerror=d;k.open("GET",a[g],!0);k.responseType="arraybuffer";k.send(null)}return f},parseDDS:function(a,b){function c(a){return a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)}var d={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},e=c("DXT1"),f=c("DXT3"),g=c("DXT5"),h=new Int32Array(a,0,31);if(542327876!==h[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),d;if(!h[20]&4)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),
d;var i=h[21];switch(i){case e:e=8;d.format=THREE.RGB_S3TC_DXT1_Format;break;case f:e=16;d.format=THREE.RGBA_S3TC_DXT3_Format;break;case g:e=16;d.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(i&255,i>>8&255,i>>16&255,i>>24&255)),d}d.mipmapCount=1;h[2]&131072&&!1!==b&&(d.mipmapCount=Math.max(1,h[7]));d.width=h[4];d.height=h[3];h=h[1]+4;f=d.width;g=d.height;for(i=0;i<d.mipmapCount;i++){var k=Math.max(4,f)/
4*Math.max(4,g)/4*e,j={data:new Uint8Array(a,h,k),width:f,height:g};d.mipmaps.push(j);h+=k;f=Math.max(0.5*f,1);g=Math.max(0.5*g,1)}return d},getNormalMap:function(a,b){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]},b=b|1,d=a.width,e=a.height,f=document.createElement("canvas");f.width=d;f.height=e;var g=f.getContext("2d");g.drawImage(a,0,0);for(var h=g.getImageData(0,0,d,e).data,i=g.createImageData(d,e),k=i.data,j=0;j<d;j++)for(var l=0;l<e;l++){var m=
0>l-1?0:l-1,p=l+1>e-1?e-1:l+1,n=0>j-1?0:j-1,q=j+1>d-1?d-1:j+1,t=[],s=[0,0,h[4*(l*d+j)]/255*b];t.push([-1,0,h[4*(l*d+n)]/255*b]);t.push([-1,-1,h[4*(m*d+n)]/255*b]);t.push([0,-1,h[4*(m*d+j)]/255*b]);t.push([1,-1,h[4*(m*d+q)]/255*b]);t.push([1,0,h[4*(l*d+q)]/255*b]);t.push([1,1,h[4*(p*d+q)]/255*b]);t.push([0,1,h[4*(p*d+j)]/255*b]);t.push([-1,1,h[4*(p*d+n)]/255*b]);m=[];n=t.length;for(p=0;p<n;p++){var q=t[p],x=t[(p+1)%n],q=[q[0]-s[0],q[1]-s[1],q[2]-s[2]],x=[x[0]-s[0],x[1]-s[1],x[2]-s[2]];m.push(c([q[1]*
x[2]-q[2]*x[1],q[2]*x[0]-q[0]*x[2],q[0]*x[1]-q[1]*x[0]]))}t=[0,0,0];for(p=0;p<m.length;p++)t[0]+=m[p][0],t[1]+=m[p][1],t[2]+=m[p][2];t[0]/=m.length;t[1]/=m.length;t[2]/=m.length;s=4*(l*d+j);k[s]=255*((t[0]+1)/2)|0;k[s+1]=255*((t[1]+1)/2)|0;k[s+2]=255*t[2]|0;k[s+3]=255}g.putImageData(i,0,0);return f},generateDataTexture:function(a,b,c){for(var d=a*b,e=new Uint8Array(3*d),f=Math.floor(255*c.r),g=Math.floor(255*c.g),c=Math.floor(255*c.b),h=0;h<d;h++)e[3*h]=f,e[3*h+1]=g,e[3*h+2]=c;a=new THREE.DataTexture(e,
a,b,THREE.RGBFormat);a.needsUpdate=!0;return a}};THREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new THREE.Object3D,d=0,e=b.length;d<e;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};
THREE.WebGLRenderer&&(THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:null}},fragmentShader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertexShader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,
1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:0.98},uReflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,
1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\nvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalMatrix * skinnedNormal.xyz;\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalMatrix * skinnedTangent.xyz;\n#else\nvNormal = normalMatrix * normal;\nvTangent = normalMatrix * tangent.xyz;\n#endif\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 mPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = mPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * mPosition;\n}\n#endif\n}"].join("\n")},
cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( tFlip * wPos.x, wPos.yz ) );\n}"}}});
THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=a},drawText:function(a){for(var b=this.getFace(),c=this.size/b.resolution,d=
0,e=String(a).split(""),f=e.length,g=[],a=0;a<f;a++){var h=new THREE.Path,h=this.extractGlyphPoints(e[a],b,c,d,h),d=d+h.offset;g.push(h.path)}return{paths:g,offset:d/2}},extractGlyphPoints:function(a,b,c,d,e){var f=[],g,h,i,k,j,l,m,p,n,q,t,s=b.glyphs[a]||b.glyphs["?"];if(s){if(s.o){b=s._cachedOutline||(s._cachedOutline=s.o.split(" "));k=b.length;for(a=0;a<k;){i=b[a++];switch(i){case "m":i=b[a++]*c+d;j=b[a++]*c;e.moveTo(i,j);break;case "l":i=b[a++]*c+d;j=b[a++]*c;e.lineTo(i,j);break;case "q":i=b[a++]*
c+d;j=b[a++]*c;p=b[a++]*c+d;n=b[a++]*c;e.quadraticCurveTo(p,n,i,j);if(g=f[f.length-1]){l=g.x;m=g.y;g=1;for(h=this.divisions;g<=h;g++){var x=g/h;THREE.Shape.Utils.b2(x,l,p,i);THREE.Shape.Utils.b2(x,m,n,j)}}break;case "b":i=b[a++]*c+d;j=b[a++]*c;p=b[a++]*c+d;n=b[a++]*-c;q=b[a++]*c+d;t=b[a++]*-c;e.bezierCurveTo(i,j,p,n,q,t);if(g=f[f.length-1]){l=g.x;m=g.y;g=1;for(h=this.divisions;g<=h;g++){x=g/h;THREE.Shape.Utils.b3(x,l,p,q,i);THREE.Shape.Utils.b3(x,m,n,t,j)}}}}}return{offset:s.ha*c,path:e}}}};
THREE.FontUtils.generateShapes=function(a,b){var b=b||{},c=b.curveSegments!==void 0?b.curveSegments:4,d=b.font!==void 0?b.font:"helvetiker",e=b.weight!==void 0?b.weight:"normal",f=b.style!==void 0?b.style:"normal";THREE.FontUtils.size=b.size!==void 0?b.size:100;THREE.FontUtils.divisions=c;THREE.FontUtils.face=d;THREE.FontUtils.weight=e;THREE.FontUtils.style=f;c=THREE.FontUtils.drawText(a).paths;d=[];e=0;for(f=c.length;e<f;e++)Array.prototype.push.apply(d,c[e].toShapes());return d};
(function(a){var b=function(a){for(var b=a.length,e=0,f=b-1,g=0;g<b;f=g++)e=e+(a[f].x*a[g].y-a[g].x*a[f].y);return e*0.5};a.Triangulate=function(a,d){var e=a.length;if(e<3)return null;var f=[],g=[],h=[],i,k,j;if(b(a)>0)for(k=0;k<e;k++)g[k]=k;else for(k=0;k<e;k++)g[k]=e-1-k;var l=2*e;for(k=e-1;e>2;){if(l--<=0){console.log("Warning, unable to triangulate polygon!");break}i=k;e<=i&&(i=0);k=i+1;e<=k&&(k=0);j=k+1;e<=j&&(j=0);var m;a:{m=a;var p=i,n=k,q=j,t=e,s=g,x=void 0,u=void 0,r=void 0,y=void 0,w=void 0,
v=void 0,A=void 0,F=void 0,C=void 0,u=m[s[p]].x,r=m[s[p]].y,y=m[s[n]].x,w=m[s[n]].y,v=m[s[q]].x,A=m[s[q]].y;if(1E-10>(y-u)*(A-r)-(w-r)*(v-u))m=false;else{for(x=0;x<t;x++)if(!(x==p||x==n||x==q)){var F=m[s[x]].x,C=m[s[x]].y,G=void 0,H=void 0,D=void 0,J=void 0,L=void 0,K=void 0,M=void 0,N=void 0,S=void 0,ca=void 0,ha=void 0,E=void 0,G=D=L=void 0,G=v-y,H=A-w,D=u-v,J=r-A,L=y-u,K=w-r,M=F-u,N=C-r,S=F-y,ca=C-w,ha=F-v,E=C-A,G=G*ca-H*S,L=L*N-K*M,D=D*E-J*ha;if(G>=0&&D>=0&&L>=0){m=false;break a}}m=true}}if(m){f.push([a[g[i]],
a[g[k]],a[g[j]]]);h.push([g[i],g[k],g[j]]);i=k;for(j=k+1;j<e;i++,j++)g[i]=g[j];e--;l=2*e}}return d?h:f};a.Triangulate.area=b;return a})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(a){a=this.getUtoTmapping(a);return this.getPoint(a)};
THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};
THREE.Curve.prototype.getLengths=function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=false;var b=[],c,d=this.getPoint(0),e,f=0;b.push(0);for(e=1;e<=a;e++){c=this.getPoint(e/a);f=f+c.distanceTo(d);b.push(f);d=c}return this.cacheArcLengths=b};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=true;this.getLengths()};
THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,e=c.length,f;f=b?b:a*c[e-1];for(var g=0,h=e-1,i;g<=h;){d=Math.floor(g+(h-g)/2);i=c[d]-f;if(i<0)g=d+1;else if(i>0)h=d-1;else{h=d;break}}d=h;if(c[d]==f)return d/(e-1);g=c[d];return c=(d+(f-g)/(c[d+1]-g))/(e-1)};THREE.Curve.prototype.getNormalVector=function(a){a=this.getTangent(a);return new THREE.Vector2(-a.y,a.x)};
THREE.Curve.prototype.getTangent=function(a){var b=a-1E-4,a=a+1E-4;b<0&&(b=0);a>1&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().subSelf(b).normalize()};THREE.Curve.prototype.getTangentAt=function(a){a=this.getUtoTmapping(a);return this.getTangent(a)};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().subSelf(this.v1);b.multiplyScalar(a).addSelf(this.v1);return b};
THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().subSelf(this.v1).normalize()};THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(b,a)};THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);b=new THREE.Vector2(b,a);b.normalize();return b};
THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};
THREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};THREE.SplineCurve=function(a){this.points=a==void 0?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.SplineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2,c=[],d=this.points,e;e=(d.length-1)*a;a=Math.floor(e);e=e-a;c[0]=a==0?a:a-1;c[1]=a;c[2]=a>d.length-2?d.length-1:a+1;c[3]=a>d.length-3?d.length-1:a+2;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);return b};
THREE.EllipseCurve=function(a,b,c,d,e,f,g){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=f;this.aClockwise=g};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;this.aClockwise||(a=1-a);b=this.aStartAngle+a*b;a=this.aX+this.xRadius*Math.cos(b);b=this.aY+this.yRadius*Math.sin(b);return new THREE.Vector2(a,b)};
THREE.ArcCurve=function(a,b,c,d,e,f){THREE.EllipseCurve.call(this,a,b,c,c,d,e,f)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);
THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){var a=(c-a)*0.5,d=(d-b)*0.5,f=e*e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}};
THREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.getPoint=b;return a};THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.sub(this.v2,this.v1);b.multiplyScalar(a);b.addSelf(this.v1);return b});
THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b,c;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);a=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(b,c,a)});
THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b,c;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);a=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(b,c,a)});
THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=a==void 0?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e,a=(d.length-1)*a;e=Math.floor(a);a=a-e;c[0]=e==0?e:e-1;c[1]=e;c[2]=e>d.length-2?d.length-1:e+1;c[3]=e>d.length-3?d.length-1:e+2;e=d[c[0]];var f=d[c[1]],g=d[c[2]],c=d[c[3]];b.x=THREE.Curve.Utils.interpolate(e.x,f.x,g.x,c.x,a);b.y=THREE.Curve.Utils.interpolate(e.y,f.y,g.y,c.y,a);b.z=THREE.Curve.Utils.interpolate(e.z,f.z,g.z,c.z,a);return b});
THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=a==void 0?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e;e=(d.length-0)*a;a=Math.floor(e);e=e-a;a=a+(a>0?0:(Math.floor(Math.abs(a)/d.length)+1)*d.length);c[0]=(a-1)%d.length;c[1]=a%d.length;c[2]=(a+1)%d.length;c[3]=(a+2)%d.length;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);b.z=THREE.Curve.Utils.interpolate(d[c[0]].z,
d[c[1]].z,d[c[2]].z,d[c[3]].z,e);return b});THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=false};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};
THREE.CurvePath.prototype.getPoint=function(a){for(var b=a*this.getLength(),c=this.getCurveLengths(),a=0;a<c.length;){if(c[a]>=b){b=c[a]-b;a=this.curves[a];b=1-b/a.getLength();return a.getPointAt(b)}a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};
THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++){b=b+this.curves[c].getLength();a.push(b)}return this.cacheLengths=a};
THREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,e,f,g;b=c=Number.NEGATIVE_INFINITY;e=f=Number.POSITIVE_INFINITY;var h,i,k,j,l=a[0]instanceof THREE.Vector3;j=l?new THREE.Vector3:new THREE.Vector2;i=0;for(k=a.length;i<k;i++){h=a[i];if(h.x>b)b=h.x;else if(h.x<e)e=h.x;if(h.y>c)c=h.y;else if(h.y<f)f=h.y;if(l)if(h.z>d)d=h.z;else if(h.z<g)g=h.z;j.addSelf(h)}a={minX:e,minY:f,maxX:b,maxY:c,centroid:j.divideScalar(k)};if(l){a.maxZ=d;a.minZ=g}return a};
THREE.CurvePath.prototype.createPointsGeometry=function(a){a=this.getPoints(a,true);return this.createGeometry(a)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){a=this.getSpacedPoints(a,true);return this.createGeometry(a)};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};
THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,e;if(!b)b=this.bends;d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,e;if(!b)b=this.bends;d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};
THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,e,f,g,h,i;d=0;for(e=a.length;d<e;d++){f=a[d];g=f.x;h=f.y;i=g/c.maxX;i=b.getUtoTmapping(i,g);g=b.getPoint(i);h=b.getNormalVector(i).multiplyScalar(h);f.x=g.x+h.x;f.y=g.y+h.y}return a};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);
THREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a){if(this.parent){this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix);this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld);this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject);this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)}else this.matrixWorld.copy(this.matrix);
this.matrixWorldNeedsUpdate=false;a=true}for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;
THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};
THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})};THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,d=new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b));this.curves.push(d);this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};
THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,f=new THREE.QuadraticBezierCurve(new THREE.Vector2(f[f.length-2],f[f.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(f);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:e})};
THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,h=new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,f));this.curves.push(h);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})};
THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);c=new THREE.SplineCurve(c);this.curves.push(c);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};THREE.Path.prototype.arc=function(a,b,c,d,e,f){var g=this.actions[this.actions.length-1].args;this.absarc(a+g[g.length-2],b+g[g.length-1],c,d,e,f)};
THREE.Path.prototype.absarc=function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)};THREE.Path.prototype.ellipse=function(a,b,c,d,e,f,g){var h=this.actions[this.actions.length-1].args;this.absellipse(a+h[h.length-2],b+h[h.length-1],c,d,e,f,g)};THREE.Path.prototype.absellipse=function(a,b,c,d,e,f,g){var h=Array.prototype.slice.call(arguments),i=new THREE.EllipseCurve(a,b,c,d,e,f,g);this.curves.push(i);i=i.getPoint(g?1:0);h.push(i.x);h.push(i.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})};
THREE.Path.prototype.getSpacedPoints=function(a){a||(a=40);for(var b=[],c=0;c<a;c++)b.push(this.getPoint(c/a));return b};
THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints){console.log("tata");return this.getSpacedPoints(a,b)}var a=a||12,c=[],d,e,f,g,h,i,k,j,l,m,p,n,q;d=0;for(e=this.actions.length;d<e;d++){f=this.actions[d];g=f.action;f=f.args;switch(g){case THREE.PathActions.MOVE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:h=f[2];i=f[3];l=f[0];m=f[1];if(c.length>0){g=c[c.length-1];
p=g.x;n=g.y}else{g=this.actions[d-1].args;p=g[g.length-2];n=g[g.length-1]}for(f=1;f<=a;f++){q=f/a;g=THREE.Shape.Utils.b2(q,p,l,h);q=THREE.Shape.Utils.b2(q,n,m,i);c.push(new THREE.Vector2(g,q))}break;case THREE.PathActions.BEZIER_CURVE_TO:h=f[4];i=f[5];l=f[0];m=f[1];k=f[2];j=f[3];if(c.length>0){g=c[c.length-1];p=g.x;n=g.y}else{g=this.actions[d-1].args;p=g[g.length-2];n=g[g.length-1]}for(f=1;f<=a;f++){q=f/a;g=THREE.Shape.Utils.b3(q,p,l,k,h);q=THREE.Shape.Utils.b3(q,n,m,j,i);c.push(new THREE.Vector2(g,
q))}break;case THREE.PathActions.CSPLINE_THRU:g=this.actions[d-1].args;q=[new THREE.Vector2(g[g.length-2],g[g.length-1])];g=a*f[0].length;q=q.concat(f[0]);q=new THREE.SplineCurve(q);for(f=1;f<=g;f++)c.push(q.getPointAt(f/g));break;case THREE.PathActions.ARC:h=f[0];i=f[1];m=f[2];k=f[3];g=f[4];l=!!f[5];p=g-k;n=a*2;for(f=1;f<=n;f++){q=f/n;l||(q=1-q);q=k+q*p;g=h+m*Math.cos(q);q=i+m*Math.sin(q);c.push(new THREE.Vector2(g,q))}break;case THREE.PathActions.ELLIPSE:h=f[0];i=f[1];m=f[2];j=f[3];k=f[4];g=f[5];
l=!!f[6];p=g-k;n=a*2;for(f=1;f<=n;f++){q=f/n;l||(q=1-q);q=k+q*p;g=h+m*Math.cos(q);q=i+j*Math.sin(q);c.push(new THREE.Vector2(g,q))}}}d=c[c.length-1];Math.abs(d.x-c[0].x)<1E-10&&Math.abs(d.y-c[0].y)<1E-10&&c.splice(c.length-1,1);b&&c.push(c[0]);return c};
THREE.Path.prototype.toShapes=function(){var a,b,c,d,e=[],f=new THREE.Path;a=0;for(b=this.actions.length;a<b;a++){c=this.actions[a];d=c.args;c=c.action;if(c==THREE.PathActions.MOVE_TO&&f.actions.length!=0){e.push(f);f=new THREE.Path}f[c].apply(f,d)}f.actions.length!=0&&e.push(f);if(e.length==0)return[];var g;d=[];a=!THREE.Shape.Utils.isClockWise(e[0].getPoints());if(e.length==1){f=e[0];g=new THREE.Shape;g.actions=f.actions;g.curves=f.curves;d.push(g);return d}if(a){g=new THREE.Shape;a=0;for(b=e.length;a<
b;a++){f=e[a];if(THREE.Shape.Utils.isClockWise(f.getPoints())){g.actions=f.actions;g.curves=f.curves;d.push(g);g=new THREE.Shape}else g.holes.push(f)}}else{a=0;for(b=e.length;a<b;a++){f=e[a];if(THREE.Shape.Utils.isClockWise(f.getPoints())){g&&d.push(g);g=new THREE.Shape;g.actions=f.actions;g.curves=f.curves}else g.holes.push(f)}d.push(g)}return d};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);
THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};THREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};
THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)};THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};
THREE.Shape.Utils={removeHoles:function(a,b){var c=a.concat(),d=c.concat(),e,f,g,h,i,k,j,l,m,p,n=[];for(i=0;i<b.length;i++){k=b[i];Array.prototype.push.apply(d,k);f=Number.POSITIVE_INFINITY;for(e=0;e<k.length;e++){m=k[e];p=[];for(l=0;l<c.length;l++){j=c[l];j=m.distanceToSquared(j);p.push(j);if(j<f){f=j;g=e;h=l}}}e=h-1>=0?h-1:c.length-1;f=g-1>=0?g-1:k.length-1;var q=[k[g],c[h],c[e]];l=THREE.FontUtils.Triangulate.area(q);var t=[k[g],k[f],c[h]];m=THREE.FontUtils.Triangulate.area(t);p=h;j=g;h=h+1;g=g+
-1;h<0&&(h=h+c.length);h=h%c.length;g<0&&(g=g+k.length);g=g%k.length;e=h-1>=0?h-1:c.length-1;f=g-1>=0?g-1:k.length-1;q=[k[g],c[h],c[e]];q=THREE.FontUtils.Triangulate.area(q);t=[k[g],k[f],c[h]];t=THREE.FontUtils.Triangulate.area(t);if(l+m>q+t){h=p;g=j;h<0&&(h=h+c.length);h=h%c.length;g<0&&(g=g+k.length);g=g%k.length;e=h-1>=0?h-1:c.length-1;f=g-1>=0?g-1:k.length-1}l=c.slice(0,h);m=c.slice(h);p=k.slice(g);j=k.slice(0,g);f=[k[g],k[f],c[h]];n.push([k[g],c[h],c[e]]);n.push(f);c=l.concat(p).concat(j).concat(m)}return{shape:c,
isolatedPts:n,allpoints:d}},triangulateShape:function(a,b){var c=THREE.Shape.Utils.removeHoles(a,b),d=c.allpoints,e=c.isolatedPts,c=THREE.FontUtils.Triangulate(c.shape,false),f,g,h,i,k={};f=0;for(g=d.length;f<g;f++){i=d[f].x+":"+d[f].y;k[i]!==void 0&&console.log("Duplicate point",i);k[i]=f}f=0;for(g=c.length;f<g;f++){h=c[f];for(d=0;d<3;d++){i=h[d].x+":"+h[d].y;i=k[i];i!==void 0&&(h[d]=i)}}f=0;for(g=e.length;f<g;f++){h=e[f];for(d=0;d<3;d++){i=h[d].x+":"+h[d].y;i=k[i];i!==void 0&&(h[d]=i)}}return c.concat(e)},
isClockWise:function(a){return THREE.FontUtils.Triangulate.area(a)<0},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+
this.b3p3(a,e)}};
THREE.AnimationHandler=function(){var a=[],b={},c={update:function(b){for(var c=0;c<a.length;c++)a[c].update(b)},addToUpdate:function(b){a.indexOf(b)===-1&&a.push(b)},removeFromUpdate:function(b){b=a.indexOf(b);b!==-1&&a.splice(b,1)},add:function(a){b[a.name]!==void 0&&console.log("THREE.AnimationHandler.add: Warning! "+a.name+" already exists in library. Overwriting.");b[a.name]=a;if(a.initialized!==true){for(var c=0;c<a.hierarchy.length;c++){for(var d=0;d<a.hierarchy[c].keys.length;d++){if(a.hierarchy[c].keys[d].time<0)a.hierarchy[c].keys[d].time=
0;if(a.hierarchy[c].keys[d].rot!==void 0&&!(a.hierarchy[c].keys[d].rot instanceof THREE.Quaternion)){var h=a.hierarchy[c].keys[d].rot;a.hierarchy[c].keys[d].rot=new THREE.Quaternion(h[0],h[1],h[2],h[3])}}if(a.hierarchy[c].keys.length&&a.hierarchy[c].keys[0].morphTargets!==void 0){h={};for(d=0;d<a.hierarchy[c].keys.length;d++)for(var i=0;i<a.hierarchy[c].keys[d].morphTargets.length;i++){var k=a.hierarchy[c].keys[d].morphTargets[i];h[k]=-1}a.hierarchy[c].usedMorphTargets=h;for(d=0;d<a.hierarchy[c].keys.length;d++){var j=
{};for(k in h){for(i=0;i<a.hierarchy[c].keys[d].morphTargets.length;i++)if(a.hierarchy[c].keys[d].morphTargets[i]===k){j[k]=a.hierarchy[c].keys[d].morphTargetsInfluences[i];break}i===a.hierarchy[c].keys[d].morphTargets.length&&(j[k]=0)}a.hierarchy[c].keys[d].morphTargetsInfluences=j}}for(d=1;d<a.hierarchy[c].keys.length;d++)if(a.hierarchy[c].keys[d].time===a.hierarchy[c].keys[d-1].time){a.hierarchy[c].keys.splice(d,1);d--}for(d=0;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].index=d}d=parseInt(a.length*
a.fps,10);a.JIT={};a.JIT.hierarchy=[];for(c=0;c<a.hierarchy.length;c++)a.JIT.hierarchy.push(Array(d));a.initialized=true}},get:function(a){if(typeof a==="string"){if(b[a])return b[a];console.log("THREE.AnimationHandler.get: Couldn't find animation "+a);return null}},parse:function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.bones.length;c++)b.push(a.bones[c]);else d(a,b);return b}},d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],b)};c.LINEAR=0;c.CATMULLROM=
1;c.CATMULLROM_FORWARD=2;return c}();THREE.Animation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=false;this.loop=this.isPaused=true;this.interpolationType=c!==void 0?c:THREE.AnimationHandler.LINEAR;this.points=[];this.target=new THREE.Vector3};
THREE.Animation.prototype.play=function(a,b){if(this.isPlaying===false){this.isPlaying=true;this.loop=a!==void 0?a:true;this.currentTime=b!==void 0?b:0;var c,d=this.hierarchy.length,e;for(c=0;c<d;c++){e=this.hierarchy[c];if(this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD)e.useQuaternion=true;e.matrixAutoUpdate=true;if(e.animationCache===void 0){e.animationCache={};e.animationCache.prevKey={pos:0,rot:0,scl:0};e.animationCache.nextKey={pos:0,rot:0,scl:0};e.animationCache.originalMatrix=
e instanceof THREE.Bone?e.skinMatrix:e.matrix}var f=e.animationCache.prevKey;e=e.animationCache.nextKey;f.pos=this.data.hierarchy[c].keys[0];f.rot=this.data.hierarchy[c].keys[0];f.scl=this.data.hierarchy[c].keys[0];e.pos=this.getNextKeyWith("pos",c,1);e.rot=this.getNextKeyWith("rot",c,1);e.scl=this.getNextKeyWith("scl",c,1)}this.update(0)}this.isPaused=false;THREE.AnimationHandler.addToUpdate(this)};
THREE.Animation.prototype.pause=function(){this.isPaused===true?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=false;THREE.AnimationHandler.removeFromUpdate(this)};
THREE.Animation.prototype.update=function(a){if(this.isPlaying!==false){var b=["pos","rot","scl"],c,d,e,f,g,h,i,k,j;j=this.currentTime=this.currentTime+a*this.timeScale;k=this.currentTime=this.currentTime%this.data.length;parseInt(Math.min(k*this.data.fps,this.data.length*this.data.fps),10);for(var l=0,m=this.hierarchy.length;l<m;l++){a=this.hierarchy[l];i=a.animationCache;for(var p=0;p<3;p++){c=b[p];g=i.prevKey[c];h=i.nextKey[c];if(h.time<=j){if(k<j)if(this.loop){g=this.data.hierarchy[l].keys[0];
for(h=this.getNextKeyWith(c,l,1);h.time<k;){g=h;h=this.getNextKeyWith(c,l,h.index+1)}}else{this.stop();return}else{do{g=h;h=this.getNextKeyWith(c,l,h.index+1)}while(h.time<k)}i.prevKey[c]=g;i.nextKey[c]=h}a.matrixAutoUpdate=true;a.matrixWorldNeedsUpdate=true;d=(k-g.time)/(h.time-g.time);e=g[c];f=h[c];if(d<0||d>1){console.log("THREE.Animation.update: Warning! Scale out of bounds:"+d+" on bone "+l);d=d<0?0:1}if(c==="pos"){c=a.position;if(this.interpolationType===THREE.AnimationHandler.LINEAR){c.x=e[0]+
(f[0]-e[0])*d;c.y=e[1]+(f[1]-e[1])*d;c.z=e[2]+(f[2]-e[2])*d}else if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){this.points[0]=this.getPrevKeyWith("pos",l,g.index-1).pos;this.points[1]=e;this.points[2]=f;this.points[3]=this.getNextKeyWith("pos",l,h.index+1).pos;d=d*0.33+0.33;e=this.interpolateCatmullRom(this.points,d);c.x=e[0];c.y=e[1];c.z=e[2];if(this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){d=
this.interpolateCatmullRom(this.points,d*1.01);this.target.set(d[0],d[1],d[2]);this.target.subSelf(c);this.target.y=0;this.target.normalize();d=Math.atan2(this.target.x,this.target.z);a.rotation.set(0,d,0)}}}else if(c==="rot")THREE.Quaternion.slerp(e,f,a.quaternion,d);else if(c==="scl"){c=a.scale;c.x=e[0]+(f[0]-e[0])*d;c.y=e[1]+(f[1]-e[1])*d;c.z=e[2]+(f[2]-e[2])*d}}}}};
THREE.Animation.prototype.interpolateCatmullRom=function(a,b){var c=[],d=[],e,f,g,h,i,k;e=(a.length-1)*b;f=Math.floor(e);e=e-f;c[0]=f===0?f:f-1;c[1]=f;c[2]=f>a.length-2?f:f+1;c[3]=f>a.length-3?f:f+2;f=a[c[0]];h=a[c[1]];i=a[c[2]];k=a[c[3]];c=e*e;g=e*c;d[0]=this.interpolate(f[0],h[0],i[0],k[0],e,c,g);d[1]=this.interpolate(f[1],h[1],i[1],k[1],e,c,g);d[2]=this.interpolate(f[2],h[2],i[2],k[2],e,c,g);return d};
THREE.Animation.prototype.interpolate=function(a,b,c,d,e,f,g){a=(c-a)*0.5;d=(d-b)*0.5;return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b};THREE.Animation.prototype.getNextKeyWith=function(a,b,c){for(var d=this.data.hierarchy[b].keys,c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(d[c][a]!==void 0)return d[c];return this.data.hierarchy[b].keys[0]};
THREE.Animation.prototype.getPrevKeyWith=function(a,b,c){for(var d=this.data.hierarchy[b].keys,c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c>0?c:0:c>=0?c:c+d.length;c>=0;c--)if(d[c][a]!==void 0)return d[c];return this.data.hierarchy[b].keys[d.length-1]};
THREE.KeyFrameAnimation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=0.0010;this.isPlaying=false;this.loop=this.isPaused=true;this.JITCompile=c!==void 0?c:true;a=0;for(b=this.hierarchy.length;a<b;a++){var c=this.data.hierarchy[a].sids,d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var e=0;e<c.length;e++){var f=c[e],g=this.getNextKeyWith(f,a,0);g&&g.apply(f)}d.matrixAutoUpdate=
false;this.data.hierarchy[a].node.updateMatrix();d.matrixWorldNeedsUpdate=true}}};
THREE.KeyFrameAnimation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=true;this.loop=a!==void 0?a:true;this.currentTime=b!==void 0?b:0;this.startTimeMs=b;this.startTime=1E7;this.endTime=-this.startTime;var c,d=this.hierarchy.length,e,f;for(c=0;c<d;c++){e=this.hierarchy[c];f=this.data.hierarchy[c];e.useQuaternion=true;if(f.animationCache===void 0){f.animationCache={};f.animationCache.prevKey=null;f.animationCache.nextKey=null;f.animationCache.originalMatrix=e instanceof THREE.Bone?
e.skinMatrix:e.matrix}e=this.data.hierarchy[c].keys;if(e.length){f.animationCache.prevKey=e[0];f.animationCache.nextKey=e[1];this.startTime=Math.min(e[0].time,this.startTime);this.endTime=Math.max(e[e.length-1].time,this.endTime)}}this.update(0)}this.isPaused=false;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};
THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=false;THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(c.animationCache!==void 0){var d=c.animationCache.originalMatrix;if(b instanceof THREE.Bone){d.copy(b.skinMatrix);b.skinMatrix=d}else{d.copy(b.matrix);b.matrix=d}delete c.animationCache}}};
THREE.KeyFrameAnimation.prototype.update=function(a){if(this.isPlaying){var b,c,d,e,f=this.data.JIT.hierarchy,g,h,i;h=this.currentTime=this.currentTime+a*this.timeScale;g=this.currentTime=this.currentTime%this.data.length;if(g<this.startTimeMs)g=this.currentTime=this.startTimeMs+g;e=parseInt(Math.min(g*this.data.fps,this.data.length*this.data.fps),10);if((i=g<h)&&!this.loop){for(var a=0,k=this.hierarchy.length;a<k;a++){var j=this.data.hierarchy[a].keys,f=this.data.hierarchy[a].sids;d=j.length-1;e=
this.hierarchy[a];if(j.length){for(j=0;j<f.length;j++){g=f[j];(h=this.getPrevKeyWith(g,a,d))&&h.apply(g)}this.data.hierarchy[a].node.updateMatrix();e.matrixWorldNeedsUpdate=true}}this.stop()}else if(!(g<this.startTime)){a=0;for(k=this.hierarchy.length;a<k;a++){d=this.hierarchy[a];b=this.data.hierarchy[a];var j=b.keys,l=b.animationCache;if(this.JITCompile&&f[a][e]!==void 0)if(d instanceof THREE.Bone){d.skinMatrix=f[a][e];d.matrixWorldNeedsUpdate=false}else{d.matrix=f[a][e];d.matrixWorldNeedsUpdate=
true}else if(j.length){if(this.JITCompile&&l)d instanceof THREE.Bone?d.skinMatrix=l.originalMatrix:d.matrix=l.originalMatrix;b=l.prevKey;c=l.nextKey;if(b&&c){if(c.time<=h){if(i&&this.loop){b=j[0];for(c=j[1];c.time<g;){b=c;c=j[b.index+1]}}else if(!i)for(var m=j.length-1;c.time<g&&c.index!==m;){b=c;c=j[b.index+1]}l.prevKey=b;l.nextKey=c}c.time>=g?b.interpolate(c,g):b.interpolate(c,c.time)}this.data.hierarchy[a].node.updateMatrix();d.matrixWorldNeedsUpdate=true}}if(this.JITCompile&&f[0][e]===void 0){this.hierarchy[0].updateMatrixWorld(true);
for(a=0;a<this.hierarchy.length;a++)f[a][e]=this.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix.clone():this.hierarchy[a].matrix.clone()}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c=c%b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]};
THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c=c>=0?c:c+b.length;c>=0;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]};
THREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new THREE.Vector3(-1,0,0));this.add(e);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,0,1);f.lookAt(new THREE.Vector3(0,1,0));this.add(f);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new THREE.Vector3(0,-1,0));this.add(g);var h=new THREE.PerspectiveCamera(90,
1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,1));this.add(h);var i=new THREE.PerspectiveCamera(90,1,a,b);i.up.set(0,-1,0);i.lookAt(new THREE.Vector3(0,0,-1));this.add(i);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){var c=this.renderTarget,m=c.generateMipmaps;c.generateMipmaps=false;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,e,c);c.activeCubeFace=
2;a.render(b,f,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.generateMipmaps=m;c.activeCubeFace=5;a.render(b,i,c)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(a,b,c,d,e,f,g){THREE.Camera.call(this);this.fov=c;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2;this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,f,g);this.cameraP=new THREE.PerspectiveCamera(c,a/b,d,e);this.zoom=1;this.toPerspective()};
THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=true;this.inOrthographicMode=false};
THREE.CombinedCamera.prototype.toOrthographic=function(){var a=this.cameraP.aspect,b=(this.cameraP.near+this.cameraP.far)/2,b=Math.tan(this.fov/2)*b,a=2*b*a/2,b=b/this.zoom,a=a/this.zoom;this.cameraO.left=-a;this.cameraO.right=a;this.cameraO.top=b;this.cameraO.bottom=-b;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=false;this.inOrthographicMode=true};
THREE.CombinedCamera.prototype.setSize=function(a,b){this.cameraP.aspect=a/b;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2};THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){if(this.inPerspectiveMode)this.toPerspective();else{this.toPerspective();this.toOrthographic()}};
THREE.CombinedCamera.prototype.setLens=function(a,b){b===void 0&&(b=24);var c=2*Math.atan(b/(a*2))*(180/Math.PI);this.setFov(c);return c};THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=false};
THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=false};
THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=false};
THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this);var a=a||50,c=c!==void 0?c:0,d=d!==void 0?d:Math.PI*2,b=b!==void 0?Math.max(3,b):8,e,f=[];e=new THREE.Vector3;var g=new THREE.UV(0.5,0.5);this.vertices.push(e);f.push(g);for(e=0;e<=b;e++){var h=new THREE.Vector3;h.x=a*Math.cos(c+e/b*d);h.y=a*Math.sin(c+e/b*d);this.vertices.push(h);f.push(new THREE.UV((h.x/a+1)/2,-(h.y/a+1)/2+1))}c=new THREE.Vector3(0,0,-1);for(e=1;e<=b;e++){this.faces.push(new THREE.Face3(e,e+1,0,[c,c,c]));this.faceVertexUvs[0].push([f[e],
f[e+1],g])}this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:a}};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CubeGeometry=function(a,b,c,d,e,f,g,h){function i(a,b,c,g,h,i,j,l){var m,n=d||1,p=e||1,q=h/2,s=i/2,t=k.vertices.length;if(a==="x"&&b==="y"||a==="y"&&b==="x")m="z";else if(a==="x"&&b==="z"||a==="z"&&b==="x"){m="y";p=f||1}else if(a==="z"&&b==="y"||a==="y"&&b==="z"){m="x";n=f||1}var u=n+1,x=p+1,ca=h/n,ha=i/p,E=new THREE.Vector3;E[m]=j>0?1:-1;for(h=0;h<x;h++)for(i=0;i<u;i++){var O=new THREE.Vector3;O[a]=(i*ca-q)*c;O[b]=(h*ha-s)*g;O[m]=j;k.vertices.push(O)}for(h=0;h<p;h++)for(i=0;i<n;i++){a=new THREE.Face4(i+
u*h+t,i+u*(h+1)+t,i+1+u*(h+1)+t,i+1+u*h+t);a.normal.copy(E);a.vertexNormals.push(E.clone(),E.clone(),E.clone(),E.clone());a.materialIndex=l;k.faces.push(a);k.faceVertexUvs[0].push([new THREE.UV(i/n,1-h/p),new THREE.UV(i/n,1-(h+1)/p),new THREE.UV((i+1)/n,1-(h+1)/p),new THREE.UV((i+1)/n,1-h/p)])}}THREE.Geometry.call(this);var k=this,j=a/2,l=b/2,m=c/2,p,n,q,t,s,x;if(g!==void 0){if(g instanceof Array)this.materials=g;else{this.materials=[];for(p=0;p<6;p++)this.materials.push(g)}p=0;t=1;n=2;s=3;q=4;x=
5}else this.materials=[];this.sides={px:true,nx:true,py:true,ny:true,pz:true,nz:true};if(h!=void 0)for(var u in h)this.sides[u]!==void 0&&(this.sides[u]=h[u]);this.sides.px&&i("z","y",-1,-1,c,b,j,p);this.sides.nx&&i("z","y",1,-1,c,b,-j,t);this.sides.py&&i("x","z",1,1,a,c,l,n);this.sides.ny&&i("x","z",1,-1,a,c,-l,s);this.sides.pz&&i("x","y",1,-1,a,b,m,q);this.sides.nz&&i("x","y",-1,-1,a,b,-m,x);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CylinderGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);var a=a!==void 0?a:20,b=b!==void 0?b:20,c=c!==void 0?c:100,g=c/2,d=d||8,e=e||1,h,i,k=[],j=[];for(i=0;i<=e;i++){var l=[],m=[],p=i/e,n=p*(b-a)+a;for(h=0;h<=d;h++){var q=h/d,t=new THREE.Vector3;t.x=n*Math.sin(q*Math.PI*2);t.y=-p*c+g;t.z=n*Math.cos(q*Math.PI*2);this.vertices.push(t);l.push(this.vertices.length-1);m.push(new THREE.UV(q,1-p))}k.push(l);j.push(m)}c=(b-a)/c;for(h=0;h<d;h++){if(a!==0){l=this.vertices[k[0][h]].clone();m=
this.vertices[k[0][h+1]].clone()}else{l=this.vertices[k[1][h]].clone();m=this.vertices[k[1][h+1]].clone()}l.setY(Math.sqrt(l.x*l.x+l.z*l.z)*c).normalize();m.setY(Math.sqrt(m.x*m.x+m.z*m.z)*c).normalize();for(i=0;i<e;i++){var p=k[i][h],n=k[i+1][h],q=k[i+1][h+1],t=k[i][h+1],s=l.clone(),x=l.clone(),u=m.clone(),r=m.clone(),y=j[i][h].clone(),w=j[i+1][h].clone(),v=j[i+1][h+1].clone(),A=j[i][h+1].clone();this.faces.push(new THREE.Face4(p,n,q,t,[s,x,u,r]));this.faceVertexUvs[0].push([y,w,v,A])}}if(!f&&a>
0){this.vertices.push(new THREE.Vector3(0,g,0));for(h=0;h<d;h++){p=k[0][h];n=k[0][h+1];q=this.vertices.length-1;s=new THREE.Vector3(0,1,0);x=new THREE.Vector3(0,1,0);u=new THREE.Vector3(0,1,0);y=j[0][h].clone();w=j[0][h+1].clone();v=new THREE.UV(w.u,0);this.faces.push(new THREE.Face3(p,n,q,[s,x,u]));this.faceVertexUvs[0].push([y,w,v])}}if(!f&&b>0){this.vertices.push(new THREE.Vector3(0,-g,0));for(h=0;h<d;h++){p=k[i][h+1];n=k[i][h];q=this.vertices.length-1;s=new THREE.Vector3(0,-1,0);x=new THREE.Vector3(0,
-1,0);u=new THREE.Vector3(0,-1,0);y=j[i][h+1].clone();w=j[i][h].clone();v=new THREE.UV(w.u,1);this.faces.push(new THREE.Face3(p,n,q,[s,x,u]));this.faceVertexUvs[0].push([y,w,v])}}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ExtrudeGeometry=function(a,b){if(typeof a!=="undefined"){THREE.Geometry.call(this);a=a instanceof Array?a:[a];this.shapebb=a[a.length-1].getBoundingBox();this.addShapeList(a,b);this.computeCentroids();this.computeFaceNormals()}};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};
THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||console.log("die");return b.clone().multiplyScalar(c).addSelf(a)}function d(a,b,c){var d=THREE.ExtrudeGeometry.__v1,e=THREE.ExtrudeGeometry.__v2,f=THREE.ExtrudeGeometry.__v3,g=THREE.ExtrudeGeometry.__v4,h=THREE.ExtrudeGeometry.__v5,i=THREE.ExtrudeGeometry.__v6;d.set(a.x-b.x,a.y-b.y);e.set(a.x-c.x,a.y-c.y);d=d.normalize();e=e.normalize();f.set(-d.y,d.x);g.set(e.y,-e.x);h.copy(a).addSelf(f);i.copy(a).addSelf(g);if(h.equals(i))return g.clone();
h.copy(b).addSelf(f);i.copy(c).addSelf(g);f=d.dot(g);g=i.subSelf(h).dot(g);if(f===0){console.log("Either infinite or no solutions!");g===0?console.log("Its finite solutions."):console.log("Too bad, no solutions.")}g=g/f;if(g<0){b=Math.atan2(b.y-a.y,b.x-a.x);a=Math.atan2(c.y-a.y,c.x-a.x);b>a&&(a=a+Math.PI*2);c=(b+a)/2;a=-Math.cos(c);c=-Math.sin(c);a=new THREE.Vector2(a,c)}else a=d.multiplyScalar(g).addSelf(h).subSelf(a).clone();return a}function e(c,d){var e,f;for(E=c.length;--E>=0;){e=E;f=E-1;f<0&&
(f=c.length-1);for(var g=0,h=m+j*2,g=0;g<h;g++){var i=S*g,k=S*(g+1),l=d+e+i,i=d+f+i,n=d+f+k,k=d+e+k,p=c,q=g,r=h,t=e,u=f,l=l+G,i=i+G,n=n+G,k=k+G;C.faces.push(new THREE.Face4(l,i,n,k,null,null,s));l=x.generateSideWallUV(C,a,p,b,l,i,n,k,q,r,t,u);C.faceVertexUvs[0].push(l)}}}function f(a,b,c){C.vertices.push(new THREE.Vector3(a,b,c))}function g(c,d,e,f){c=c+G;d=d+G;e=e+G;C.faces.push(new THREE.Face3(c,d,e,null,null,t));c=f?x.generateBottomUV(C,a,b,c,d,e):x.generateTopUV(C,a,b,c,d,e);C.faceVertexUvs[0].push(c)}
var h=b.amount!==void 0?b.amount:100,i=b.bevelThickness!==void 0?b.bevelThickness:6,k=b.bevelSize!==void 0?b.bevelSize:i-2,j=b.bevelSegments!==void 0?b.bevelSegments:3,l=b.bevelEnabled!==void 0?b.bevelEnabled:true,m=b.steps!==void 0?b.steps:1,p=b.extrudePath,n,q=false,t=b.material,s=b.extrudeMaterial,x=b.UVGenerator!==void 0?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,u,r,y,w;if(p){n=p.getSpacedPoints(m);q=true;l=false;u=b.frames!==void 0?b.frames:new THREE.TubeGeometry.FrenetFrames(p,m,
false);r=new THREE.Vector3;y=new THREE.Vector3;w=new THREE.Vector3}if(!l)k=i=j=0;var v,A,F,C=this,G=this.vertices.length,p=a.extractPoints(),H=p.shape,p=p.holes,D=!THREE.Shape.Utils.isClockWise(H);if(D){H=H.reverse();A=0;for(F=p.length;A<F;A++){v=p[A];THREE.Shape.Utils.isClockWise(v)&&(p[A]=v.reverse())}D=false}var J=THREE.Shape.Utils.triangulateShape(H,p),D=H;A=0;for(F=p.length;A<F;A++){v=p[A];H=H.concat(v)}var L,K,M,N,S=H.length,ca=J.length,ha=[],E=0,O=D.length;L=O-1;for(K=E+1;E<O;E++,L++,K++){L===
O&&(L=0);K===O&&(K=0);ha[E]=d(D[E],D[L],D[K])}var Q=[],ja,sa=ha.concat();A=0;for(F=p.length;A<F;A++){v=p[A];ja=[];E=0;O=v.length;L=O-1;for(K=E+1;E<O;E++,L++,K++){L===O&&(L=0);K===O&&(K=0);ja[E]=d(v[E],v[L],v[K])}Q.push(ja);sa=sa.concat(ja)}for(L=0;L<j;L++){v=L/j;M=i*(1-v);K=k*Math.sin(v*Math.PI/2);E=0;for(O=D.length;E<O;E++){N=c(D[E],ha[E],K);f(N.x,N.y,-M)}A=0;for(F=p.length;A<F;A++){v=p[A];ja=Q[A];E=0;for(O=v.length;E<O;E++){N=c(v[E],ja[E],K);f(N.x,N.y,-M)}}}K=k;for(E=0;E<S;E++){N=l?c(H[E],sa[E],
K):H[E];if(q){y.copy(u.normals[0]).multiplyScalar(N.x);r.copy(u.binormals[0]).multiplyScalar(N.y);w.copy(n[0]).addSelf(y).addSelf(r);f(w.x,w.y,w.z)}else f(N.x,N.y,0)}for(v=1;v<=m;v++)for(E=0;E<S;E++){N=l?c(H[E],sa[E],K):H[E];if(q){y.copy(u.normals[v]).multiplyScalar(N.x);r.copy(u.binormals[v]).multiplyScalar(N.y);w.copy(n[v]).addSelf(y).addSelf(r);f(w.x,w.y,w.z)}else f(N.x,N.y,h/m*v)}for(L=j-1;L>=0;L--){v=L/j;M=i*(1-v);K=k*Math.sin(v*Math.PI/2);E=0;for(O=D.length;E<O;E++){N=c(D[E],ha[E],K);f(N.x,
N.y,h+M)}A=0;for(F=p.length;A<F;A++){v=p[A];ja=Q[A];E=0;for(O=v.length;E<O;E++){N=c(v[E],ja[E],K);q?f(N.x,N.y+n[m-1].y,n[m-1].x+M):f(N.x,N.y,h+M)}}}if(l){i=S*0;for(E=0;E<ca;E++){h=J[E];g(h[2]+i,h[1]+i,h[0]+i,true)}i=S*(m+j*2);for(E=0;E<ca;E++){h=J[E];g(h[0]+i,h[1]+i,h[2]+i,false)}}else{for(E=0;E<ca;E++){h=J[E];g(h[2],h[1],h[0],true)}for(E=0;E<ca;E++){h=J[E];g(h[0]+S*m,h[1]+S*m,h[2]+S*m,false)}}h=0;e(D,h);h=h+D.length;A=0;for(F=p.length;A<F;A++){v=p[A];e(v,h);h=h+v.length}};
THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d,e,f){b=a.vertices[e].x;e=a.vertices[e].y;c=a.vertices[f].x;f=a.vertices[f].y;return[new THREE.UV(a.vertices[d].x,a.vertices[d].y),new THREE.UV(b,e),new THREE.UV(c,f)]},generateBottomUV:function(a,b,c,d,e,f){return this.generateTopUV(a,b,c,d,e,f)},generateSideWallUV:function(a,b,c,d,e,f,g,h){var b=a.vertices[e].x,c=a.vertices[e].y,e=a.vertices[e].z,d=a.vertices[f].x,i=a.vertices[f].y,f=a.vertices[f].z,k=a.vertices[g].x,j=a.vertices[g].y,
g=a.vertices[g].z,l=a.vertices[h].x,m=a.vertices[h].y,a=a.vertices[h].z;return Math.abs(c-i)<0.01?[new THREE.UV(b,1-e),new THREE.UV(d,1-f),new THREE.UV(k,1-g),new THREE.UV(l,1-a)]:[new THREE.UV(c,1-e),new THREE.UV(i,1-f),new THREE.UV(j,1-g),new THREE.UV(m,1-a)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;
THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);a instanceof Array===false&&(a=[a]);this.shapebb=a[a.length-1].getBoundingBox();this.addShapeList(a,b);this.computeCentroids();this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addShape(a[c],b);return this};
THREE.ShapeGeometry.prototype.addShape=function(a,b){b===void 0&&(b={});var c=b.material,d=b.UVGenerator===void 0?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,e,f,g,h=this.vertices.length;e=a.extractPoints();var i=e.shape,k=e.holes;if(!THREE.Shape.Utils.isClockWise(i)){i=i.reverse();e=0;for(f=k.length;e<f;e++){g=k[e];THREE.Shape.Utils.isClockWise(g)&&(k[e]=g.reverse())}}var j=THREE.Shape.Utils.triangulateShape(i,k);e=0;for(f=k.length;e<f;e++){g=k[e];i=i.concat(g)}k=i.length;f=j.length;for(e=
0;e<k;e++){g=i[e];this.vertices.push(new THREE.Vector3(g.x,g.y,0))}for(e=0;e<f;e++){k=j[e];i=k[0]+h;g=k[1]+h;k=k[2]+h;this.faces.push(new THREE.Face3(i,g,k,null,null,c));this.faceVertexUvs[0].push(d.generateBottomUV(this,a,b,i,g,k))}};
THREE.LatheGeometry=function(a,b,c){THREE.Geometry.call(this);for(var b=b||12,c=c||2*Math.PI,d=[],e=(new THREE.Matrix4).makeRotationZ(c/b),f=0;f<a.length;f++){d[f]=a[f].clone();this.vertices.push(d[f])}for(var g=b+1,c=0;c<g;c++)for(f=0;f<d.length;f++){d[f]=e.multiplyVector3(d[f].clone());this.vertices.push(d[f])}for(c=0;c<b;c++){d=0;for(e=a.length;d<e-1;d++){this.faces.push(new THREE.Face4(c*e+d,(c+1)%g*e+d,(c+1)%g*e+(d+1)%e,c*e+(d+1)%e));this.faceVertexUvs[0].push([new THREE.UV(1-c/b,d/e),new THREE.UV(1-
(c+1)/b,d/e),new THREE.UV(1-(c+1)/b,(d+1)/e),new THREE.UV(1-c/b,(d+1)/e)])}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);for(var e=a/2,f=b/2,c=c||1,d=d||1,g=c+1,h=d+1,i=a/c,k=b/d,j=new THREE.Vector3(0,0,1),a=0;a<h;a++)for(b=0;b<g;b++)this.vertices.push(new THREE.Vector3(b*i-e,-(a*k-f),0));for(a=0;a<d;a++)for(b=0;b<c;b++){e=new THREE.Face4(b+g*a,b+g*(a+1),b+1+g*(a+1),b+1+g*a);e.normal.copy(j);e.vertexNormals.push(j.clone(),j.clone(),j.clone(),j.clone());this.faces.push(e);this.faceVertexUvs[0].push([new THREE.UV(b/c,1-a/d),new THREE.UV(b/c,1-(a+1)/d),new THREE.UV((b+
1)/c,1-(a+1)/d),new THREE.UV((b+1)/c,1-a/d)])}this.computeCentroids()};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.SphereGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this);var a=a||50,d=d!==void 0?d:0,e=e!==void 0?e:Math.PI*2,f=f!==void 0?f:0,g=g!==void 0?g:Math.PI,b=Math.max(3,Math.floor(b)||8),c=Math.max(2,Math.floor(c)||6),h,i,k=[],j=[];for(i=0;i<=c;i++){var l=[],m=[];for(h=0;h<=b;h++){var p=h/b,n=i/c,q=new THREE.Vector3;q.x=-a*Math.cos(d+p*e)*Math.sin(f+n*g);q.y=a*Math.cos(f+n*g);q.z=a*Math.sin(d+p*e)*Math.sin(f+n*g);this.vertices.push(q);l.push(this.vertices.length-1);m.push(new THREE.UV(p,
1-n))}k.push(l);j.push(m)}for(i=0;i<c;i++)for(h=0;h<b;h++){var d=k[i][h+1],e=k[i][h],f=k[i+1][h],g=k[i+1][h+1],l=this.vertices[d].clone().normalize(),m=this.vertices[e].clone().normalize(),p=this.vertices[f].clone().normalize(),n=this.vertices[g].clone().normalize(),q=j[i][h+1].clone(),t=j[i][h].clone(),s=j[i+1][h].clone(),x=j[i+1][h+1].clone();if(Math.abs(this.vertices[d].y)==a){this.faces.push(new THREE.Face3(d,f,g,[l,p,n]));this.faceVertexUvs[0].push([q,s,x])}else if(Math.abs(this.vertices[f].y)==
a){this.faces.push(new THREE.Face3(d,e,f,[l,m,p]));this.faceVertexUvs[0].push([q,t,s])}else{this.faces.push(new THREE.Face4(d,e,f,g,[l,m,p,n]));this.faceVertexUvs[0].push([q,t,s,x])}}this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:a}};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TextGeometry=function(a,b){var c=THREE.FontUtils.generateShapes(a,b);b.amount=b.height!==void 0?b.height:50;if(b.bevelThickness===void 0)b.bevelThickness=10;if(b.bevelSize===void 0)b.bevelSize=8;if(b.bevelEnabled===void 0)b.bevelEnabled=false;THREE.ExtrudeGeometry.call(this,c,b)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);
THREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.radius=a||100;this.tube=b||40;this.radialSegments=c||8;this.tubularSegments=d||6;this.arc=e||Math.PI*2;e=new THREE.Vector3;a=[];b=[];for(c=0;c<=this.radialSegments;c++)for(d=0;d<=this.tubularSegments;d++){var f=d/this.tubularSegments*this.arc,g=c/this.radialSegments*Math.PI*2;e.x=this.radius*Math.cos(f);e.y=this.radius*Math.sin(f);var h=new THREE.Vector3;h.x=(this.radius+this.tube*Math.cos(g))*Math.cos(f);h.y=(this.radius+this.tube*
Math.cos(g))*Math.sin(f);h.z=this.tube*Math.sin(g);this.vertices.push(h);a.push(new THREE.UV(d/this.tubularSegments,c/this.radialSegments));b.push(h.clone().subSelf(e).normalize())}for(c=1;c<=this.radialSegments;c++)for(d=1;d<=this.tubularSegments;d++){var e=(this.tubularSegments+1)*c+d-1,f=(this.tubularSegments+1)*(c-1)+d-1,g=(this.tubularSegments+1)*(c-1)+d,h=(this.tubularSegments+1)*c+d,i=new THREE.Face4(e,f,g,h,[b[e],b[f],b[g],b[h]]);i.normal.addSelf(b[e]);i.normal.addSelf(b[f]);i.normal.addSelf(b[g]);
i.normal.addSelf(b[h]);i.normal.normalize();this.faces.push(i);this.faceVertexUvs[0].push([a[e].clone(),a[f].clone(),a[g].clone(),a[h].clone()])}this.computeCentroids()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TorusKnotGeometry=function(a,b,c,d,e,f,g){function h(a,b,c,d,e,f){var g=Math.cos(a);Math.cos(b);b=Math.sin(a);a=c/d*a;c=Math.cos(a);g=e*(2+c)*0.5*g;b=e*(2+c)*b*0.5;e=f*e*Math.sin(a)*0.5;return new THREE.Vector3(g,b,e)}THREE.Geometry.call(this);this.radius=a||200;this.tube=b||40;this.radialSegments=c||64;this.tubularSegments=d||8;this.p=e||2;this.q=f||3;this.heightScale=g||1;this.grid=Array(this.radialSegments);c=new THREE.Vector3;d=new THREE.Vector3;e=new THREE.Vector3;for(a=0;a<this.radialSegments;++a){this.grid[a]=
Array(this.tubularSegments);for(b=0;b<this.tubularSegments;++b){var i=a/this.radialSegments*2*this.p*Math.PI,g=b/this.tubularSegments*2*Math.PI,f=h(i,g,this.q,this.p,this.radius,this.heightScale),i=h(i+0.01,g,this.q,this.p,this.radius,this.heightScale);c.sub(i,f);d.add(i,f);e.cross(c,d);d.cross(e,c);e.normalize();d.normalize();i=-this.tube*Math.cos(g);g=this.tube*Math.sin(g);f.x=f.x+(i*d.x+g*e.x);f.y=f.y+(i*d.y+g*e.y);f.z=f.z+(i*d.z+g*e.z);this.grid[a][b]=this.vertices.push(new THREE.Vector3(f.x,
f.y,f.z))-1}}for(a=0;a<this.radialSegments;++a)for(b=0;b<this.tubularSegments;++b){var e=(a+1)%this.radialSegments,f=(b+1)%this.tubularSegments,c=this.grid[a][b],d=this.grid[e][b],e=this.grid[e][f],f=this.grid[a][f],g=new THREE.UV(a/this.radialSegments,b/this.tubularSegments),i=new THREE.UV((a+1)/this.radialSegments,b/this.tubularSegments),k=new THREE.UV((a+1)/this.radialSegments,(b+1)/this.tubularSegments),j=new THREE.UV(a/this.radialSegments,(b+1)/this.tubularSegments);this.faces.push(new THREE.Face4(c,
d,e,f));this.faceVertexUvs[0].push([g,i,k,j])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.path=a;this.segments=b||64;this.radius=c||1;this.radiusSegments=d||8;this.closed=e||false;if(f)this.debug=new THREE.Object3D;this.grid=[];var g,h,f=this.segments+1,i,k,j,l=new THREE.Vector3,m,p,n,b=new THREE.TubeGeometry.FrenetFrames(a,b,e);m=b.tangents;p=b.normals;n=b.binormals;this.tangents=m;this.normals=p;this.binormals=n;for(b=0;b<f;b++){this.grid[b]=[];d=b/(f-1);j=a.getPointAt(d);d=m[b];g=p[b];h=n[b];if(this.debug){this.debug.add(new THREE.ArrowHelper(d,
j,c,255));this.debug.add(new THREE.ArrowHelper(g,j,c,16711680));this.debug.add(new THREE.ArrowHelper(h,j,c,65280))}for(d=0;d<this.radiusSegments;d++){i=d/this.radiusSegments*2*Math.PI;k=-this.radius*Math.cos(i);i=this.radius*Math.sin(i);l.copy(j);l.x=l.x+(k*g.x+i*h.x);l.y=l.y+(k*g.y+i*h.y);l.z=l.z+(k*g.z+i*h.z);this.grid[b][d]=this.vertices.push(new THREE.Vector3(l.x,l.y,l.z))-1}}for(b=0;b<this.segments;b++)for(d=0;d<this.radiusSegments;d++){f=e?(b+1)%this.segments:b+1;l=(d+1)%this.radiusSegments;
a=this.grid[b][d];c=this.grid[f][d];f=this.grid[f][l];l=this.grid[b][l];m=new THREE.UV(b/this.segments,d/this.radiusSegments);p=new THREE.UV((b+1)/this.segments,d/this.radiusSegments);n=new THREE.UV((b+1)/this.segments,(d+1)/this.radiusSegments);g=new THREE.UV(b/this.segments,(d+1)/this.radiusSegments);this.faces.push(new THREE.Face4(a,c,f,l));this.faceVertexUvs[0].push([m,p,n,g])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry.FrenetFrames=function(a,b,c){new THREE.Vector3;var d=new THREE.Vector3;new THREE.Vector3;var e=[],f=[],g=[],h=new THREE.Vector3,i=new THREE.Matrix4,b=b+1,k,j,l;this.tangents=e;this.normals=f;this.binormals=g;for(k=0;k<b;k++){j=k/(b-1);e[k]=a.getTangentAt(j);e[k].normalize()}f[0]=new THREE.Vector3;g[0]=new THREE.Vector3;a=Number.MAX_VALUE;k=Math.abs(e[0].x);j=Math.abs(e[0].y);l=Math.abs(e[0].z);if(k<=a){a=k;d.set(1,0,0)}if(j<=a){a=j;d.set(0,1,0)}l<=a&&d.set(0,0,1);h.cross(e[0],d).normalize();
f[0].cross(e[0],h);g[0].cross(e[0],f[0]);for(k=1;k<b;k++){f[k]=f[k-1].clone();g[k]=g[k-1].clone();h.cross(e[k-1],e[k]);if(h.length()>1E-4){h.normalize();d=Math.acos(e[k-1].dot(e[k]));i.makeRotationAxis(h,d).multiplyVector3(f[k])}g[k].cross(e[k],f[k])}if(c){d=Math.acos(f[0].dot(f[b-1]));d=d/(b-1);e[0].dot(h.cross(f[0],f[b-1]))>0&&(d=-d);for(k=1;k<b;k++){i.makeRotationAxis(e[k],d*k).multiplyVector3(f[k]);g[k].cross(e[k],f[k])}}};
THREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=i.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+0.5,a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+0.5;b.uv=new THREE.UV(c,1-a);return b}function f(a,b,c,d){if(d<1){d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]);d.centroid.addSelf(a).addSelf(b).addSelf(c).divideScalar(3);d.normal=d.centroid.clone().normalize();i.faces.push(d);d=Math.atan2(d.centroid.z,-d.centroid.x);
i.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,c,d)])}else{d=d-1;f(a,g(a,b),g(a,c),d);f(g(a,b),b,g(b,c),d);f(g(a,c),g(b,c),c,d);f(g(a,b),g(b,c),g(a,c),d)}}function g(a,b){l[a.index]||(l[a.index]=[]);l[b.index]||(l[b.index]=[]);var c=l[a.index][b.index];c===void 0&&(l[a.index][b.index]=l[b.index][a.index]=c=e((new THREE.Vector3).add(a,b).divideScalar(2)));return c}function h(a,b,c){c<0&&a.u===1&&(a=new THREE.UV(a.u-1,a.v));b.x===0&&b.z===0&&(a=new THREE.UV(c/2/Math.PI+0.5,a.v));return a}THREE.Geometry.call(this);
for(var c=c||1,d=d||0,i=this,k=0,j=a.length;k<j;k++)e(new THREE.Vector3(a[k][0],a[k][1],a[k][2]));for(var l=[],a=this.vertices,k=0,j=b.length;k<j;k++)f(a[b[k][0]],a[b[k][1]],a[b[k][2]],d);this.mergeVertices();k=0;for(j=this.vertices.length;k<j;k++)this.vertices[k].multiplyScalar(c);this.computeCentroids();this.boundingSphere={radius:c}};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],a,b)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],a,b)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],a,b)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ParametricGeometry=function(a,b,c,d){THREE.Geometry.call(this);var e=this.vertices,f=this.faces,g=this.faceVertexUvs[0],d=d===void 0?false:d,h,i,k,j,l=b+1;for(h=0;h<=c;h++){j=h/c;for(i=0;i<=b;i++){k=i/b;k=a(k,j);e.push(k)}}var m,p,n,q;for(h=0;h<c;h++)for(i=0;i<b;i++){a=h*l+i;e=h*l+i+1;j=(h+1)*l+i;k=(h+1)*l+i+1;m=new THREE.UV(i/b,h/c);p=new THREE.UV((i+1)/b,h/c);n=new THREE.UV(i/b,(h+1)/c);q=new THREE.UV((i+1)/b,(h+1)/c);if(d){f.push(new THREE.Face3(a,e,j));f.push(new THREE.Face3(e,k,j));g.push([m,
p,n]);g.push([p,q,n])}else{f.push(new THREE.Face4(a,e,k,j));g.push([m,p,q,n])}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ConvexGeometry=function(a){function b(a){var b=a.length();return new THREE.UV(a.x/b,a.y/b)}THREE.Geometry.call(this);for(var c=[[0,1,2],[0,2,1]],d=3;d<a.length;d++){var e=d,f=a[e].clone(),g=f.length();f.x=f.x+g*(Math.random()-0.5)*2E-6;f.y=f.y+g*(Math.random()-0.5)*2E-6;f.z=f.z+g*(Math.random()-0.5)*2E-6;for(var g=[],h=0;h<c.length;){var i=c[h],k=f,j=a[i[0]],l;l=j;var m=a[i[1]],p=a[i[2]],n=new THREE.Vector3,q=new THREE.Vector3;n.sub(p,m);q.sub(l,m);n.crossSelf(q);n.isZero()||n.normalize();l=
n;j=l.dot(j);if(l.dot(k)>=j){for(k=0;k<3;k++){j=[i[k],i[(k+1)%3]];l=true;for(m=0;m<g.length;m++)if(g[m][0]===j[1]&&g[m][1]===j[0]){g[m]=g[g.length-1];g.pop();l=false;break}l&&g.push(j)}c[h]=c[c.length-1];c.pop()}else h++}for(m=0;m<g.length;m++)c.push([g[m][0],g[m][1],e])}e=0;f=Array(a.length);for(d=0;d<c.length;d++){g=c[d];for(h=0;h<3;h++){if(f[g[h]]===void 0){f[g[h]]=e++;this.vertices.push(a[g[h]])}g[h]=f[g[h]]}}for(d=0;d<c.length;d++)this.faces.push(new THREE.Face3(c[d][0],c[d][1],c[d][2]));for(d=
0;d<this.faces.length;d++){g=this.faces[d];this.faceVertexUvs[0].push([b(this.vertices[g.a]),b(this.vertices[g.b]),b(this.vertices[g.c])])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.AxisHelper=function(a){var b=new THREE.Geometry;b.vertices.push(new THREE.Vector3,new THREE.Vector3(a||1,0,0),new THREE.Vector3,new THREE.Vector3(0,a||1,0),new THREE.Vector3,new THREE.Vector3(0,0,a||1));b.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));a=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,b,a,THREE.LinePieces)};
THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);
THREE.ArrowHelper=function(a,b,c,d){THREE.Object3D.call(this);d===void 0&&(d=16776960);c===void 0&&(c=20);var e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0));e.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:d}));this.add(this.line);e=new THREE.CylinderGeometry(0,0.05,0.25,5,1);this.cone=new THREE.Mesh(e,new THREE.MeshBasicMaterial({color:d}));this.cone.position.set(0,1,0);this.add(this.cone);if(b instanceof THREE.Vector3)this.position=
b;this.setDirection(a);this.setLength(c)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(a){var b=(new THREE.Vector3(0,1,0)).crossSelf(a),a=Math.acos((new THREE.Vector3(0,1,0)).dot(a.clone().normalize()));this.matrix=(new THREE.Matrix4).makeRotationAxis(b.normalize(),a);this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)};THREE.ArrowHelper.prototype.setLength=function(a){this.scale.set(a,a,a)};
THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.setHex(a);this.cone.material.color.setHex(a)};
THREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.geometry.vertices.push(new THREE.Vector3);d.geometry.colors.push(new THREE.Color(b));d.pointMap[a]===void 0&&(d.pointMap[a]=[]);d.pointMap[a].push(d.geometry.vertices.length-1)}THREE.Line.call(this);var d=this;this.geometry=new THREE.Geometry;this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});this.type=THREE.LinePieces;this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=false;this.pointMap=
{};b("n1","n2",16755200);b("n2","n4",16755200);b("n4","n3",16755200);b("n3","n1",16755200);b("f1","f2",16755200);b("f2","f4",16755200);b("f4","f3",16755200);b("f3","f1",16755200);b("n1","f1",16755200);b("n2","f2",16755200);b("n3","f3",16755200);b("n4","f4",16755200);b("p","n1",16711680);b("p","n2",16711680);b("p","n3",16711680);b("p","n4",16711680);b("u1","u2",43775);b("u2","u3",43775);b("u3","u1",43775);b("c","t",16777215);b("p","c",3355443);b("cn1","cn2",3355443);b("cn3","cn4",3355443);b("cf1",
"cf2",3355443);b("cf3","cf4",3355443);this.camera=a;this.update(a)};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);
THREE.CameraHelper.prototype.update=function(){function a(a,d,e,f){THREE.CameraHelper.__v.set(d,e,f);THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);a=b.pointMap[a];if(a!==void 0){d=0;for(e=a.length;d<e;d++)b.geometry.vertices[a[d]].copy(THREE.CameraHelper.__v)}}var b=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix);a("c",0,0,-1);a("t",0,0,1);a("n1",-1,-1,-1);a("n2",1,-1,-1);a("n3",-1,1,-1);a("n4",1,1,-1);a("f1",-1,-1,1);
a("f2",1,-1,1);a("f3",-1,1,1);a("f4",1,1,1);a("u1",0.7,1.1,-1);a("u2",-0.7,1.1,-1);a("u3",0,2,-1);a("cf1",-1,0,1);a("cf2",1,0,1);a("cf3",0,-1,1);a("cf4",0,1,1);a("cn1",-1,0,-1);a("cn2",1,0,-1);a("cn3",0,-1,-1);a("cn4",0,1,-1);this.geometry.verticesNeedUpdate=true};THREE.CameraHelper.__projector=new THREE.Projector;THREE.CameraHelper.__v=new THREE.Vector3;THREE.CameraHelper.__c=new THREE.Camera;
THREE.SubdivisionModifier=function(a){this.subdivisions=a===void 0?1:a;this.useOldVertexColors=false;this.supportUVs=true;this.debug=false};THREE.SubdivisionModifier.prototype.modify=function(a){for(var b=this.subdivisions;b-- >0;)this.smooth(a)};THREE.GeometryUtils.orderedKey=function(a,b){return Math.min(a,b)+"_"+Math.max(a,b)};
THREE.GeometryUtils.computeEdgeFaces=function(a){function b(a,b){g[a]===void 0&&(g[a]=[]);g[a].push(b)}var c,d,e,f,g={},h=THREE.GeometryUtils.orderedKey;c=0;for(d=a.faces.length;c<d;c++){e=a.faces[c];if(e instanceof THREE.Face3){f=h(e.a,e.b);b(f,c);f=h(e.b,e.c);b(f,c);f=h(e.c,e.a);b(f,c)}else if(e instanceof THREE.Face4){f=h(e.a,e.b);b(f,c);f=h(e.b,e.c);b(f,c);f=h(e.c,e.d);b(f,c);f=h(e.d,e.a);b(f,c)}}return g};
THREE.SubdivisionModifier.prototype.smooth=function(a){function b(){j.debug&&(console&&console.assert)&&console.assert.apply(console,arguments)}function c(){j.debug&&console.log.apply(console,arguments)}function d(){console&&console.log.apply(console,arguments)}function e(a,b,d,e,g,h,l){var m=new THREE.Face4(a,b,d,e,null,g.color,g.materialIndex);if(j.useOldVertexColors){m.vertexColors=[];for(var n,p,q,r=0;r<4;r++){q=h[r];n=new THREE.Color;n.setRGB(0,0,0);for(var s=0;s<q.length;s++){p=g.vertexColors[q[s]-
1];n.r=n.r+p.r;n.g=n.g+p.g;n.b=n.b+p.b}n.r=n.r/q.length;n.g=n.g/q.length;n.b=n.b/q.length;m.vertexColors[r]=n}}i.push(m);if(j.supportUVs){g=[f(a,""),f(b,l),f(d,l),f(e,l)];g[0]?g[1]?g[2]?g[3]?k.push(g):c("d :( ",e+":"+l):c("c :( ",d+":"+l):c("b :( ",b+":"+l):c("a :( ",a+":"+l)}}function f(a,b){var e=a+":"+b,f=u[e];if(!f){a>=q&&a<q+n.length?c("face pt"):c("edge pt");d("warning, UV not found for",e);return null}return f}function g(a,b,c){var e=a+":"+b;e in u?d("dup vertexNo",a,"oldFaceNo",b,"value",
c,"key",e,u[e]):u[e]=c}var h=[],i=[],k=[],j=this,l=THREE.GeometryUtils.orderedKey,m=THREE.GeometryUtils.computeEdgeFaces,p=a.vertices,n=a.faces,q=p.length,h=p.concat(),t=[],s={},x={},u={},r,y,w,v,A,F=a.faceVertexUvs[0],C;c("originalFaces, uvs, originalVerticesLength",n.length,F.length,q);if(j.supportUVs){r=0;for(y=F.length;r<y;r++){w=0;for(v=F[r].length;w<v;w++){C=n[r]["abcd".charAt(w)];g(C,r,F[r][w])}}}if(F.length==0)j.supportUVs=false;r=0;for(var G in u)r++;if(!r){j.supportUVs=false;c("no uvs")}r=
0;for(y=n.length;r<y;r++){A=n[r];t.push(A.centroid);h.push(A.centroid);if(j.supportUVs){v=new THREE.UV;if(A instanceof THREE.Face3){v.u=f(A.a,r).u+f(A.b,r).u+f(A.c,r).u;v.v=f(A.a,r).v+f(A.b,r).v+f(A.c,r).v;v.u=v.u/3;v.v=v.v/3}else if(A instanceof THREE.Face4){v.u=f(A.a,r).u+f(A.b,r).u+f(A.c,r).u+f(A.d,r).u;v.v=f(A.a,r).v+f(A.b,r).v+f(A.c,r).v+f(A.d,r).v;v.u=v.u/4;v.v=v.v/4}g(q+r,"",v)}}var m=m(a),H;y=0;var D,J;G={};F={};for(r in m){C=m[r];D=r.split("_");J=D[0];D=D[1];w=J;A=[J,D];G[w]===void 0&&(G[w]=
[]);G[w].push(A);w=D;A=[J,D];G[w]===void 0&&(G[w]=[]);G[w].push(A);w=0;for(v=C.length;w<v;w++){A=C[w];H=J;var L=A,K=r;F[H]===void 0&&(F[H]={});F[H][L]=K;H=D;L=r;F[H]===void 0&&(F[H]={});F[H][A]=L}C.length<2&&(x[r]=true)}for(r in m){C=m[r];A=C[0];H=C[1];D=r.split("_");J=D[0];D=D[1];v=new THREE.Vector3;b(C.length>0,"an edge without faces?!");if(C.length==1){v.addSelf(p[J]);v.addSelf(p[D]);v.multiplyScalar(0.5)}else{v.addSelf(t[A]);v.addSelf(t[H]);v.addSelf(p[J]);v.addSelf(p[D]);v.multiplyScalar(0.25)}s[r]=
q+n.length+y;h.push(v);y++;if(j.supportUVs){v=new THREE.UV;v.u=f(J,A).u+f(D,A).u;v.v=f(J,A).v+f(D,A).v;v.u=v.u/2;v.v=v.v/2;g(s[r],A,v);if(C.length>=2){b(C.length==2,"did we plan for more than 2 edges?");v=new THREE.UV;v.u=f(J,H).u+f(D,H).u;v.v=f(J,H).v+f(D,H).v;v.u=v.u/2;v.v=v.v/2;g(s[r],H,v)}}}c("-- Step 2 done");var M,N;v=["123","12","2","23"];H=["123","23","3","31"];var L=["123","31","1","12"],K=["1234","12","2","23"],S=["1234","23","3","34"],ca=["1234","34","4","41"],ha=["1234","41","1","12"];
r=0;for(y=t.length;r<y;r++){A=n[r];C=q+r;if(A instanceof THREE.Face3){J=l(A.a,A.b);D=l(A.b,A.c);M=l(A.c,A.a);e(C,s[J],A.b,s[D],A,v,r);e(C,s[D],A.c,s[M],A,H,r);e(C,s[M],A.a,s[J],A,L,r)}else if(A instanceof THREE.Face4){J=l(A.a,A.b);D=l(A.b,A.c);M=l(A.c,A.d);N=l(A.d,A.a);e(C,s[J],A.b,s[D],A,K,r);e(C,s[D],A.c,s[M],A,S,r);e(C,s[M],A.d,s[N],A,ca,r);e(C,s[N],A.a,s[J],A,ha,r)}else c("face should be a face!",A)}s=new THREE.Vector3;A=new THREE.Vector3;r=0;for(y=p.length;r<y;r++)if(G[r]!==void 0){s.set(0,0,
0);A.set(0,0,0);D=new THREE.Vector3(0,0,0);C=0;for(w in F[r]){s.addSelf(t[w]);C++}H=0;J=G[r].length;v=C!=J;for(w=0;w<J;w++)x[l(G[r][w][0],G[r][w][1])]&&H++;s.divideScalar(C);H=0;if(v){for(w=0;w<J;w++){C=G[r][w];if(L=m[l(C[0],C[1])].length==1){C=p[C[0]].clone().addSelf(p[C[1]]).divideScalar(2);A.addSelf(C);H++}}A.divideScalar(4);b(H==2,"should have only 2 boundary edges")}else{for(w=0;w<J;w++){C=G[r][w];C=p[C[0]].clone().addSelf(p[C[1]]).divideScalar(2);A.addSelf(C)}A.divideScalar(J)}D.addSelf(p[r]);
if(v){D.divideScalar(2);D.addSelf(A)}else{D.multiplyScalar(J-3);D.addSelf(s);D.addSelf(A.multiplyScalar(2));D.divideScalar(J)}h[r]=D}a.vertices=h;a.faces=i;a.faceVertexUvs[0]=k;delete a.__tmpVertices;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals()};THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);
THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;a!==void 0&&this.add(a,b,c,d,e)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);
THREE.LensFlare.prototype.add=function(a,b,c,d,e,f){b===void 0&&(b=-1);c===void 0&&(c=0);f===void 0&&(f=1);e===void 0&&(e=new THREE.Color(16777215));if(d===void 0)d=THREE.NormalBlending;c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=-this.positionScreen.x*2,e=-this.positionScreen.y*2;for(a=0;a<b;a++){c=this.lensFlares[a];c.x=this.positionScreen.x+d*c.distance;c.y=this.positionScreen.y+e*c.distance;c.wantedRotation=c.x*Math.PI*0.25;c.rotation=c.rotation+(c.wantedRotation-c.rotation)*0.25}};
THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation("__default",0,c-1,c/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);
THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:false,time:0,direction:1,weight:1,directionBackwards:false,mirroredLoop:false};this.animationsMap[a]=b;this.animationsList.push(b)};
THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)(\d+)/,c,d={},e=this.geometry,f=0,g=e.morphTargets.length;f<g;f++){var h=e.morphTargets[f].name.match(b);if(h&&h.length>1){var i=h[1];d[i]||(d[i]={start:Infinity,end:-Infinity});h=d[i];if(f<h.start)h.start=f;if(f>h.end)h.end=f;c||(c=i)}}for(i in d){h=d[i];this.createAnimation(i,h.start,h.end,a)}this.firstAnimation=c};
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a]){a.direction=1;a.directionBackwards=false}};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a]){a.direction=-1;a.directionBackwards=true}};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];if(c){c.fps=b;c.duration=(c.end-c.start)/c.fps}};
THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];if(c){c.duration=b;c.fps=(c.end-c.start)/c.duration}};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];if(c)c.weight=b};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];if(c)c.time=b};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};
THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];if(b){b.time=0;b.active=true}else console.warn("animation["+a+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=false};
THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time=d.time+d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||d.time<0){d.direction=d.direction*-1;if(d.time>d.duration){d.time=d.duration;d.directionBackwards=true}if(d.time<0){d.time=0;d.directionBackwards=false}}}else{d.time=d.time%d.duration;if(d.time<0)d.time=d.time+d.duration}var f=d.startFrame+THREE.Math.clamp(Math.floor(d.time/
e),0,d.length-1),g=d.weight;if(f!==d.currentFrame){this.morphTargetInfluences[d.lastFrame]=0;this.morphTargetInfluences[d.currentFrame]=1*g;this.morphTargetInfluences[f]=0;d.lastFrame=d.currentFrame;d.currentFrame=f}e=d.time%e/e;d.directionBackwards&&(e=1-e);this.morphTargetInfluences[d.currentFrame]=e*g;this.morphTargetInfluences[d.lastFrame]=(1-e)*g}}};
THREE.LensFlarePlugin=function(){function a(a){var c=b.createProgram(),d=b.createShader(b.FRAGMENT_SHADER),e=b.createShader(b.VERTEX_SHADER);b.shaderSource(d,a.fragmentShader);b.shaderSource(e,a.vertexShader);b.compileShader(d);b.compileShader(e);b.attachShader(c,d);b.attachShader(c,e);b.linkProgram(c);return c}var b,c,d,e,f,g,h,i,k,j,l,m,p;this.init=function(n){b=n.context;c=n;d=new Float32Array(16);e=new Uint16Array(6);n=0;d[n++]=-1;d[n++]=-1;d[n++]=0;d[n++]=0;d[n++]=1;d[n++]=-1;d[n++]=1;d[n++]=
0;d[n++]=1;d[n++]=1;d[n++]=1;d[n++]=1;d[n++]=-1;d[n++]=1;d[n++]=0;d[n++]=1;n=0;e[n++]=0;e[n++]=1;e[n++]=2;e[n++]=0;e[n++]=2;e[n++]=3;f=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,f);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,e,b.STATIC_DRAW);h=b.createTexture();i=b.createTexture();b.bindTexture(b.TEXTURE_2D,h);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,
b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.bindTexture(b.TEXTURE_2D,i);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);
b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);if(b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0){k=false;j=a(THREE.ShaderFlares.lensFlare)}else{k=true;j=a(THREE.ShaderFlares.lensFlareVertexTexture)}l={};m={};l.vertex=b.getAttribLocation(j,"position");l.uv=b.getAttribLocation(j,"uv");m.renderType=b.getUniformLocation(j,"renderType");m.map=b.getUniformLocation(j,"map");m.occlusionMap=b.getUniformLocation(j,"occlusionMap");m.opacity=b.getUniformLocation(j,"opacity");m.color=b.getUniformLocation(j,
"color");m.scale=b.getUniformLocation(j,"scale");m.rotation=b.getUniformLocation(j,"rotation");m.screenPosition=b.getUniformLocation(j,"screenPosition");p=false};this.render=function(a,d,e,s){var a=a.__webglFlares,x=a.length;if(x){var u=new THREE.Vector3,r=s/e,y=e*0.5,w=s*0.5,v=16/s,A=new THREE.Vector2(v*r,v),F=new THREE.Vector3(1,1,0),C=new THREE.Vector2(1,1),G=m,v=l;b.useProgram(j);if(!p){b.enableVertexAttribArray(l.vertex);b.enableVertexAttribArray(l.uv);p=true}b.uniform1i(G.occlusionMap,0);b.uniform1i(G.map,
1);b.bindBuffer(b.ARRAY_BUFFER,f);b.vertexAttribPointer(v.vertex,2,b.FLOAT,false,16,0);b.vertexAttribPointer(v.uv,2,b.FLOAT,false,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.disable(b.CULL_FACE);b.depthMask(false);var H,D,J,L,K;for(H=0;H<x;H++){v=16/s;A.set(v*r,v);L=a[H];u.set(L.matrixWorld.elements[12],L.matrixWorld.elements[13],L.matrixWorld.elements[14]);d.matrixWorldInverse.multiplyVector3(u);d.projectionMatrix.multiplyVector3(u);F.copy(u);C.x=F.x*y+y;C.y=F.y*w+w;if(k||C.x>0&&C.x<e&&C.y>0&&
C.y<s){b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,h);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,C.x-8,C.y-8,16,16,0);b.uniform1i(G.renderType,0);b.uniform2f(G.scale,A.x,A.y);b.uniform3f(G.screenPosition,F.x,F.y,F.z);b.disable(b.BLEND);b.enable(b.DEPTH_TEST);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);b.activeTexture(b.TEXTURE0);b.bindTexture(b.TEXTURE_2D,i);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,C.x-8,C.y-8,16,16,0);b.uniform1i(G.renderType,1);b.disable(b.DEPTH_TEST);b.activeTexture(b.TEXTURE1);
b.bindTexture(b.TEXTURE_2D,h);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);L.positionScreen.copy(F);L.customUpdateCallback?L.customUpdateCallback(L):L.updateLensFlares();b.uniform1i(G.renderType,2);b.enable(b.BLEND);D=0;for(J=L.lensFlares.length;D<J;D++){K=L.lensFlares[D];if(K.opacity>0.0010&&K.scale>0.0010){F.x=K.x;F.y=K.y;F.z=K.z;v=K.size*K.scale/s;A.x=v*r;A.y=v;b.uniform3f(G.screenPosition,F.x,F.y,F.z);b.uniform2f(G.scale,A.x,A.y);b.uniform1f(G.rotation,K.rotation);b.uniform1f(G.opacity,K.opacity);
b.uniform3f(G.color,K.color.r,K.color.g,K.color.b);c.setBlending(K.blending,K.blendEquation,K.blendSrc,K.blendDst);c.setTexture(K.texture,1);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0)}}}}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(true)}}};
THREE.ShadowMapPlugin=function(){var a,b,c,d,e,f,g=new THREE.Frustum,h=new THREE.Matrix4,i=new THREE.Vector3,k=new THREE.Vector3;this.init=function(g){a=g.context;b=g;var g=THREE.ShaderLib.depthRGBA,h=THREE.UniformsUtils.clone(g.uniforms);c=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h});d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:true});e=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,
vertexShader:g.vertexShader,uniforms:h,skinning:true});f=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:true,skinning:true});c._shadowPass=true;d._shadowPass=true;e._shadowPass=true;f._shadowPass=true};this.render=function(a,c){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(a,c)};this.update=function(j,l){var m,p,n,q,t,s,x,u,r,y=[];q=0;a.clearColor(1,1,1,1);a.disable(a.BLEND);a.enable(a.CULL_FACE);a.frontFace(a.CCW);b.shadowMapCullFrontFaces?
a.cullFace(a.FRONT):a.cullFace(a.BACK);b.setDepthTest(true);m=0;for(p=j.__lights.length;m<p;m++){n=j.__lights[m];if(n.castShadow)if(n instanceof THREE.DirectionalLight&&n.shadowCascade)for(t=0;t<n.shadowCascadeCount;t++){var w;if(n.shadowCascadeArray[t])w=n.shadowCascadeArray[t];else{r=n;x=t;w=new THREE.DirectionalLight;w.isVirtual=true;w.onlyShadow=true;w.castShadow=true;w.shadowCameraNear=r.shadowCameraNear;w.shadowCameraFar=r.shadowCameraFar;w.shadowCameraLeft=r.shadowCameraLeft;w.shadowCameraRight=
r.shadowCameraRight;w.shadowCameraBottom=r.shadowCameraBottom;w.shadowCameraTop=r.shadowCameraTop;w.shadowCameraVisible=r.shadowCameraVisible;w.shadowDarkness=r.shadowDarkness;w.shadowBias=r.shadowCascadeBias[x];w.shadowMapWidth=r.shadowCascadeWidth[x];w.shadowMapHeight=r.shadowCascadeHeight[x];w.pointsWorld=[];w.pointsFrustum=[];u=w.pointsWorld;s=w.pointsFrustum;for(var v=0;v<8;v++){u[v]=new THREE.Vector3;s[v]=new THREE.Vector3}u=r.shadowCascadeNearZ[x];r=r.shadowCascadeFarZ[x];s[0].set(-1,-1,u);
s[1].set(1,-1,u);s[2].set(-1,1,u);s[3].set(1,1,u);s[4].set(-1,-1,r);s[5].set(1,-1,r);s[6].set(-1,1,r);s[7].set(1,1,r);w.originalCamera=l;s=new THREE.Gyroscope;s.position=n.shadowCascadeOffset;s.add(w);s.add(w.target);l.add(s);n.shadowCascadeArray[t]=w;console.log("Created virtualLight",w)}x=n;u=t;r=x.shadowCascadeArray[u];r.position.copy(x.position);r.target.position.copy(x.target.position);r.lookAt(r.target);r.shadowCameraVisible=x.shadowCameraVisible;r.shadowDarkness=x.shadowDarkness;r.shadowBias=
x.shadowCascadeBias[u];s=x.shadowCascadeNearZ[u];x=x.shadowCascadeFarZ[u];r=r.pointsFrustum;r[0].z=s;r[1].z=s;r[2].z=s;r[3].z=s;r[4].z=x;r[5].z=x;r[6].z=x;r[7].z=x;y[q]=w;q++}else{y[q]=n;q++}}m=0;for(p=y.length;m<p;m++){n=y[m];if(!n.shadowMap){n.shadowMap=new THREE.WebGLRenderTarget(n.shadowMapWidth,n.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat});n.shadowMapSize=new THREE.Vector2(n.shadowMapWidth,n.shadowMapHeight);n.shadowMatrix=new THREE.Matrix4}if(!n.shadowCamera){if(n instanceof
THREE.SpotLight)n.shadowCamera=new THREE.PerspectiveCamera(n.shadowCameraFov,n.shadowMapWidth/n.shadowMapHeight,n.shadowCameraNear,n.shadowCameraFar);else if(n instanceof THREE.DirectionalLight)n.shadowCamera=new THREE.OrthographicCamera(n.shadowCameraLeft,n.shadowCameraRight,n.shadowCameraTop,n.shadowCameraBottom,n.shadowCameraNear,n.shadowCameraFar);else{console.error("Unsupported light type for shadow");continue}j.add(n.shadowCamera);b.autoUpdateScene&&j.updateMatrixWorld()}if(n.shadowCameraVisible&&
!n.cameraHelper){n.cameraHelper=new THREE.CameraHelper(n.shadowCamera);n.shadowCamera.add(n.cameraHelper)}if(n.isVirtual&&w.originalCamera==l){t=l;q=n.shadowCamera;s=n.pointsFrustum;r=n.pointsWorld;i.set(Infinity,Infinity,Infinity);k.set(-Infinity,-Infinity,-Infinity);for(x=0;x<8;x++){u=r[x];u.copy(s[x]);THREE.ShadowMapPlugin.__projector.unprojectVector(u,t);q.matrixWorldInverse.multiplyVector3(u);if(u.x<i.x)i.x=u.x;if(u.x>k.x)k.x=u.x;if(u.y<i.y)i.y=u.y;if(u.y>k.y)k.y=u.y;if(u.z<i.z)i.z=u.z;if(u.z>
k.z)k.z=u.z}q.left=i.x;q.right=k.x;q.top=k.y;q.bottom=i.y;q.updateProjectionMatrix()}q=n.shadowMap;s=n.shadowMatrix;t=n.shadowCamera;t.position.copy(n.matrixWorld.getPosition());t.lookAt(n.target.matrixWorld.getPosition());t.updateMatrixWorld();t.matrixWorldInverse.getInverse(t.matrixWorld);if(n.cameraHelper)n.cameraHelper.visible=n.shadowCameraVisible;n.shadowCameraVisible&&n.cameraHelper.update();s.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);s.multiplySelf(t.projectionMatrix);s.multiplySelf(t.matrixWorldInverse);
if(!t._viewMatrixArray)t._viewMatrixArray=new Float32Array(16);if(!t._projectionMatrixArray)t._projectionMatrixArray=new Float32Array(16);t.matrixWorldInverse.flattenToArray(t._viewMatrixArray);t.projectionMatrix.flattenToArray(t._projectionMatrixArray);h.multiply(t.projectionMatrix,t.matrixWorldInverse);g.setFromMatrix(h);b.setRenderTarget(q);b.clear();r=j.__webglObjects;n=0;for(q=r.length;n<q;n++){x=r[n];s=x.object;x.render=false;if(s.visible&&s.castShadow&&(!(s instanceof THREE.Mesh)||!s.frustumCulled||
g.contains(s))){s._modelViewMatrix.multiply(t.matrixWorldInverse,s.matrixWorld);x.render=true}}n=0;for(q=r.length;n<q;n++){x=r[n];if(x.render){s=x.object;x=x.buffer;v=s.material instanceof THREE.MeshFaceMaterial?s.geometry.materials[0]:s.material;u=s.geometry.morphTargets.length>0&&v.morphTargets;v=s instanceof THREE.SkinnedMesh&&v.skinning;u=s.customDepthMaterial?s.customDepthMaterial:v?u?f:e:u?d:c;x instanceof THREE.BufferGeometry?b.renderBufferDirect(t,j.__lights,null,u,x,s):b.renderBuffer(t,j.__lights,
null,u,x,s)}}r=j.__webglObjectsImmediate;n=0;for(q=r.length;n<q;n++){x=r[n];s=x.object;if(s.visible&&s.castShadow){s._modelViewMatrix.multiply(t.matrixWorldInverse,s.matrixWorld);b.renderImmediateObject(t,j.__lights,null,c,s)}}}m=b.getClearColor();p=b.getClearAlpha();a.clearColor(m.r,m.g,m.b,p);a.enable(a.BLEND);b.shadowMapCullFrontFaces&&a.cullFace(a.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;
THREE.SpritePlugin=function(){function a(a,b){return b.z-a.z}var b,c,d,e,f,g,h,i,k,j;this.init=function(a){b=a.context;c=a;d=new Float32Array(16);e=new Uint16Array(6);a=0;d[a++]=-1;d[a++]=-1;d[a++]=0;d[a++]=0;d[a++]=1;d[a++]=-1;d[a++]=1;d[a++]=0;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=-1;d[a++]=1;d[a++]=0;d[a++]=1;a=0;e[a++]=0;e[a++]=1;e[a++]=2;e[a++]=0;e[a++]=2;e[a++]=3;f=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,f);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,
g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,e,b.STATIC_DRAW);var a=THREE.ShaderSprite.sprite,m=b.createProgram(),p=b.createShader(b.FRAGMENT_SHADER),n=b.createShader(b.VERTEX_SHADER);b.shaderSource(p,a.fragmentShader);b.shaderSource(n,a.vertexShader);b.compileShader(p);b.compileShader(n);b.attachShader(m,p);b.attachShader(m,n);b.linkProgram(m);h=m;i={};k={};i.position=b.getAttribLocation(h,"position");i.uv=b.getAttribLocation(h,"uv");k.uvOffset=b.getUniformLocation(h,"uvOffset");k.uvScale=b.getUniformLocation(h,
"uvScale");k.rotation=b.getUniformLocation(h,"rotation");k.scale=b.getUniformLocation(h,"scale");k.alignment=b.getUniformLocation(h,"alignment");k.color=b.getUniformLocation(h,"color");k.map=b.getUniformLocation(h,"map");k.opacity=b.getUniformLocation(h,"opacity");k.useScreenCoordinates=b.getUniformLocation(h,"useScreenCoordinates");k.affectedByDistance=b.getUniformLocation(h,"affectedByDistance");k.screenPosition=b.getUniformLocation(h,"screenPosition");k.modelViewMatrix=b.getUniformLocation(h,"modelViewMatrix");
k.projectionMatrix=b.getUniformLocation(h,"projectionMatrix");j=false};this.render=function(d,e,p,n){var d=d.__webglSprites,q=d.length;if(q){var t=i,s=k,x=n/p,p=p*0.5,u=n*0.5,r=true;b.useProgram(h);if(!j){b.enableVertexAttribArray(t.position);b.enableVertexAttribArray(t.uv);j=true}b.disable(b.CULL_FACE);b.enable(b.BLEND);b.depthMask(true);b.bindBuffer(b.ARRAY_BUFFER,f);b.vertexAttribPointer(t.position,2,b.FLOAT,false,16,0);b.vertexAttribPointer(t.uv,2,b.FLOAT,false,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,
g);b.uniformMatrix4fv(s.projectionMatrix,false,e._projectionMatrixArray);b.activeTexture(b.TEXTURE0);b.uniform1i(s.map,0);for(var y,w=[],t=0;t<q;t++){y=d[t];if(y.visible&&y.opacity!==0)if(y.useScreenCoordinates)y.z=-y.position.z;else{y._modelViewMatrix.multiply(e.matrixWorldInverse,y.matrixWorld);y.z=-y._modelViewMatrix.elements[14]}}d.sort(a);for(t=0;t<q;t++){y=d[t];if(y.visible&&y.opacity!==0&&y.map&&y.map.image&&y.map.image.width){if(y.useScreenCoordinates){b.uniform1i(s.useScreenCoordinates,1);
b.uniform3f(s.screenPosition,(y.position.x-p)/p,(u-y.position.y)/u,Math.max(0,Math.min(1,y.position.z)))}else{b.uniform1i(s.useScreenCoordinates,0);b.uniform1i(s.affectedByDistance,y.affectedByDistance?1:0);b.uniformMatrix4fv(s.modelViewMatrix,false,y._modelViewMatrix.elements)}e=y.map.image.width/(y.scaleByViewport?n:1);w[0]=e*x*y.scale.x;w[1]=e*y.scale.y;b.uniform2f(s.uvScale,y.uvScale.x,y.uvScale.y);b.uniform2f(s.uvOffset,y.uvOffset.x,y.uvOffset.y);b.uniform2f(s.alignment,y.alignment.x,y.alignment.y);
b.uniform1f(s.opacity,y.opacity);b.uniform3f(s.color,y.color.r,y.color.g,y.color.b);b.uniform1f(s.rotation,y.rotation);b.uniform2fv(s.scale,w);if(y.mergeWith3D&&!r){b.enable(b.DEPTH_TEST);r=true}else if(!y.mergeWith3D&&r){b.disable(b.DEPTH_TEST);r=false}c.setBlending(y.blending,y.blendEquation,y.blendSrc,y.blendDst);c.setTexture(y.map,0);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0)}}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(true)}}};
THREE.DepthPassPlugin=function(){this.enabled=false;this.renderTarget=null;var a,b,c,d,e=new THREE.Frustum,f=new THREE.Matrix4;this.init=function(e){a=e.context;b=e;var e=THREE.ShaderLib.depthRGBA,f=THREE.UniformsUtils.clone(e.uniforms);c=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f});d=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f,morphTargets:true});c._shadowPass=true;d._shadowPass=true};this.render=
function(a,b){this.enabled&&this.update(a,b)};this.update=function(g,h){var i,k,j,l,m,p;a.clearColor(1,1,1,1);a.disable(a.BLEND);b.setDepthTest(true);b.autoUpdateScene&&g.updateMatrixWorld();if(!h._viewMatrixArray)h._viewMatrixArray=new Float32Array(16);if(!h._projectionMatrixArray)h._projectionMatrixArray=new Float32Array(16);h.matrixWorldInverse.getInverse(h.matrixWorld);h.matrixWorldInverse.flattenToArray(h._viewMatrixArray);h.projectionMatrix.flattenToArray(h._projectionMatrixArray);f.multiply(h.projectionMatrix,
h.matrixWorldInverse);e.setFromMatrix(f);b.setRenderTarget(this.renderTarget);b.clear();p=g.__webglObjects;i=0;for(k=p.length;i<k;i++){j=p[i];m=j.object;j.render=false;if(m.visible&&(!(m instanceof THREE.Mesh)||!m.frustumCulled||e.contains(m))){m._modelViewMatrix.multiply(h.matrixWorldInverse,m.matrixWorld);j.render=true}}i=0;for(k=p.length;i<k;i++){j=p[i];if(j.render){m=j.object;j=j.buffer;m.material&&b.setMaterialFaces(m.material);l=m.customDepthMaterial?m.customDepthMaterial:m.geometry.morphTargets.length?
d:c;j instanceof THREE.BufferGeometry?b.renderBufferDirect(h,g.__lights,null,l,j,m):b.renderBuffer(h,g.__lights,null,l,j,m)}}p=g.__webglObjectsImmediate;i=0;for(k=p.length;i<k;i++){j=p[i];m=j.object;if(m.visible&&m.castShadow){m._modelViewMatrix.multiply(h.matrixWorldInverse,m.matrixWorld);b.renderImmediateObject(h,g.__lights,null,c,m)}}i=b.getClearColor();k=b.getClearAlpha();a.clearColor(i.r,i.g,i.b,k);a.enable(a.BLEND)}};
THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},
lensFlare:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};
THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",
fragmentShader:"precision mediump float;\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\n}"}};
THREE.FirstPersonControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.target=new THREE.Vector3(0,0,0);this.domElement=b!==void 0?b:document;this.movementSpeed=1;this.lookSpeed=0.0050;this.lookVertical=true;this.autoForward=false;this.activeLook=true;this.heightSpeed=false;this.heightCoef=1;this.heightMin=0;this.heightMax=1;this.constrainVertical=false;this.verticalMin=0;this.verticalMax=Math.PI;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=
this.autoSpeedFactor=0;this.mouseDragOn=this.freeze=this.moveRight=this.moveLeft=this.moveBackward=this.moveForward=false;this.viewHalfY=this.viewHalfX=0;this.domElement!==document&&this.domElement.setAttribute("tabindex",-1);this.handleResize=function(){if(this.domElement===document){this.viewHalfX=window.innerWidth/2;this.viewHalfY=window.innerHeight/2}else{this.viewHalfX=this.domElement.offsetWidth/2;this.viewHalfY=this.domElement.offsetHeight/2}};this.onMouseDown=function(a){this.domElement!==
document&&this.domElement.focus();a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=true;break;case 2:this.moveBackward=true}this.mouseDragOn=true};this.onMouseUp=function(a){a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=false;break;case 2:this.moveBackward=false}this.mouseDragOn=false};this.onMouseMove=function(a){if(this.domElement===document){this.mouseX=a.pageX-this.viewHalfX;this.mouseY=a.pageY-
this.viewHalfY}else{this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX;this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY}};this.onKeyDown=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=true;break;case 37:case 65:this.moveLeft=true;break;case 40:case 83:this.moveBackward=true;break;case 39:case 68:this.moveRight=true;break;case 82:this.moveUp=true;break;case 70:this.moveDown=true;break;case 81:this.freeze=!this.freeze}};this.onKeyUp=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=
false;break;case 37:case 65:this.moveLeft=false;break;case 40:case 83:this.moveBackward=false;break;case 39:case 68:this.moveRight=false;break;case 82:this.moveUp=false;break;case 70:this.moveDown=false}};this.update=function(a){var b=0;if(!this.freeze){if(this.heightSpeed){b=THREE.Math.clamp(this.object.position.y,this.heightMin,this.heightMax)-this.heightMin;this.autoSpeedFactor=a*b*this.heightCoef}else this.autoSpeedFactor=0;b=a*this.movementSpeed;(this.moveForward||this.autoForward&&!this.moveBackward)&&
this.object.translateZ(-(b+this.autoSpeedFactor));this.moveBackward&&this.object.translateZ(b);this.moveLeft&&this.object.translateX(-b);this.moveRight&&this.object.translateX(b);this.moveUp&&this.object.translateY(b);this.moveDown&&this.object.translateY(-b);a=a*this.lookSpeed;this.activeLook||(a=0);this.lon=this.lon+this.mouseX*a;if(this.lookVertical)this.lat=this.lat-this.mouseY*a;this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;var b=
this.target,c=this.object.position;b.x=c.x+100*Math.sin(this.phi)*Math.cos(this.theta);b.y=c.y+100*Math.cos(this.phi);b.z=c.z+100*Math.sin(this.phi)*Math.sin(this.theta);b=1;this.constrainVertical&&(b=Math.PI/(this.verticalMax-this.verticalMin));this.lon=this.lon+this.mouseX*a;if(this.lookVertical)this.lat=this.lat-this.mouseY*a*b;this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;if(this.constrainVertical)this.phi=THREE.Math.mapLinear(this.phi,
0,Math.PI,this.verticalMin,this.verticalMax);b=this.target;c=this.object.position;b.x=c.x+100*Math.sin(this.phi)*Math.cos(this.theta);b.y=c.y+100*Math.cos(this.phi);b.z=c.z+100*Math.sin(this.phi)*Math.sin(this.theta);this.object.lookAt(b)}};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},false);this.domElement.addEventListener("mousemove",c(this,this.onMouseMove),false);this.domElement.addEventListener("mousedown",c(this,this.onMouseDown),false);this.domElement.addEventListener("mouseup",
c(this,this.onMouseUp),false);this.domElement.addEventListener("keydown",c(this,this.onKeyDown),false);this.domElement.addEventListener("keyup",c(this,this.onKeyUp),false);this.handleResize()};
THREE.FlyControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.domElement=b!==void 0?b:document;b&&this.domElement.setAttribute("tabindex",-1);this.movementSpeed=1;this.rollSpeed=0.0050;this.autoForward=this.dragToLook=false;this.object.useQuaternion=true;this.tmpQuaternion=new THREE.Quaternion;this.mouseStatus=0;this.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0};this.moveVector=
new THREE.Vector3(0,0,0);this.rotationVector=new THREE.Vector3(0,0,0);this.handleEvent=function(a){if(typeof this[a.type]=="function")this[a.type](a)};this.keydown=function(a){if(!a.altKey){switch(a.keyCode){case 16:this.movementSpeedMultiplier=0.1;break;case 87:this.moveState.forward=1;break;case 83:this.moveState.back=1;break;case 65:this.moveState.left=1;break;case 68:this.moveState.right=1;break;case 82:this.moveState.up=1;break;case 70:this.moveState.down=1;break;case 38:this.moveState.pitchUp=
1;break;case 40:this.moveState.pitchDown=1;break;case 37:this.moveState.yawLeft=1;break;case 39:this.moveState.yawRight=1;break;case 81:this.moveState.rollLeft=1;break;case 69:this.moveState.rollRight=1}this.updateMovementVector();this.updateRotationVector()}};this.keyup=function(a){switch(a.keyCode){case 16:this.movementSpeedMultiplier=1;break;case 87:this.moveState.forward=0;break;case 83:this.moveState.back=0;break;case 65:this.moveState.left=0;break;case 68:this.moveState.right=0;break;case 82:this.moveState.up=
0;break;case 70:this.moveState.down=0;break;case 38:this.moveState.pitchUp=0;break;case 40:this.moveState.pitchDown=0;break;case 37:this.moveState.yawLeft=0;break;case 39:this.moveState.yawRight=0;break;case 81:this.moveState.rollLeft=0;break;case 69:this.moveState.rollRight=0}this.updateMovementVector();this.updateRotationVector()};this.mousedown=function(a){this.domElement!==document&&this.domElement.focus();a.preventDefault();a.stopPropagation();if(this.dragToLook)this.mouseStatus++;else switch(a.button){case 0:this.object.moveForward=
true;break;case 2:this.object.moveBackward=true}};this.mousemove=function(a){if(!this.dragToLook||this.mouseStatus>0){var b=this.getContainerDimensions(),c=b.size[0]/2,g=b.size[1]/2;this.moveState.yawLeft=-(a.pageX-b.offset[0]-c)/c;this.moveState.pitchDown=(a.pageY-b.offset[1]-g)/g;this.updateRotationVector()}};this.mouseup=function(a){a.preventDefault();a.stopPropagation();if(this.dragToLook){this.mouseStatus--;this.moveState.yawLeft=this.moveState.pitchDown=0}else switch(a.button){case 0:this.moveForward=
false;break;case 2:this.moveBackward=false}this.updateRotationVector()};this.update=function(a){var b=a*this.movementSpeed,a=a*this.rollSpeed;this.object.translateX(this.moveVector.x*b);this.object.translateY(this.moveVector.y*b);this.object.translateZ(this.moveVector.z*b);this.tmpQuaternion.set(this.rotationVector.x*a,this.rotationVector.y*a,this.rotationVector.z*a,1).normalize();this.object.quaternion.multiplySelf(this.tmpQuaternion);this.object.matrix.setPosition(this.object.position);this.object.matrix.setRotationFromQuaternion(this.object.quaternion);
this.object.matrixWorldNeedsUpdate=true};this.updateMovementVector=function(){var a=this.moveState.forward||this.autoForward&&!this.moveState.back?1:0;this.moveVector.x=-this.moveState.left+this.moveState.right;this.moveVector.y=-this.moveState.down+this.moveState.up;this.moveVector.z=-a+this.moveState.back};this.updateRotationVector=function(){this.rotationVector.x=-this.moveState.pitchDown+this.moveState.pitchUp;this.rotationVector.y=-this.moveState.yawRight+this.moveState.yawLeft;this.rotationVector.z=
-this.moveState.rollRight+this.moveState.rollLeft};this.getContainerDimensions=function(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}};this.domElement.addEventListener("mousemove",c(this,this.mousemove),false);this.domElement.addEventListener("mousedown",c(this,this.mousedown),false);this.domElement.addEventListener("mouseup",
c(this,this.mouseup),false);this.domElement.addEventListener("keydown",c(this,this.keydown),false);this.domElement.addEventListener("keyup",c(this,this.keyup),false);this.updateMovementVector();this.updateRotationVector()};
THREE.OrbitControls=function(a,b){function c(){return 2*Math.PI/60/60*f.autoRotateSpeed}function d(a){a.preventDefault();if(x===s.ROTATE){i.set(a.clientX,a.clientY);k.sub(i,h);f.rotateLeft(2*Math.PI*k.x/g*f.userRotateSpeed);f.rotateUp(2*Math.PI*k.y/g*f.userRotateSpeed);h.copy(i)}else if(x===s.ZOOM){l.set(a.clientX,a.clientY);m.sub(l,j);m.y>0?f.zoomIn():f.zoomOut();j.copy(l)}}function e(){if(f.userRotate){document.removeEventListener("mousemove",d,false);document.removeEventListener("mouseup",e,false);
x=s.NONE}}THREE.EventTarget.call(this);this.object=a;this.domElement=b!==void 0?b:document;this.center=new THREE.Vector3;this.userZoom=true;this.userZoomSpeed=1;this.userRotate=true;this.userRotateSpeed=1;this.autoRotate=false;this.autoRotateSpeed=2;this.minPolarAngle=0;this.maxPolarAngle=Math.PI;this.minDistance=0;this.maxDistance=Infinity;var f=this,g=1800,h=new THREE.Vector2,i=new THREE.Vector2,k=new THREE.Vector2,j=new THREE.Vector2,l=new THREE.Vector2,m=new THREE.Vector2,p=0,n=0,q=1,t=new THREE.Vector3,
s={NONE:-1,ROTATE:0,ZOOM:1},x=s.NONE,u={type:"change"};this.rotateLeft=function(a){a===void 0&&(a=c());n=n-a};this.rotateRight=function(a){a===void 0&&(a=c());n=n+a};this.rotateUp=function(a){a===void 0&&(a=c());p=p-a};this.rotateDown=function(a){a===void 0&&(a=c());p=p+a};this.zoomIn=function(a){a===void 0&&(a=Math.pow(0.95,f.userZoomSpeed));q=q/a};this.zoomOut=function(a){a===void 0&&(a=Math.pow(0.95,f.userZoomSpeed));q=q*a};this.update=function(){var a=this.object.position,b=a.clone().subSelf(this.center),
d=Math.atan2(b.x,b.z),e=Math.atan2(Math.sqrt(b.x*b.x+b.z*b.z),b.y);this.autoRotate&&this.rotateLeft(c());var d=d+n,e=e+p,e=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,e)),e=Math.max(1E-6,Math.min(Math.PI-1E-6,e)),f=b.length()*q,f=Math.max(this.minDistance,Math.min(this.maxDistance,f));b.x=f*Math.sin(e)*Math.sin(d);b.y=f*Math.cos(e);b.z=f*Math.sin(e)*Math.cos(d);a.copy(this.center).addSelf(b);this.object.lookAt(this.center);p=n=0;q=1;if(t.distanceTo(this.object.position)>0){this.dispatchEvent(u);
t.copy(this.object.position)}};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},false);this.domElement.addEventListener("mousedown",function(a){if(f.userRotate){a.preventDefault();if(a.button===0||a.button===2){x=s.ROTATE;h.set(a.clientX,a.clientY)}else if(a.button===1){x=s.ZOOM;j.set(a.clientX,a.clientY)}document.addEventListener("mousemove",d,false);document.addEventListener("mouseup",e,false)}},false);this.domElement.addEventListener("mousewheel",function(a){f.userZoom&&
(a.wheelDelta>0?f.zoomOut():f.zoomIn())},false)};
THREE.PathControls=function(a,b){function c(a){return(a=a*2)<1?0.5*a*a:-0.5*(--a*(a-2)-1)}function d(a,b){return function(){b.apply(a,arguments)}}function e(a,b,c,d){var e={name:c,fps:0.6,length:d,hierarchy:[]},f,g=b.getControlPointsArray(),h=b.getLength(),t=g.length,s=0;f=t-1;b={parent:-1,keys:[]};b.keys[0]={time:0,pos:g[0],rot:[0,0,0,1],scl:[1,1,1]};b.keys[f]={time:d,pos:g[f],rot:[0,0,0,1],scl:[1,1,1]};for(f=1;f<t-1;f++){s=d*h.chunks[f]/h.total;b.keys[f]={time:s,pos:g[f]}}e.hierarchy[0]=b;THREE.AnimationHandler.add(e);
return new THREE.Animation(a,c,THREE.AnimationHandler.CATMULLROM_FORWARD,false)}function f(a,b){var c,d,e=new THREE.Geometry;for(c=0;c<a.points.length*b;c++){d=c/(a.points.length*b);d=a.getPoint(d);e.vertices[c]=new THREE.Vector3(d.x,d.y,d.z)}return e}this.object=a;this.domElement=b!==void 0?b:document;this.id="PathControls"+THREE.PathControlsIdCounter++;this.duration=1E4;this.waypoints=[];this.useConstantSpeed=true;this.resamplingCoef=50;this.debugPath=new THREE.Object3D;this.debugDummy=new THREE.Object3D;
this.animationParent=new THREE.Object3D;this.lookSpeed=0.0050;this.lookHorizontal=this.lookVertical=true;this.verticalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.horizontalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.target=new THREE.Object3D;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=0;var g=Math.PI*2,h=Math.PI/180;this.viewHalfY=this.viewHalfX=0;this.domElement!==document&&this.domElement.setAttribute("tabindex",-1);this.handleResize=function(){if(this.domElement===
document){this.viewHalfX=window.innerWidth/2;this.viewHalfY=window.innerHeight/2}else{this.viewHalfX=this.domElement.offsetWidth/2;this.viewHalfY=this.domElement.offsetHeight/2}};this.update=function(a){var b;if(this.lookHorizontal)this.lon=this.lon+this.mouseX*this.lookSpeed*a;if(this.lookVertical)this.lat=this.lat-this.mouseY*this.lookSpeed*a;this.lon=Math.max(0,Math.min(360,this.lon));this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*h;this.theta=this.lon*h;a=this.phi%g;this.phi=
a>=0?a:a+g;b=this.verticalAngleMap.srcRange;a=this.verticalAngleMap.dstRange;b=THREE.Math.mapLinear(this.phi,b[0],b[1],a[0],a[1]);var d=a[1]-a[0];this.phi=c((b-a[0])/d)*d+a[0];b=this.horizontalAngleMap.srcRange;a=this.horizontalAngleMap.dstRange;b=THREE.Math.mapLinear(this.theta,b[0],b[1],a[0],a[1]);d=a[1]-a[0];this.theta=c((b-a[0])/d)*d+a[0];a=this.target.position;a.x=100*Math.sin(this.phi)*Math.cos(this.theta);a.y=100*Math.cos(this.phi);a.z=100*Math.sin(this.phi)*Math.sin(this.theta);this.object.lookAt(this.target.position)};
this.onMouseMove=function(a){if(this.domElement===document){this.mouseX=a.pageX-this.viewHalfX;this.mouseY=a.pageY-this.viewHalfY}else{this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX;this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY}};this.init=function(){this.spline=new THREE.Spline;this.spline.initFromArray(this.waypoints);this.useConstantSpeed&&this.spline.reparametrizeByArcLength(this.resamplingCoef);if(this.createDebugDummy){var a=new THREE.MeshLambertMaterial({color:30719}),
b=new THREE.MeshLambertMaterial({color:65280}),c=new THREE.CubeGeometry(10,10,20),g=new THREE.CubeGeometry(2,2,10);this.animationParent=new THREE.Mesh(c,a);a=new THREE.Mesh(g,b);a.position.set(0,10,0);this.animation=e(this.animationParent,this.spline,this.id,this.duration);this.animationParent.add(this.object);this.animationParent.add(this.target);this.animationParent.add(a)}else{this.animation=e(this.animationParent,this.spline,this.id,this.duration);this.animationParent.add(this.target);this.animationParent.add(this.object)}if(this.createDebugPath){var a=
this.debugPath,b=this.spline,g=f(b,10),c=f(b,10),h=new THREE.LineBasicMaterial({color:16711680,linewidth:3}),g=new THREE.Line(g,h),c=new THREE.ParticleSystem(c,new THREE.ParticleBasicMaterial({color:16755200,size:3}));g.scale.set(1,1,1);a.add(g);c.scale.set(1,1,1);a.add(c);for(var g=new THREE.SphereGeometry(1,16,8),h=new THREE.MeshBasicMaterial({color:65280}),p=0;p<b.points.length;p++){c=new THREE.Mesh(g,h);c.position.copy(b.points[p]);a.add(c)}}this.domElement.addEventListener("mousemove",d(this,
this.onMouseMove),false)};this.handleResize()};THREE.PathControlsIdCounter=0;
var PointerLockControls=function(a){var b=this,c=new THREE.Object3D;c.add(a);var d=new THREE.Object3D;d.position.y=10;d.add(c);var e=false,f=false,g=false,h=false,i=false,k=false,j=new THREE.Vector3,l=Math.PI/2;document.addEventListener("mousemove",function(a){if(b.enabled!==false){var e=a.movementY||a.mozMovementY||a.webkitMovementY||0;d.rotation.y=d.rotation.y-(a.movementX||a.mozMovementX||a.webkitMovementX||0)*0.0020;c.rotation.x=c.rotation.x-e*0.0020;c.rotation.x=Math.max(-l,Math.min(l,c.rotation.x))}},
false);document.addEventListener("keydown",function(a){switch(a.keyCode){case 38:case 87:e=true;break;case 37:case 65:g=true;break;case 40:case 83:f=true;break;case 39:case 68:h=true;break;case 32:if(k===true)j.y=j.y+10;k=false}},false);document.addEventListener("keyup",function(a){switch(a.keyCode){case 38:case 87:e=false;break;case 37:case 65:g=false;break;case 40:case 83:f=false;break;case 39:case 68:h=false}},false);this.enabled=false;this.getObject=function(){return d};this.isOnObject=function(a){k=
i=a};this.update=function(a){if(b.enabled!==false){a=a*0.1;j.x=j.x+-j.x*0.08*a;j.z=j.z+-j.z*0.08*a;j.y=j.y-0.25*a;if(e)j.z=j.z-0.12*a;if(f)j.z=j.z+0.12*a;if(g)j.x=j.x-0.12*a;if(h)j.x=j.x+0.12*a;if(i===true)j.y=Math.max(0,j.y);d.translateX(j.x);d.translateY(j.y);d.translateZ(j.z);if(d.position.y<10){j.y=0;d.position.y=10;k=true}}}};
THREE.RollControls=function(a,b){this.object=a;this.domElement=b!==void 0?b:document;this.mouseLook=true;this.autoForward=false;this.rollSpeed=this.movementSpeed=this.lookSpeed=1;this.constrainVertical=[-0.9,0.9];this.object.matrixAutoUpdate=false;this.forward=new THREE.Vector3(0,0,1);this.roll=0;var c=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Matrix4,g=false,h=1,i=0,k=0,j=0,l=0,m=0,p=0,n=0;this.handleResize=function(){p=window.innerWidth/2;n=window.innerHeight/2};this.update=
function(a){if(this.mouseLook){var b=a*this.lookSpeed;this.rotateHorizontally(b*l);this.rotateVertically(b*m)}b=a*this.movementSpeed;this.object.translateZ(-b*(i>0||this.autoForward&&!(i<0)?1:i));this.object.translateX(b*k);this.object.translateY(b*j);if(g)this.roll=this.roll+this.rollSpeed*a*h;if(this.forward.y>this.constrainVertical[1]){this.forward.y=this.constrainVertical[1];this.forward.normalize()}else if(this.forward.y<this.constrainVertical[0]){this.forward.y=this.constrainVertical[0];this.forward.normalize()}e.copy(this.forward);
d.set(0,1,0);c.cross(d,e).normalize();d.cross(e,c).normalize();this.object.matrix.elements[0]=c.x;this.object.matrix.elements[4]=d.x;this.object.matrix.elements[8]=e.x;this.object.matrix.elements[1]=c.y;this.object.matrix.elements[5]=d.y;this.object.matrix.elements[9]=e.y;this.object.matrix.elements[2]=c.z;this.object.matrix.elements[6]=d.z;this.object.matrix.elements[10]=e.z;f.identity();f.elements[0]=Math.cos(this.roll);f.elements[4]=-Math.sin(this.roll);f.elements[1]=Math.sin(this.roll);f.elements[5]=
Math.cos(this.roll);this.object.matrix.multiplySelf(f);this.object.matrixWorldNeedsUpdate=true;this.object.matrix.elements[12]=this.object.position.x;this.object.matrix.elements[13]=this.object.position.y;this.object.matrix.elements[14]=this.object.position.z};this.translateX=function(a){this.object.position.x=this.object.position.x+this.object.matrix.elements[0]*a;this.object.position.y=this.object.position.y+this.object.matrix.elements[1]*a;this.object.position.z=this.object.position.z+this.object.matrix.elements[2]*
a};this.translateY=function(a){this.object.position.x=this.object.position.x+this.object.matrix.elements[4]*a;this.object.position.y=this.object.position.y+this.object.matrix.elements[5]*a;this.object.position.z=this.object.position.z+this.object.matrix.elements[6]*a};this.translateZ=function(a){this.object.position.x=this.object.position.x-this.object.matrix.elements[8]*a;this.object.position.y=this.object.position.y-this.object.matrix.elements[9]*a;this.object.position.z=this.object.position.z-
this.object.matrix.elements[10]*a};this.rotateHorizontally=function(a){c.set(this.object.matrix.elements[0],this.object.matrix.elements[1],this.object.matrix.elements[2]);c.multiplyScalar(a);this.forward.subSelf(c);this.forward.normalize()};this.rotateVertically=function(a){d.set(this.object.matrix.elements[4],this.object.matrix.elements[5],this.object.matrix.elements[6]);d.multiplyScalar(a);this.forward.addSelf(d);this.forward.normalize()};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},
false);this.domElement.addEventListener("mousemove",function(a){l=(a.clientX-p)/window.innerWidth;m=(a.clientY-n)/window.innerHeight},false);this.domElement.addEventListener("mousedown",function(a){a.preventDefault();a.stopPropagation();switch(a.button){case 0:i=1;break;case 2:i=-1}},false);this.domElement.addEventListener("mouseup",function(a){a.preventDefault();a.stopPropagation();switch(a.button){case 0:i=0;break;case 2:i=0}},false);this.domElement.addEventListener("keydown",function(a){switch(a.keyCode){case 38:case 87:i=
1;break;case 37:case 65:k=-1;break;case 40:case 83:i=-1;break;case 39:case 68:k=1;break;case 81:g=true;h=1;break;case 69:g=true;h=-1;break;case 82:j=1;break;case 70:j=-1}},false);this.domElement.addEventListener("keyup",function(a){switch(a.keyCode){case 38:case 87:i=0;break;case 37:case 65:k=0;break;case 40:case 83:i=0;break;case 39:case 68:k=0;break;case 81:g=false;break;case 69:g=false;break;case 82:j=0;break;case 70:j=0}},false);this.handleResize()};
THREE.TrackballControls=function(a,b){function c(a){if(g.enabled){window.removeEventListener("keydown",c);j=k;if(k===h.NONE)if(a.keyCode===g.keys[h.ROTATE]&&!g.noRotate)k=h.ROTATE;else if(a.keyCode===g.keys[h.ZOOM]&&!g.noZoom)k=h.ZOOM;else if(a.keyCode===g.keys[h.PAN]&&!g.noPan)k=h.PAN}}function d(a){g.enabled&&(k===h.ROTATE&&!g.noRotate?p=g.getMouseProjectionOnBall(a.clientX,a.clientY):k===h.ZOOM&&!g.noZoom?q=g.getMouseOnScreen(a.clientX,a.clientY):k===h.PAN&&!g.noPan&&(s=g.getMouseOnScreen(a.clientX,
a.clientY)))}function e(a){if(g.enabled){a.preventDefault();a.stopPropagation();k=h.NONE;document.removeEventListener("mousemove",d);document.removeEventListener("mouseup",e)}}function f(a){if(g.enabled){a.preventDefault();a.stopPropagation();var b=0;a.wheelDelta?b=a.wheelDelta/40:a.detail&&(b=-a.detail/3);n.y=n.y+1/b*0.05}}THREE.EventTarget.call(this);var g=this,h={NONE:-1,ROTATE:0,ZOOM:1,PAN:2};this.object=a;this.domElement=b!==void 0?b:document;this.enabled=true;this.screen={width:0,height:0,offsetLeft:0,
offsetTop:0};this.radius=(this.screen.width+this.screen.height)/4;this.rotateSpeed=1;this.zoomSpeed=1.2;this.panSpeed=0.3;this.staticMoving=this.noPan=this.noZoom=this.noRotate=false;this.dynamicDampingFactor=0.2;this.minDistance=0;this.maxDistance=Infinity;this.keys=[65,83,68];this.target=new THREE.Vector3;var i=new THREE.Vector3,k=h.NONE,j=h.NONE,l=new THREE.Vector3,m=new THREE.Vector3,p=new THREE.Vector3,n=new THREE.Vector2,q=new THREE.Vector2,t=new THREE.Vector2,s=new THREE.Vector2,x={type:"change"};
this.handleResize=function(){this.screen.width=window.innerWidth;this.screen.height=window.innerHeight;this.screen.offsetLeft=0;this.screen.offsetTop=0;this.radius=(this.screen.width+this.screen.height)/4};this.handleEvent=function(a){if(typeof this[a.type]=="function")this[a.type](a)};this.getMouseOnScreen=function(a,b){return new THREE.Vector2((a-g.screen.offsetLeft)/g.radius*0.5,(b-g.screen.offsetTop)/g.radius*0.5)};this.getMouseProjectionOnBall=function(a,b){var c=new THREE.Vector3((a-g.screen.width*
0.5-g.screen.offsetLeft)/g.radius,(g.screen.height*0.5+g.screen.offsetTop-b)/g.radius,0),d=c.length();d>1?c.normalize():c.z=Math.sqrt(1-d*d);l.copy(g.object.position).subSelf(g.target);d=g.object.up.clone().setLength(c.y);d.addSelf(g.object.up.clone().crossSelf(l).setLength(c.x));d.addSelf(l.setLength(c.z));return d};this.rotateCamera=function(){var a=Math.acos(m.dot(p)/m.length()/p.length());if(a){var b=(new THREE.Vector3).cross(m,p).normalize(),c=new THREE.Quaternion,a=a*g.rotateSpeed;c.setFromAxisAngle(b,
-a);c.multiplyVector3(l);c.multiplyVector3(g.object.up);c.multiplyVector3(p);if(g.staticMoving)m.copy(p);else{c.setFromAxisAngle(b,a*(g.dynamicDampingFactor-1));c.multiplyVector3(m)}}};this.zoomCamera=function(){var a=1+(q.y-n.y)*g.zoomSpeed;if(a!==1&&a>0){l.multiplyScalar(a);g.staticMoving?n.copy(q):n.y=n.y+(q.y-n.y)*this.dynamicDampingFactor}};this.panCamera=function(){var a=s.clone().subSelf(t);if(a.lengthSq()){a.multiplyScalar(l.length()*g.panSpeed);var b=l.clone().crossSelf(g.object.up).setLength(a.x);
b.addSelf(g.object.up.clone().setLength(a.y));g.object.position.addSelf(b);g.target.addSelf(b);g.staticMoving?t=s:t.addSelf(a.sub(s,t).multiplyScalar(g.dynamicDampingFactor))}};this.checkDistances=function(){if(!g.noZoom||!g.noPan){g.object.position.lengthSq()>g.maxDistance*g.maxDistance&&g.object.position.setLength(g.maxDistance);l.lengthSq()<g.minDistance*g.minDistance&&g.object.position.add(g.target,l.setLength(g.minDistance))}};this.update=function(){l.copy(g.object.position).subSelf(g.target);
g.noRotate||g.rotateCamera();g.noZoom||g.zoomCamera();g.noPan||g.panCamera();g.object.position.add(g.target,l);g.checkDistances();g.object.lookAt(g.target);if(i.distanceToSquared(g.object.position)>0){g.dispatchEvent(x);i.copy(g.object.position)}};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},false);this.domElement.addEventListener("mousedown",function(a){if(g.enabled){a.preventDefault();a.stopPropagation();if(k===h.NONE)k=a.button;k===h.ROTATE&&!g.noRotate?m=p=g.getMouseProjectionOnBall(a.clientX,
a.clientY):k===h.ZOOM&&!g.noZoom?n=q=g.getMouseOnScreen(a.clientX,a.clientY):k===h.PAN&&!g.noPan&&(t=s=g.getMouseOnScreen(a.clientX,a.clientY));document.addEventListener("mousemove",d,false);document.addEventListener("mouseup",e,false)}},false);this.domElement.addEventListener("DOMMouseScroll",f,false);this.domElement.addEventListener("mousewheel",f,false);window.addEventListener("keydown",c,false);window.addEventListener("keyup",function(){if(g.enabled){k=j;window.addEventListener("keydown",c,false)}},
false);this.handleResize()};
THREE.AnaglyphEffect=function(a,b,c){var d=new THREE.Matrix4,e=new THREE.Matrix4,f,g,h,i,k=new THREE.PerspectiveCamera;k.matrixAutoUpdate=false;var j=new THREE.PerspectiveCamera;j.matrixAutoUpdate=false;var l=new THREE.OrthographicCamera(-1,1,1,-1,0,1),m=new THREE.Scene,p={minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat};b===void 0&&(b=512);c===void 0&&(c=512);var n=new THREE.WebGLRenderTarget(b,c,p),q=new THREE.WebGLRenderTarget(b,c,p),t=new THREE.ShaderMaterial({uniforms:{mapLeft:{type:"t",
value:n},mapRight:{type:"t",value:q}},vertexShader:"varying vec2 vUv;\nvoid main() {\n\tvUv = vec2( uv.x, uv.y );\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D mapLeft;\nuniform sampler2D mapRight;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 colorL, colorR;\n\tvec2 uv = vUv;\n\tcolorL = texture2D( mapLeft, uv );\n\tcolorR = texture2D( mapRight, uv );\n\tgl_FragColor = vec4( colorL.g * 0.7 + colorL.b * 0.3, colorR.g, colorR.b, colorL.a + colorR.a ) * 1.1;\n}"}),
b=new THREE.Mesh(new THREE.PlaneGeometry(2,2),t);m.add(b);this.setSize=function(b,c){n=new THREE.WebGLRenderTarget(b,c,p);q=new THREE.WebGLRenderTarget(b,c,p);t.uniforms.mapLeft.value=n;t.uniforms.mapRight.value=q;a.setSize(b,c)};this.render=function(b,c){b.updateMatrixWorld();c.parent===void 0&&c.updateMatrixWorld();if(f!==c.aspect||g!==c.near||h!==c.far||i!==c.fov){f=c.aspect;g=c.near;h=c.far;i=c.fov;var p=c.projectionMatrix.clone(),r=125/30*0.5,t=r*g/125,w=g*Math.tan(i*Math.PI/360),v;d.elements[12]=
r;e.elements[12]=-r;r=-w*f+t;v=w*f+t;p.elements[0]=2*g/(v-r);p.elements[8]=(v+r)/(v-r);k.projectionMatrix.copy(p);r=-w*f-t;v=w*f-t;p.elements[0]=2*g/(v-r);p.elements[8]=(v+r)/(v-r);j.projectionMatrix.copy(p)}k.matrixWorld.copy(c.matrixWorld).multiplySelf(e);k.position.copy(c.position);k.near=c.near;k.far=c.far;a.render(b,k,n,true);j.matrixWorld.copy(c.matrixWorld).multiplySelf(d);j.position.copy(c.position);j.near=c.near;j.far=c.far;a.render(b,j,q,true);a.render(m,l)}};
THREE.AsciiEffect=function(a,b,c){b=b===void 0?" .:-=+*#%@":b;c||(c={});var d=!c.resolution?0.15:c.resolution,e=!c.scale?1:c.scale,f=!c.color?false:c.color,g=!c.alpha?false:c.alpha,h=!c.block?false:c.block,i=!c.invert?false:c.invert,k,j,c=document.createElement("div");c.style.cursor="default";var l=document.createElement("table");c.appendChild(l);var m,p,n;this.setSize=function(b,c){k=b;j=c;a.setSize(b,c);m=Math.round(k*y);p=Math.round(j*y);x.width=m;x.height=p;n=a.domElement;if(n.style.backgroundColor){l.rows[0].cells[0].style.backgroundColor=
n.style.backgroundColor;l.rows[0].cells[0].style.color=n.style.color}l.cellSpacing=0;l.cellPadding=0;var d=l.style;d.display="inline";d.width=Math.round(m/y*e)+"px";d.height=Math.round(p/y*e)+"px";d.whiteSpace="pre";d.margin="0px";d.padding="0px";d.letterSpacing=A+"px";d.fontFamily=t;d.fontSize=w+"px";d.lineHeight=v+"px";d.textAlign="left";d.textDecoration="none"};this.render=function(b,c){a.render(b,c);u.clearRect(0,0,m,p);u.drawImage(s,0,0,m,p);for(var d=u.getImageData(0,0,m,p).data,e="",j=0;j<
p;j=j+2){for(var k=0;k<m;k++){var n=(j*m+k)*4,q=d[n],t=d[n+1],v=d[n+2],n=d[n+3],w;w=(0.3*q+0.59*t+0.11*v)/255;n==0&&(w=1);w=Math.floor((1-w)*(r.length-1));i&&(w=r.length-w-1);w=r[w];if(w===void 0||w==" ")w="&nbsp;";e=f?e+("<span style='color:rgb("+q+","+t+","+v+");"+(h?"background-color:rgb("+q+","+t+","+v+");":"")+(g?"opacity:"+n/255+";":"")+"'>"+w+"</span>"):e+w}e=e+"<br/>"}l.innerHTML="<tr><td>"+e+"</td></tr>"};this.domElement=c;var c=[" ",".",",",":",";","i","1","t","f","L","C","G","0","8","@"],
q=[" ","C","G","O","0","8","@"],t="courier new, monospace",s=a.domElement,x=document.createElement("canvas");if(x.getContext){var u=x.getContext("2d");if(u.getImageData){var r=f?q:c;b&&(r=b);var y=0.5;switch("low"){case "low":y=0.25;break;case "medium":y=0.5;break;case "high":y=1}d&&(y=d);var w=2/y*e,v=2/y*e,A=0;switch(e){case 1:A=-1;break;case 2:case 3:A=-2.1;break;case 4:A=-3.1;break;case 5:A=-4.15}}}};
THREE.CrosseyedEffect=function(a){this.separation=10;var b,c,d=new THREE.PerspectiveCamera;d.target=new THREE.Vector3;var e=new THREE.PerspectiveCamera;e.target=new THREE.Vector3;a.autoClear=false;this.setSize=function(d,e){b=d/2;c=e;a.setSize(d,e)};this.render=function(f,g){d.fov=g.fov;d.aspect=0.5*g.aspect;d.near=g.near;d.far=g.far;d.updateProjectionMatrix();d.position.copy(g.position);d.target.copy(g.target);d.translateX(this.separation);d.lookAt(d.target);e.near=g.near;e.far=g.far;e.projectionMatrix=
d.projectionMatrix;e.position.copy(g.position);e.target.copy(g.target);e.translateX(-this.separation);e.lookAt(e.target);a.clear();a.setViewport(0,0,b,c);a.render(f,d);a.setViewport(b,0,b,c);a.render(f,e,false)}};
THREE.ParallaxBarrierEffect=function(a){var b=new THREE.Matrix4,c=new THREE.Matrix4,d,e,f,g,h=new THREE.PerspectiveCamera;h.matrixAutoUpdate=false;var i=new THREE.PerspectiveCamera;i.matrixAutoUpdate=false;var k=new THREE.Scene,j=new THREE.PerspectiveCamera(53,1,1,1E4);j.position.z=2;k.add(j);var l={minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat},m=new THREE.WebGLRenderTarget(512,512,l),p=new THREE.WebGLRenderTarget(512,512,l),n=new THREE.ShaderMaterial({uniforms:{mapLeft:{type:"t",
value:m},mapRight:{type:"t",value:p}},vertexShader:"varying vec2 vUv;\nvoid main() {\n\tvUv = vec2( uv.x, uv.y );\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D mapLeft;\nuniform sampler2D mapRight;\nvarying vec2 vUv;\nvoid main() {\n\tvec2 uv = vUv;\n\tif ( ( mod( gl_FragCoord.x, 2.0 ) ) > 1.00 ) {\n\t\tgl_FragColor = texture2D( mapLeft, uv );\n\t} else {\n\t\tgl_FragColor = texture2D( mapRight, uv );\n\t}\n}"}),q=new THREE.Mesh(new THREE.PlaneGeometry(2,
2),n);k.add(q);this.setSize=function(b,c){m=new THREE.WebGLRenderTarget(b,c,l);p=new THREE.WebGLRenderTarget(b,c,l);n.uniforms.mapLeft.value=m;n.uniforms.mapRight.value=p;a.setSize(b,c)};this.render=function(l,n){l.updateMatrixWorld();n.parent===void 0&&n.updateMatrixWorld();if(d!==n.aspect||e!==n.near||f!==n.far||g!==n.fov){d=n.aspect;e=n.near;f=n.far;g=n.fov;var q=n.projectionMatrix.clone(),u=125/30*0.5,r=u*e/125,y=e*Math.tan(g*Math.PI/360),w;b.elements[12]=u;c.elements[12]=-u;u=-y*d+r;w=y*d+r;
q.elements[0]=2*e/(w-u);q.elements[8]=(w+u)/(w-u);h.projectionMatrix.copy(q);u=-y*d-r;w=y*d-r;q.elements[0]=2*e/(w-u);q.elements[8]=(w+u)/(w-u);i.projectionMatrix.copy(q)}h.matrixWorld.copy(n.matrixWorld).multiplySelf(c);h.position.copy(n.position);h.near=n.near;h.far=n.far;a.render(l,h,m,true);i.matrixWorld.copy(n.matrixWorld).multiplySelf(b);i.position.copy(n.position);i.near=n.near;i.far=n.far;a.render(l,i,p,true);k.updateMatrixWorld();a.render(k,j)}};THREE.GeometryExporter=function(){};
THREE.GeometryExporter.prototype={constructor:THREE.GeometryExporter,parse:function(a){function b(a,b,c){var d=a.toString()+b.toString()+c.toString();if(g[d]!==void 0)return g[d];g[d]=f.length/3;f.push(a,b,c);return g[d]}for(var c=[],d=0;d<a.vertices.length;d++){var e=a.vertices[d];c.push(e.x,e.y,e.z)}for(var e=[],f=[],g={},d=0;d<a.faces.length;d++){var h=a.faces[d],i=h instanceof THREE.Face3,k=h.materialIndex!==void 0,j=h.normal.length()>0,l=h.vertexNormals[0]!==void 0,m=0,m=!i?m|1:m&-2,m=j?m|16:
m&-17,m=l?m|32:m&-33;e.push(m);i?e.push(h.a,h.b,h.c):e.push(h.a,h.b,h.c,h.d);k&&e.push(h.materialIndex);if(j){k=h.normal;e.push(b(k.x,k.y,k.z))}if(l){h=h.vertexNormals;i?e.push(b(h[0].x,h[0].y,h[0].z),b(h[1].x,h[1].y,h[1].z),b(h[2].x,h[2].y,h[2].z)):e.push(b(h[0].x,h[0].y,h[0].z),b(h[1].x,h[1].y,h[1].z),b(h[2].x,h[2].y,h[2].z),b(h[3].x,h[3].y,h[3].z))}}return['{\n\t"metadata": {\n\t\t"formatVersion" : 3\n\t},','\t"vertices": '+JSON.stringify(c)+",",'\t"normals": '+JSON.stringify(f)+",",'\t"uvs": '+
JSON.stringify([[]])+",",'\t"faces": '+JSON.stringify(e),"}"].join("\n")}};
THREE.ColladaLoader=function(){function a(a,d,e){R=a;d=d||Na;if(e!==void 0){a=e.split("/");a.pop();Ga=(a.length<1?".":a.join("/"))+"/"}if((a=R.evaluate("//dae:asset",R,E,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())&&a.childNodes)for(e=0;e<a.childNodes.length;e++){var i=a.childNodes[e];switch(i.nodeName){case "unit":(i=i.getAttribute("meter"))&&parseFloat(i);break;case "up_axis":eb=i.textContent.charAt(0)}}if(!ka.convertUpAxis||eb===ka.upAxis)Ta=null;else switch(eb){case "X":Ta=ka.upAxis===
"Y"?"XtoY":"XtoZ";break;case "Y":Ta=ka.upAxis==="X"?"YtoX":"YtoZ";break;case "Z":Ta=ka.upAxis==="X"?"ZtoX":"ZtoY"}ta=b("//dae:library_images/dae:image",g,"image");bb=b("//dae:library_materials/dae:material",F,"material");Ya=b("//dae:library_effects/dae:effect",J,"effect");Pa=b("//dae:library_geometries/dae:geometry",t,"geometry");jb=b(".//dae:library_cameras/dae:camera",ca,"camera");Ea=b("//dae:library_controllers/dae:controller",h,"controller");pa=b("//dae:library_animations/dae:animation",K,"animation");
ib=b(".//dae:library_visual_scenes/dae:visual_scene",j,"visual_scene");Ca=[];qa=[];if(a=R.evaluate(".//dae:scene/dae:instance_visual_scene",R,E,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext()){a=a.getAttribute("url").replace(/^#/,"");va=ib[a.length>0?a:"visual_scene0"]}else va=null;aa=new THREE.Object3D;for(a=0;a<va.nodes.length;a++)aa.add(f(va.nodes[a]));mb=[];c(aa);a={scene:aa,morphs:Ca,skins:qa,animations:mb,dae:{images:ta,materials:bb,cameras:jb,effects:Ya,geometries:Pa,controllers:Ea,
animations:pa,visualScenes:ib,scene:va}};d&&d(a);return a}function b(a,b,c){for(var a=R.evaluate(a,R,E,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null),d={},e=a.iterateNext(),f=0;e;){e=(new b).parse(e);if(!e.id||e.id.length==0)e.id=c+f++;d[e.id]=e;e=a.iterateNext()}return d}function c(a){var b=va.getChildById(a.name,true),d=null;if(b&&b.keys){d={fps:60,hierarchy:[{node:b,keys:b.keys,sids:b.sids}],node:a,name:"animation_"+a.name,length:0};mb.push(d);for(var e=0,f=b.keys.length;e<f;e++)d.length=Math.max(d.length,
b.keys[e].time)}else d={hierarchy:[{keys:[],sids:[]}]};e=0;for(f=a.children.length;e<f;e++)for(var b=0,g=c(a.children[e]).hierarchy.length;b<g;b++)d.hierarchy.push({keys:[],sids:[]});return d}function d(a,b,c,e){a.world=a.world||new THREE.Matrix4;a.world.copy(a.matrix);if(a.channels&&a.channels.length){var f=a.channels[0].sampler.output[c];f instanceof THREE.Matrix4&&a.world.copy(f)}e&&a.world.multiply(e,a.world);b.push(a);for(e=0;e<a.nodes.length;e++)d(a.nodes[e],b,c,a.world)}function e(a,b,c){var e,
f=Ea[b.url];if(!f||!f.skin)console.log("ColladaLoader: Could not find skin controller.");else if(!b.skeleton||!b.skeleton.length)console.log("ColladaLoader: Could not find the skeleton for the skin. ");else{var c=1E6,g=-c,h=0;for(e in pa)for(var i=pa[e],j=0;j<i.sampler.length;j++){var k=i.sampler[j];k.create();c=Math.min(c,k.startTime);g=Math.max(g,k.endTime);h=Math.max(h,k.input.length)}e=h;for(var b=va.getChildById(b.skeleton[0],true)||va.getChildBySid(b.skeleton[0],true),l,m,g=new THREE.Vector3,
n,j=0;j<a.vertices.length;j++)f.skin.bindShapeMatrix.multiplyVector3(a.vertices[j]);for(c=0;c<e;c++){h=[];i=[];for(j=0;j<a.vertices.length;j++)i.push(new THREE.Vector3);d(b,h,c);j=h;k=f.skin;for(m=0;m<j.length;m++){l=j[m];n=-1;if(l.type=="JOINT"){for(var p=0;p<k.joints.length;p++)if(l.sid==k.joints[p]){n=p;break}if(n>=0){p=k.invBindMatrices[n];l.invBindMatrix=p;l.skinningMatrix=new THREE.Matrix4;l.skinningMatrix.multiply(l.world,p);l.weights=[];for(p=0;p<k.weights.length;p++)for(var q=0;q<k.weights[p].length;q++){var r=
k.weights[p][q];r.joint==n&&l.weights.push(r)}}else throw"ColladaLoader: Could not find joint '"+l.sid+"'.";}}for(j=0;j<h.length;j++)if(h[j].type=="JOINT")for(k=0;k<h[j].weights.length;k++){l=h[j].weights[k];m=l.index;l=l.weight;n=a.vertices[m];m=i[m];g.x=n.x;g.y=n.y;g.z=n.z;h[j].skinningMatrix.multiplyVector3(g);m.x=m.x+g.x*l;m.y=m.y+g.y*l;m.z=m.z+g.z*l}a.morphTargets.push({name:"target_"+c,vertices:i})}}}function f(a){var b=new THREE.Object3D,c,d,g,h;for(g=0;g<a.controllers.length;g++){var i=Ea[a.controllers[g].url];
switch(i.type){case "skin":if(Pa[i.skin.source]){var j=new q;j.url=i.skin.source;j.instance_material=a.controllers[g].instance_material;a.geometries.push(j);c=a.controllers[g]}else if(Ea[i.skin.source]){d=i=Ea[i.skin.source];if(i.morph&&Pa[i.morph.source]){j=new q;j.url=i.morph.source;j.instance_material=a.controllers[g].instance_material;a.geometries.push(j)}}break;case "morph":if(Pa[i.morph.source]){j=new q;j.url=i.morph.source;j.instance_material=a.controllers[g].instance_material;a.geometries.push(j);
d=a.controllers[g]}console.log("ColladaLoader: Morph-controller partially supported.")}}j={};for(g=0;g<a.geometries.length;g++){h=a.geometries[g];var i=h.instance_material,k=Pa[h.url],l={},m=[],n=0,r;if(k&&k.mesh&&k.mesh.primitives){if(b.name.length==0)b.name=k.id;if(i)for(h=0;h<i.length;h++){r=i[h];var s=bb[r.target],t=Ya[s.instance_effect.url].shader.material;if(k.doubleSided){if(!(t in j)){var u=t.clone();u.side=THREE.DoubleSide;j[t]=u}t=j[t]}t.opacity=!t.opacity?1:t.opacity;l[r.symbol]=n;m.push(t);
r=t;r.name=s.name==null||s.name===""?s.id:s.name;n++}i=r||new THREE.MeshLambertMaterial({color:14540253,shading:THREE.FlatShading,side:k.doubleSided?THREE.DoubleSide:THREE.FrontSide});k=k.mesh.geometry3js;if(n>1){i=new THREE.MeshFaceMaterial;k.materials=m;for(h=0;h<k.faces.length;h++){m=k.faces[h];m.materialIndex=l[m.daeMaterial]}}if(c!==void 0){e(k,c);i.morphTargets=true;i=new THREE.SkinnedMesh(k,i,false);i.skeleton=c.skeleton;i.skinController=Ea[c.url];i.skinInstanceController=c;i.name="skin_"+
qa.length;qa.push(i)}else if(d!==void 0){h=k;l=d instanceof p?Ea[d.url]:d;if(!l||!l.morph)console.log("could not find morph controller!");else{l=l.morph;for(m=0;m<l.targets.length;m++){n=Pa[l.targets[m]];if(n.mesh&&n.mesh.primitives&&n.mesh.primitives.length){n=n.mesh.primitives[0].geometry;n.vertices.length===h.vertices.length&&h.morphTargets.push({name:"target_1",vertices:n.vertices})}}h.morphTargets.push({name:"target_Z",vertices:h.vertices})}i.morphTargets=true;i=new THREE.Mesh(k,i);i.name="morph_"+
Ca.length;Ca.push(i)}else i=new THREE.Mesh(k,i);a.geometries.length>1?b.add(i):b=i}}for(g=0;g<a.cameras.length;g++){b=jb[a.cameras[g].url];b=new THREE.PerspectiveCamera(b.fov,b.aspect_ratio,b.znear,b.zfar)}b.name=a.id||"";b.matrix=a.matrix;g=a.matrix.decompose();b.position=g[0];b.quaternion=g[1];b.useQuaternion=true;b.scale=g[2];if(ka.centerGeometry&&b.geometry){g=THREE.GeometryUtils.center(b.geometry);b.quaternion.multiplyVector3(g.multiplySelf(b.scale));b.position.subSelf(g)}for(g=0;g<a.nodes.length;g++)b.add(f(a.nodes[g],
a));return b}function g(){this.init_from=this.id=""}function h(){this.type=this.name=this.id="";this.morph=this.skin=null}function i(){this.weights=this.targets=this.source=this.method=null}function k(){this.source="";this.bindShapeMatrix=null;this.invBindMatrices=[];this.joints=[];this.weights=[]}function j(){this.name=this.id="";this.nodes=[];this.scene=new THREE.Object3D}function l(){this.sid=this.name=this.id="";this.nodes=[];this.controllers=[];this.transforms=[];this.geometries=[];this.channels=
[];this.matrix=new THREE.Matrix4}function m(){this.type=this.sid="";this.data=[];this.obj=null}function p(){this.url="";this.skeleton=[];this.instance_material=[]}function n(){this.target=this.symbol=""}function q(){this.url="";this.instance_material=[]}function t(){this.id="";this.mesh=null}function s(a){this.geometry=a.id;this.primitives=[];this.geometry3js=this.vertices=null}function x(){this.material="";this.count=0;this.inputs=[];this.vcount=null;this.p=[];this.geometry=new THREE.Geometry}function u(){x.call(this);
this.vcount=[]}function r(){x.call(this);this.vcount=3}function y(){this.source="";this.stride=this.count=0;this.params=[]}function w(){this.input={}}function v(){this.semantic="";this.offset=0;this.source="";this.set=0}function A(a){this.id=a;this.type=null}function F(){this.name=this.id="";this.instance_effect=null}function C(){this.color=new THREE.Color(0);this.color.setRGB(Math.random(),Math.random(),Math.random());this.color.a=1;this.texOpts=this.texcoord=this.texture=null}function G(a,b){this.type=
a;this.effect=b;this.material=null}function H(a){this.effect=a;this.format=this.init_from=null}function D(a){this.effect=a;this.mipfilter=this.magfilter=this.minfilter=this.wrap_t=this.wrap_s=this.source=null}function J(){this.name=this.id="";this.sampler=this.surface=this.shader=null}function L(){this.url=""}function K(){this.name=this.id="";this.source={};this.sampler=[];this.channel=[]}function M(a){this.animation=a;this.target=this.source="";this.member=this.arrIndices=this.arrSyntax=this.dotSyntax=
this.sid=this.fullSid=null}function N(a){this.id="";this.animation=a;this.inputs=[];this.endTime=this.startTime=this.interpolation=this.strideOut=this.output=this.input=null;this.duration=0}function S(a){this.targets=[];this.time=a}function ca(){this.technique=this.name=this.id=""}function ha(){this.url=""}function E(a){return a=="dae"?"http://www.collada.org/2005/11/COLLADASchema":null}function O(a){for(var a=ja(a),b=[],c=0,d=a.length;c<d;c++)b.push(parseFloat(a[c]));return b}function Q(a){for(var a=
ja(a),b=[],c=0,d=a.length;c<d;c++)b.push(parseInt(a[c],10));return b}function ja(a){return a.length>0?a.replace(/^\s+/,"").replace(/\s+$/,"").split(/\s+/):[]}function sa(a,b,c){return a.hasAttribute(b)?parseInt(a.getAttribute(b),10):c}function P(a,b){a.doubleSided=false;var c=R.evaluate(".//dae:extra//dae:double_sided",b,E,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);if(c)if((c=c.iterateNext())&&parseInt(c.textContent,10)===1)a.doubleSided=true}function da(a,b){if(ka.convertUpAxis&&eb!==ka.upAxis)switch(Ta){case "XtoY":var c=
a[0];a[0]=b*a[1];a[1]=c;break;case "XtoZ":c=a[2];a[2]=a[1];a[1]=a[0];a[0]=c;break;case "YtoX":c=a[0];a[0]=a[1];a[1]=b*c;break;case "YtoZ":c=a[1];a[1]=b*a[2];a[2]=c;break;case "ZtoX":c=a[0];a[0]=a[1];a[1]=a[2];a[2]=c;break;case "ZtoY":c=a[1];a[1]=a[2];a[2]=b*c}}function T(a,b){var c=[a[b],a[b+1],a[b+2]];da(c,-1);return new THREE.Vector3(c[0],c[1],c[2])}function Y(a){if(ka.convertUpAxis){var b=[a[0],a[4],a[8]];da(b,-1);a[0]=b[0];a[4]=b[1];a[8]=b[2];b=[a[1],a[5],a[9]];da(b,-1);a[1]=b[0];a[5]=b[1];a[9]=
b[2];b=[a[2],a[6],a[10]];da(b,-1);a[2]=b[0];a[6]=b[1];a[10]=b[2];b=[a[0],a[1],a[2]];da(b,-1);a[0]=b[0];a[1]=b[1];a[2]=b[2];b=[a[4],a[5],a[6]];da(b,-1);a[4]=b[0];a[5]=b[1];a[6]=b[2];b=[a[8],a[9],a[10]];da(b,-1);a[8]=b[0];a[9]=b[1];a[10]=b[2];b=[a[3],a[7],a[11]];da(b,-1);a[3]=b[0];a[7]=b[1];a[11]=b[2]}return new THREE.Matrix4(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15])}function la(a){if(ka.convertUpAxis)switch(a){case "X":switch(Ta){case "XtoY":case "XtoZ":case "YtoX":a=
"Y";break;case "ZtoX":a="Z"}break;case "Y":switch(Ta){case "XtoY":case "YtoX":case "ZtoX":a="X";break;case "XtoZ":case "YtoZ":case "ZtoY":a="Z"}break;case "Z":switch(Ta){case "XtoZ":a="X";break;case "YtoZ":case "ZtoX":case "ZtoY":a="Y"}}return a}var R=null,aa=null,va,Na=null,ya={},ta={},pa={},Ea={},Pa={},bb={},Ya={},jb={},mb,ib,Ga,Ca,qa,ob=THREE.SmoothShading,ka={centerGeometry:false,convertUpAxis:false,subdivideFaces:true,upAxis:"Y",defaultEnvMap:null},eb="Y",Ta=null,Aa=Math.PI/180;g.prototype.parse=
function(a){this.id=a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeName=="init_from")this.init_from=c.textContent}return this};h.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.type="none";for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "skin":this.skin=(new k).parse(c);this.type=c.nodeName;break;case "morph":this.morph=(new i).parse(c);this.type=c.nodeName}}return this};
i.prototype.parse=function(a){var b={},c=[],d;this.method=a.getAttribute("method");this.source=a.getAttribute("source").replace(/^#/,"");for(d=0;d<a.childNodes.length;d++){var e=a.childNodes[d];if(e.nodeType==1)switch(e.nodeName){case "source":e=(new A).parse(e);b[e.id]=e;break;case "targets":c=this.parseInputs(e);break;default:console.log(e.nodeName)}}for(d=0;d<c.length;d++){a=c[d];e=b[a.source];switch(a.semantic){case "MORPH_TARGET":this.targets=e.read();break;case "MORPH_WEIGHT":this.weights=e.read()}}return this};
i.prototype.parseInputs=function(a){for(var b=[],c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(d.nodeType==1)switch(d.nodeName){case "input":b.push((new v).parse(d))}}return b};k.prototype.parse=function(a){var b={},c,d;this.source=a.getAttribute("source").replace(/^#/,"");this.invBindMatrices=[];this.joints=[];this.weights=[];for(var e=0;e<a.childNodes.length;e++){var f=a.childNodes[e];if(f.nodeType==1)switch(f.nodeName){case "bind_shape_matrix":f=O(f.textContent);this.bindShapeMatrix=
Y(f);break;case "source":f=(new A).parse(f);b[f.id]=f;break;case "joints":c=f;break;case "vertex_weights":d=f;break;default:console.log(f.nodeName)}}this.parseJoints(c,b);this.parseWeights(d,b);return this};k.prototype.parseJoints=function(a,b){for(var c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(d.nodeType==1)switch(d.nodeName){case "input":var d=(new v).parse(d),e=b[d.source];if(d.semantic=="JOINT")this.joints=e.read();else if(d.semantic=="INV_BIND_MATRIX")this.invBindMatrices=e.read()}}};
k.prototype.parseWeights=function(a,b){for(var c,d,e=[],f=0;f<a.childNodes.length;f++){var g=a.childNodes[f];if(g.nodeType==1)switch(g.nodeName){case "input":e.push((new v).parse(g));break;case "v":c=Q(g.textContent);break;case "vcount":d=Q(g.textContent)}}for(f=g=0;f<d.length;f++){for(var h=d[f],i=[],j=0;j<h;j++){for(var k={},l=0;l<e.length;l++){var m=e[l],n=c[g+m.offset];switch(m.semantic){case "JOINT":k.joint=n;break;case "WEIGHT":k.weight=b[m.source].data[n]}}i.push(k);g=g+e.length}for(j=0;j<
i.length;j++)i[j].index=f;this.weights.push(i)}};j.prototype.getChildById=function(a,b){for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildById(a,b);if(d)return d}return null};j.prototype.getChildBySid=function(a,b){for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildBySid(a,b);if(d)return d}return null};j.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.nodes=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==
1)switch(c.nodeName){case "node":this.nodes.push((new l).parse(c))}}return this};l.prototype.getChannelForTransform=function(a){for(var b=0;b<this.channels.length;b++){var c=this.channels[b],d=c.target.split("/");d.shift();var e=d.shift(),f=e.indexOf(".")>=0,g=e.indexOf("(")>=0,h;if(f){d=e.split(".");e=d.shift();d.shift()}else if(g){h=e.split("(");e=h.shift();for(d=0;d<h.length;d++)h[d]=parseInt(h[d].replace(/\)/,""))}if(e==a){c.info={sid:e,dotSyntax:f,arrSyntax:g,arrIndices:h};return c}}return null};
l.prototype.getChildById=function(a,b){if(this.id==a)return this;if(b)for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildById(a,b);if(d)return d}return null};l.prototype.getChildBySid=function(a,b){if(this.sid==a)return this;if(b)for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildBySid(a,b);if(d)return d}return null};l.prototype.getTransformBySid=function(a){for(var b=0;b<this.transforms.length;b++)if(this.transforms[b].sid==a)return this.transforms[b];return null};l.prototype.parse=
function(a){var b;this.id=a.getAttribute("id");this.sid=a.getAttribute("sid");this.name=a.getAttribute("name");this.type=a.getAttribute("type");this.type=this.type=="JOINT"?this.type:"NODE";this.nodes=[];this.transforms=[];this.geometries=[];this.cameras=[];this.controllers=[];this.matrix=new THREE.Matrix4;for(var c=0;c<a.childNodes.length;c++){b=a.childNodes[c];if(b.nodeType==1)switch(b.nodeName){case "node":this.nodes.push((new l).parse(b));break;case "instance_camera":this.cameras.push((new ha).parse(b));
break;case "instance_controller":this.controllers.push((new p).parse(b));break;case "instance_geometry":this.geometries.push((new q).parse(b));break;case "instance_light":break;case "instance_node":b=b.getAttribute("url").replace(/^#/,"");(b=R.evaluate(".//dae:library_nodes//dae:node[@id='"+b+"']",R,E,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())&&this.nodes.push((new l).parse(b));break;case "rotate":case "translate":case "scale":case "matrix":case "lookat":case "skew":this.transforms.push((new m).parse(b));
break;case "extra":break;default:console.log(b.nodeName)}}a=[];c=1E6;b=-1E6;for(var d in pa)for(var e=pa[d],f=0;f<e.channel.length;f++){var g=e.channel[f],h=e.sampler[f];d=g.target.split("/")[0];if(d==this.id){h.create();g.sampler=h;c=Math.min(c,h.startTime);b=Math.max(b,h.endTime);a.push(g)}}if(a.length){this.startTime=c;this.endTime=b}if((this.channels=a)&&this.channels.length){d=[];a=[];c=0;for(e=this.channels.length;c<e;c++){var i=this.channels[c],f=i.fullSid,g=i.sampler,h=g.input,j=this.getTransformBySid(i.sid),
k;if(i.arrIndices){k=[];b=0;for(var n=i.arrIndices.length;b<n;b++){var r=k,s=b,t=i.arrIndices[b];if(t>-1&&t<3){t=la(["X","Y","Z"][t]);t={X:0,Y:1,Z:2}[t]}r[s]=t}}else k=la(i.member);if(j){a.indexOf(f)===-1&&a.push(f);b=0;for(n=h.length;b<n;b++){for(var r=h[b],i=g.getData(j.type,b),s=null,t=0,u=d.length;t<u&&s==null;t++){var v=d[t];if(v.time===r)s=v;else if(v.time>r)break}if(!s){s=new S(r);t=-1;u=0;for(v=d.length;u<v&&t==-1;u++)d[u].time>=r&&(t=u);r=t;d.splice(r==-1?d.length:r,0,s)}s.addTarget(f,j,
k,i)}}else console.log('Could not find transform "'+i.sid+'" in node '+this.id)}for(c=0;c<a.length;c++){e=a[c];for(b=0;b<d.length;b++){s=d[b];if(!s.hasTarget(e)){h=d;f=s;k=b;g=e;j=void 0;a:{j=k?k-1:0;for(j=j>=0?j:j+h.length;j>=0;j--){n=h[j];if(n.hasTarget(g)){j=n;break a}}j=null}n=void 0;a:{for(k=k+1;k<h.length;k++){n=h[k];if(n.hasTarget(g))break a}n=null}if(j&&n){h=(f.time-j.time)/(n.time-j.time);j=j.getTarget(g);k=n.getTarget(g).data;n=j.data;i=void 0;if(j.type==="matrix")i=n;else if(n.length){i=
[];for(r=0;r<n.length;++r)i[r]=n[r]+(k[r]-n[r])*h}else i=n+(k-n)*h;f.addTarget(g,j.transform,j.member,i)}}}}this.keys=d;this.sids=a}this.updateMatrix();return this};l.prototype.updateMatrix=function(){this.matrix.identity();for(var a=0;a<this.transforms.length;a++)this.transforms[a].apply(this.matrix)};m.prototype.parse=function(a){this.sid=a.getAttribute("sid");this.type=a.nodeName;this.data=O(a.textContent);this.convert();return this};m.prototype.convert=function(){switch(this.type){case "matrix":this.obj=
Y(this.data);break;case "rotate":this.angle=this.data[3]*Aa;case "translate":da(this.data,-1);this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;case "scale":da(this.data,1);this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;default:console.log("Can not convert Transform of type "+this.type)}};m.prototype.apply=function(a){switch(this.type){case "matrix":a.multiplySelf(this.obj);break;case "translate":a.translate(this.obj);break;case "rotate":a.rotateByAxis(this.obj,
this.angle);break;case "scale":a.scale(this.obj)}};m.prototype.update=function(a,b){var c=["X","Y","Z","ANGLE"];switch(this.type){case "matrix":if(b)if(b.length===1)switch(b[0]){case 0:this.obj.n11=a[0];this.obj.n21=a[1];this.obj.n31=a[2];this.obj.n41=a[3];break;case 1:this.obj.n12=a[0];this.obj.n22=a[1];this.obj.n32=a[2];this.obj.n42=a[3];break;case 2:this.obj.n13=a[0];this.obj.n23=a[1];this.obj.n33=a[2];this.obj.n43=a[3];break;case 3:this.obj.n14=a[0];this.obj.n24=a[1];this.obj.n34=a[2];this.obj.n44=
a[3]}else b.length===2?this.obj["n"+(b[0]+1)+(b[1]+1)]=a:console.log("Incorrect addressing of matrix in transform.");else this.obj.copy(a);break;case "translate":case "scale":Object.prototype.toString.call(b)==="[object Array]"&&(b=c[b[0]]);switch(b){case "X":this.obj.x=a;break;case "Y":this.obj.y=a;break;case "Z":this.obj.z=a;break;default:this.obj.x=a[0];this.obj.y=a[1];this.obj.z=a[2]}break;case "rotate":Object.prototype.toString.call(b)==="[object Array]"&&(b=c[b[0]]);switch(b){case "X":this.obj.x=
a;break;case "Y":this.obj.y=a;break;case "Z":this.obj.z=a;break;case "ANGLE":this.angle=a*Aa;break;default:this.obj.x=a[0];this.obj.y=a[1];this.obj.z=a[2];this.angle=a[3]*Aa}}};p.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");this.skeleton=[];this.instance_material=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType===1)switch(c.nodeName){case "skeleton":this.skeleton.push(c.textContent.replace(/^#/,""));break;case "bind_material":if(c=R.evaluate(".//dae:instance_material",
c,E,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null))for(var d=c.iterateNext();d;){this.instance_material.push((new n).parse(d));d=c.iterateNext()}}}return this};n.prototype.parse=function(a){this.symbol=a.getAttribute("symbol");this.target=a.getAttribute("target").replace(/^#/,"");return this};q.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");this.instance_material=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1&&c.nodeName=="bind_material"){if(a=
R.evaluate(".//dae:instance_material",c,E,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null))for(b=a.iterateNext();b;){this.instance_material.push((new n).parse(b));b=a.iterateNext()}break}}return this};t.prototype.parse=function(a){this.id=a.getAttribute("id");P(this,a);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "mesh":this.mesh=(new s(this)).parse(c)}}return this};s.prototype.parse=function(a){this.primitives=[];var b;for(b=0;b<a.childNodes.length;b++){var c=
a.childNodes[b];switch(c.nodeName){case "source":var d=c.getAttribute("id");ya[d]==void 0&&(ya[d]=(new A(d)).parse(c));break;case "vertices":this.vertices=(new w).parse(c);break;case "triangles":this.primitives.push((new r).parse(c));break;case "polygons":this.primitives.push((new x).parse(c));break;case "polylist":this.primitives.push((new u).parse(c))}}this.geometry3js=new THREE.Geometry;a=ya[this.vertices.input.POSITION.source].data;for(b=0;b<a.length;b=b+3)this.geometry3js.vertices.push(T(a,b).clone());
for(b=0;b<this.primitives.length;b++){a=this.primitives[b];a.setVertices(this.vertices);this.handlePrimitive(a,this.geometry3js)}this.geometry3js.computeCentroids();this.geometry3js.computeFaceNormals();if(this.geometry3js.calcNormals){this.geometry3js.computeVertexNormals();delete this.geometry3js.calcNormals}this.geometry3js.computeBoundingBox();return this};s.prototype.handlePrimitive=function(a,b){var c,d,e=a.p,f=a.inputs,g,h,i,j,k,l=0,m=3,n=0,p=[];for(c=0;c<f.length;c++){g=f[c];m=g.offset+1;
n=n<m?m:n;switch(g.semantic){case "TEXCOORD":p.push(g.set)}}for(var q=0;q<e.length;++q)for(var r=e[q],t=0;t<r.length;){var s=[],u=[],v=null,w=[],m=a.vcount?a.vcount.length?a.vcount[l++]:a.vcount:r.length/n;for(c=0;c<m;c++)for(d=0;d<f.length;d++){g=f[d];j=ya[g.source];h=r[t+c*n+g.offset];k=j.accessor.params.length;i=h*k;switch(g.semantic){case "VERTEX":s.push(h);break;case "NORMAL":u.push(T(j.data,i));break;case "TEXCOORD":v=v||{};v[g.set]===void 0&&(v[g.set]=[]);v[g.set].push(new THREE.UV(j.data[i],
j.data[i+1]));break;case "COLOR":w.push((new THREE.Color).setRGB(j.data[i],j.data[i+1],j.data[i+2]))}}if(u.length==0)if(g=this.vertices.input.NORMAL){j=ya[g.source];k=j.accessor.params.length;c=0;for(h=s.length;c<h;c++)u.push(T(j.data,s[c]*k))}else b.calcNormals=true;if(!v){v={};if(g=this.vertices.input.TEXCOORD){p.push(g.set);j=ya[g.source];k=j.accessor.params.length;c=0;for(h=s.length;c<h;c++){i=s[c]*k;v[g.set]===void 0&&(v[g.set]=[]);v[g.set].push(new THREE.UV(j.data[i],1-j.data[i+1]))}}}if(w.length==
0)if(g=this.vertices.input.COLOR){j=ya[g.source];k=j.accessor.params.length;c=0;for(h=s.length;c<h;c++){i=s[c]*k;w.push((new THREE.Color).setRGB(j.data[i],j.data[i+1],j.data[i+2]))}}d=null;g=[];if(m===3)g.push(new THREE.Face3(s[0],s[1],s[2],u,w.length?w:new THREE.Color));else if(m===4)g.push(new THREE.Face4(s[0],s[1],s[2],s[3],u,w.length?w:new THREE.Color));else if(m>4&&ka.subdivideFaces){w=w.length?w:new THREE.Color;for(d=1;d<m-1;)g.push(new THREE.Face3(s[0],s[d],s[d+1],[u[0],u[d++],u[d]],w))}if(g.length){c=
0;for(h=g.length;c<h;c++){d=g[c];d.daeMaterial=a.material;b.faces.push(d);for(d=0;d<p.length;d++){s=v[p[d]];s=m>4?[s[0],s[c+1],s[c+2]]:m===4?[s[0],s[1],s[2],s[3]]:[s[0],s[1],s[2]];b.faceVertexUvs[d]||(b.faceVertexUvs[d]=[]);b.faceVertexUvs[d].push(s)}}}else console.log("dropped face with vcount "+m+" for geometry with id: "+b.id);t=t+n*m}};x.prototype.setVertices=function(a){for(var b=0;b<this.inputs.length;b++)if(this.inputs[b].source==a.id)this.inputs[b].source=a.input.POSITION.source};x.prototype.parse=
function(a){this.material=a.getAttribute("material");this.count=sa(a,"count",0);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "input":this.inputs.push((new v).parse(a.childNodes[b]));break;case "vcount":this.vcount=Q(c.textContent);break;case "p":this.p.push(Q(c.textContent));break;case "ph":console.warn("polygon holes not yet supported!")}}return this};u.prototype=Object.create(x.prototype);r.prototype=Object.create(x.prototype);y.prototype.parse=function(a){this.params=
[];this.source=a.getAttribute("source");this.count=sa(a,"count",0);this.stride=sa(a,"stride",0);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeName=="param"){var d={};d.name=c.getAttribute("name");d.type=c.getAttribute("type");this.params.push(d)}}return this};w.prototype.parse=function(a){this.id=a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++)if(a.childNodes[b].nodeName=="input"){var c=(new v).parse(a.childNodes[b]);this.input[c.semantic]=c}return this};v.prototype.parse=
function(a){this.semantic=a.getAttribute("semantic");this.source=a.getAttribute("source").replace(/^#/,"");this.set=sa(a,"set",-1);this.offset=sa(a,"offset",0);if(this.semantic=="TEXCOORD"&&this.set<0)this.set=0;return this};A.prototype.parse=function(a){this.id=a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "bool_array":for(var d=ja(c.textContent),e=[],f=0,g=d.length;f<g;f++)e.push(d[f]=="true"||d[f]=="1"?true:false);this.data=e;this.type=
c.nodeName;break;case "float_array":this.data=O(c.textContent);this.type=c.nodeName;break;case "int_array":this.data=Q(c.textContent);this.type=c.nodeName;break;case "IDREF_array":case "Name_array":this.data=ja(c.textContent);this.type=c.nodeName;break;case "technique_common":for(d=0;d<c.childNodes.length;d++)if(c.childNodes[d].nodeName=="accessor"){this.accessor=(new y).parse(c.childNodes[d]);break}}}return this};A.prototype.read=function(){var a=[],b=this.accessor.params[0];switch(b.type){case "IDREF":case "Name":case "name":case "float":return this.data;
case "float4x4":for(b=0;b<this.data.length;b=b+16){var c=this.data.slice(b,b+16),c=Y(c);a.push(c)}break;default:console.log("ColladaLoader: Source: Read dont know how to read "+b.type+".")}return a};F.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");for(var b=0;b<a.childNodes.length;b++)if(a.childNodes[b].nodeName=="instance_effect"){this.instance_effect=(new L).parse(a.childNodes[b]);break}return this};C.prototype.isColor=function(){return this.texture==null};
C.prototype.isTexture=function(){return this.texture!=null};C.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "color":c=O(c.textContent);this.color=new THREE.Color(0);this.color.setRGB(c[0],c[1],c[2]);this.color.a=c[3];break;case "texture":this.texture=c.getAttribute("texture");this.texcoord=c.getAttribute("texcoord");this.texOpts={offsetU:0,offsetV:0,repeatU:1,repeatV:1,wrapU:1,wrapV:1};this.parseTexture(c)}}return this};
C.prototype.parseTexture=function(a){if(!a.childNodes)return this;if(a.childNodes[1]&&a.childNodes[1].nodeName==="extra"){a=a.childNodes[1];a.childNodes[1]&&a.childNodes[1].nodeName==="technique"&&(a=a.childNodes[1])}for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "offsetU":case "offsetV":case "repeatU":case "repeatV":this.texOpts[c.nodeName]=parseFloat(c.textContent);break;case "wrapU":case "wrapV":this.texOpts[c.nodeName]=parseInt(c.textContent);break;default:this.texOpts[c.nodeName]=
c.textContent}}return this};G.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "ambient":case "emission":case "diffuse":case "specular":case "transparent":this[c.nodeName]=(new C).parse(c);break;case "shininess":case "reflectivity":case "index_of_refraction":case "transparency":var d;d=R.evaluate(".//dae:float",c,E,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);for(var e=d.iterateNext(),f=[];e;){f.push(e);e=d.iterateNext()}d=
f;d.length>0&&(this[c.nodeName]=parseFloat(d[0].textContent))}}this.create();return this};G.prototype.create=function(){var a={},b=this.transparency!==void 0&&this.transparency<1,c;for(c in this)switch(c){case "ambient":case "emission":case "diffuse":case "specular":var d=this[c];if(d instanceof C)if(d.isTexture()){if(this.effect.sampler&&this.effect.surface&&this.effect.sampler.source==this.effect.surface.sid){var e=ta[this.effect.surface.init_from];if(e){e=THREE.ImageUtils.loadTexture(Ga+e.init_from);
e.wrapS=d.texOpts.wrapU?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping;e.wrapT=d.texOpts.wrapV?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping;e.offset.x=d.texOpts.offsetU;e.offset.y=d.texOpts.offsetV;e.repeat.x=d.texOpts.repeatU;e.repeat.y=d.texOpts.repeatV;a.map=e;c==="emission"&&(a.emissive=16777215)}}}else if(c==="diffuse"||!b)c==="emission"?a.emissive=d.color.getHex():a[c]=d.color.getHex();break;case "shininess":a[c]=this[c];break;case "reflectivity":a[c]=this[c];if(a[c]>0)a.envMap=ka.defaultEnvMap;
a.combine=THREE.MixOperation;break;case "index_of_refraction":a.refractionRatio=this[c];if(this[c]!==1)a.envMap=ka.defaultEnvMap;break;case "transparency":if(b){a.transparent=true;a.opacity=this[c];b=true}}a.shading=ob;a.side=this.effect.doubleSided?THREE.DoubleSide:THREE.FrontSide;switch(this.type){case "constant":a.color=a.emission;this.material=new THREE.MeshBasicMaterial(a);break;case "phong":case "blinn":a.color=a.diffuse;this.material=new THREE.MeshPhongMaterial(a);break;default:a.color=a.diffuse;
this.material=new THREE.MeshLambertMaterial(a)}return this.material};H.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "init_from":this.init_from=c.textContent;break;case "format":this.format=c.textContent;break;default:console.log("unhandled Surface prop: "+c.nodeName)}}return this};D.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "source":this.source=
c.textContent;break;case "minfilter":this.minfilter=c.textContent;break;case "magfilter":this.magfilter=c.textContent;break;case "mipfilter":this.mipfilter=c.textContent;break;case "wrap_s":this.wrap_s=c.textContent;break;case "wrap_t":this.wrap_t=c.textContent;break;default:console.log("unhandled Sampler2D prop: "+c.nodeName)}}return this};J.prototype.create=function(){if(this.shader==null)return null};J.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");P(this,
a);this.shader=null;for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "profile_COMMON":this.parseTechnique(this.parseProfileCOMMON(c))}}return this};J.prototype.parseNewparam=function(a){for(var b=a.getAttribute("sid"),c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(d.nodeType==1)switch(d.nodeName){case "surface":this.surface=(new H(this)).parse(d);this.surface.sid=b;break;case "sampler2D":this.sampler=(new D(this)).parse(d);this.sampler.sid=
b;break;case "extra":break;default:console.log(d.nodeName)}}};J.prototype.parseProfileCOMMON=function(a){for(var b,c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(d.nodeType==1)switch(d.nodeName){case "profile_COMMON":this.parseProfileCOMMON(d);break;case "technique":b=d;break;case "newparam":this.parseNewparam(d);break;case "image":d=(new g).parse(d);ta[d.id]=d;break;case "extra":break;default:console.log(d.nodeName)}}return b};J.prototype.parseTechnique=function(a){for(var b=0;b<a.childNodes.length;b++){var c=
a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "constant":case "lambert":case "blinn":case "phong":this.shader=(new G(c.nodeName,this)).parse(c)}}};L.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");return this};K.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.source={};for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "animation":var c=(new K).parse(c),d;for(d in c.source)this.source[d]=
c.source[d];for(var e=0;e<c.channel.length;e++){this.channel.push(c.channel[e]);this.sampler.push(c.sampler[e])}break;case "source":d=(new A).parse(c);this.source[d.id]=d;break;case "sampler":this.sampler.push((new N(this)).parse(c));break;case "channel":this.channel.push((new M(this)).parse(c))}}return this};M.prototype.parse=function(a){this.source=a.getAttribute("source").replace(/^#/,"");this.target=a.getAttribute("target");var b=this.target.split("/");b.shift();var a=b.shift(),c=a.indexOf(".")>=
0,d=a.indexOf("(")>=0;if(c){b=a.split(".");this.sid=b.shift();this.member=b.shift()}else if(d){b=a.split("(");this.sid=b.shift();for(var e=0;e<b.length;e++)b[e]=parseInt(b[e].replace(/\)/,""));this.arrIndices=b}else this.sid=a;this.fullSid=a;this.dotSyntax=c;this.arrSyntax=d;return this};N.prototype.parse=function(a){this.id=a.getAttribute("id");this.inputs=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "input":this.inputs.push((new v).parse(c))}}return this};
N.prototype.create=function(){for(var a=0;a<this.inputs.length;a++){var b=this.inputs[a],c=this.animation.source[b.source];switch(b.semantic){case "INPUT":this.input=c.read();break;case "OUTPUT":this.output=c.read();this.strideOut=c.accessor.stride;break;case "INTERPOLATION":this.interpolation=c.read();break;case "IN_TANGENT":break;case "OUT_TANGENT":break;default:console.log(b.semantic)}}this.duration=this.endTime=this.startTime=0;if(this.input.length){this.startTime=1E8;this.endTime=-1E8;for(a=
0;a<this.input.length;a++){this.startTime=Math.min(this.startTime,this.input[a]);this.endTime=Math.max(this.endTime,this.input[a])}this.duration=this.endTime-this.startTime}};N.prototype.getData=function(a,b){var c;if(a==="matrix"&&this.strideOut===16)c=this.output[b];else if(this.strideOut>1){c=[];for(var b=b*this.strideOut,d=0;d<this.strideOut;++d)c[d]=this.output[b+d];if(this.strideOut===3)switch(a){case "rotate":case "translate":da(c,-1);break;case "scale":da(c,1)}else this.strideOut===4&&a===
"matrix"&&da(c,-1)}else c=this.output[b];return c};S.prototype.addTarget=function(a,b,c,d){this.targets.push({sid:a,member:c,transform:b,data:d})};S.prototype.apply=function(a){for(var b=0;b<this.targets.length;++b){var c=this.targets[b];(!a||c.sid===a)&&c.transform.update(c.data,c.member)}};S.prototype.getTarget=function(a){for(var b=0;b<this.targets.length;++b)if(this.targets[b].sid===a)return this.targets[b];return null};S.prototype.hasTarget=function(a){for(var b=0;b<this.targets.length;++b)if(this.targets[b].sid===
a)return true;return false};S.prototype.interpolate=function(a,b){for(var c=0;c<this.targets.length;++c){var d=this.targets[c],e=a.getTarget(d.sid);if(d.transform.type!=="matrix"&&e){var f=(b-this.time)/(a.time-this.time),g=e.data,h=d.data;if(f<0||f>1){console.log("Key.interpolate: Warning! Scale out of bounds:"+f);f=f<0?0:1}if(h.length)for(var e=[],i=0;i<h.length;++i)e[i]=h[i]+(g[i]-h[i])*f;else e=h+(g-h)*f}else e=d.data;d.transform.update(e,d.member)}};ca.prototype.parse=function(a){this.id=a.getAttribute("id");
this.name=a.getAttribute("name");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "optics":this.parseOptics(c)}}return this};ca.prototype.parseOptics=function(a){for(var b=0;b<a.childNodes.length;b++)if(a.childNodes[b].nodeName=="technique_common")for(var c=a.childNodes[b],d=0;d<c.childNodes.length;d++){this.technique=c.childNodes[d].nodeName;if(this.technique=="perspective")for(var e=c.childNodes[d],f=0;f<e.childNodes.length;f++){var g=e.childNodes[f];
switch(g.nodeName){case "yfov":this.yfov=g.textContent;break;case "xfov":this.xfov=g.textContent;break;case "znear":this.znear=g.textContent;break;case "zfar":this.zfar=g.textContent;break;case "aspect_ratio":this.aspect_ratio=g.textContent}}else if(this.technique=="orthographic"){e=c.childNodes[d];for(f=0;f<e.childNodes.length;f++){g=e.childNodes[f];switch(g.nodeName){case "xmag":this.xmag=g.textContent;break;case "ymag":this.ymag=g.textContent;break;case "znear":this.znear=g.textContent;break;case "zfar":this.zfar=
g.textContent;break;case "aspect_ratio":this.aspect_ratio=g.textContent}}}}return this};ha.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");return this};return{load:function(b,c,d){var e=0;if(document.implementation&&document.implementation.createDocument){var f=new XMLHttpRequest;f.onreadystatechange=function(){if(f.readyState==4){if(f.status==0||f.status==200)if(f.responseXML){Na=c;a(f.responseXML,void 0,b)}else if(f.responseText){Na=c;var g=(new DOMParser).parseFromString(f.responseText,
"application/xml");a(g,void 0,b)}else console.error("ColladaLoader: Empty or non-existing file ("+b+")")}else if(f.readyState==3&&d){e==0&&(e=f.getResponseHeader("Content-Length"));d({total:e,loaded:f.responseText.length})}};f.open("GET",b,true);f.send(null)}else alert("Don't know how to parse XML!")},parse:a,setPreferredShading:function(a){ob=a},applySkin:e,geometries:Pa,options:ka}};THREE.MTLLoader=function(a,b){THREE.EventTarget.call(this);this.baseUrl=a;this.options=b};
THREE.MTLLoader.prototype={load:function(a){var b=this,c=new XMLHttpRequest;c.addEventListener("load",function(c){if(c.target.status===200||c.target.status===0){c=b.parse(c.target.responseText);b.dispatchEvent({type:"load",content:c})}else b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]",response:c.target.responseText})},false);c.addEventListener("progress",function(a){b.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},false);c.addEventListener("error",function(){b.dispatchEvent({type:"error",
message:"Couldn't load URL ["+a+"]"})},false);c.open("GET",a,true);c.send(null)},parse:function(a){for(var b=a.split("\n"),c={},d=/\s+/,a={},e=0;e<b.length;e++){var f=b[e],f=f.trim();if(!(f.length===0||f.charAt(0)==="#")){var g=f.indexOf(" "),h=g>=0?f.substring(0,g):f,h=h.toLowerCase(),f=g>=0?f.substring(g+1):"",f=f.trim();if(h==="newmtl"){c={name:f};a[f]=c}else if(c)if(h==="ka"||h==="kd"||h==="ks"){f=f.split(d,3);c[h]=[parseFloat(f[0]),parseFloat(f[1]),parseFloat(f[2])]}else c[h]=f}}b=new THREE.MTLLoader.MaterialCreator(this.baseUrl,
this.options);b.setMaterials(a);return b}};THREE.MTLLoader.MaterialCreator=function(a,b){THREE.EventTarget.call(this);this.baseUrl=a;this.options=b;this.materialsInfo={};this.materials={};this.materialsArray=[];this.nameLookup={};this.side=this.options&&this.options.side?this.options.side:THREE.FrontSide;this.wrap=this.options&&this.options.wrap?this.options.wrap:THREE.RepeatWrapping};
THREE.MTLLoader.MaterialCreator.prototype={setMaterials:function(a){this.materialsInfo=this.convert(a);this.materials={};this.materialsArray=[];this.nameLookup={}},convert:function(a){if(!this.options)return a;var b={},c;for(c in a){var d=a[c],e={};b[c]=e;for(var f in d){var g=true,h=d[f],i=f.toLowerCase();switch(i){case "kd":case "ka":case "ks":this.options&&this.options.normalizeRGB&&(h=[h[0]/255,h[1]/255,h[2]/255]);this.options&&this.options.ignoreZeroRGBs&&h[0]===0&&(h[1]===0&&h[1]===0)&&(g=false);
break;case "d":this.options&&this.options.invertTransparency&&(h=1-h)}g&&(e[i]=h)}}return b},preload:function(){for(var a in this.materialsInfo)this.create(a)},getIndex:function(a){return this.nameLookup[a]},getAsArray:function(){var a=0,b;for(b in this.materialsInfo){this.materialsArray[a]=this.create(b);this.nameLookup[b]=a;a++}return this.materialsArray},create:function(a){this.materials[a]===void 0&&this.createMaterial_(a);return this.materials[a]},createMaterial_:function(a){var b=this.materialsInfo[a],
c={name:a,side:this.side},d;for(d in b){var e=b[d];switch(d.toLowerCase()){case "kd":c.diffuse=(new THREE.Color).setRGB(e[0],e[1],e[2]);break;case "ka":c.ambient=(new THREE.Color).setRGB(e[0],e[1],e[2]);break;case "ks":c.specular=(new THREE.Color).setRGB(e[0],e[1],e[2]);break;case "map_kd":c.map=THREE.MTLLoader.loadTexture(this.baseUrl+e);c.map.wrapS=this.wrap;c.map.wrapT=this.wrap;break;case "ns":c.shininess=e;break;case "d":if(e<1){c.transparent=true;c.opacity=e}}}if(c.diffuse){c.ambient||(c.ambient=
c.diffuse);c.color=c.diffuse}this.materials[a]=new THREE.MeshPhongMaterial(c);return this.materials[a]}};
THREE.MTLLoader.loadTexture=function(a,b,c,d){if(a.toLowerCase().endsWith(".dds"))var e=THREE.ImageUtils.loadCompressedTexture(a,b,c,d);else{var f=new Image,e=new THREE.Texture(f,b),b=new THREE.ImageLoader;b.addEventListener("load",function(a){e.image=THREE.MTLLoader.ensurePowerOfTwo_(a.content);e.needsUpdate=true;c&&c(e)});b.addEventListener("error",function(a){d&&d(a.message)});b.crossOrigin=this.crossOrigin;b.load(a,f)}return e};
THREE.MTLLoader.ensurePowerOfTwo_=function(a){if(!THREE.MTLLoader.isPowerOfTwo_(a.width)||!THREE.MTLLoader.isPowerOfTwo_(a.height)){var b=document.createElement("canvas");b.width=THREE.MTLLoader.nextHighestPowerOfTwo_(a.width);b.height=THREE.MTLLoader.nextHighestPowerOfTwo_(a.height);b.getContext("2d").drawImage(a,0,0,a.width,a.height,0,0,b.width,b.height);return b}return a};THREE.MTLLoader.isPowerOfTwo_=function(a){return(a&a-1)===0};
THREE.MTLLoader.nextHighestPowerOfTwo_=function(a){--a;for(var b=1;b<32;b=b<<1)a=a|a>>b;return a+1};THREE.OBJLoader=function(){THREE.EventTarget.call(this)};
THREE.OBJLoader.prototype={constructor:THREE.OBJLoader,load:function(a){var b=this,c=new XMLHttpRequest;c.addEventListener("load",function(a){b.dispatchEvent({type:"load",content:b.parse(a.target.responseText)})},false);c.addEventListener("progress",function(a){b.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},false);c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},false);c.open("GET",a,true);c.send(null)},parse:function(a){function b(a,
b,c){return new THREE.Vector3(a,b,c)}function c(a,b){return new THREE.UV(a,b)}function d(a,b,c,d){return new THREE.Face3(a,b,c,d)}function e(a,b,c,d,e){return new THREE.Face4(a,b,c,d,e)}var f=new THREE.Object3D,g=[],h=[],i=[],k,j;for(k=/v( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/g;(j=k.exec(a))!=null;)g.push(b(parseFloat(j[1]),parseFloat(j[2]),parseFloat(j[3])));for(k=/vn( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/g;(j=k.exec(a))!=null;)h.push(b(parseFloat(j[1]),parseFloat(j[2]),
parseFloat(j[3])));for(k=/vt( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/g;(j=k.exec(a))!=null;)i.push(c(parseFloat(j[1]),parseFloat(j[2])));for(var a=a.split("\no "),l=0,m=a.length;l<m;l++){var p=a[l],n=new THREE.Geometry;n.vertices=g;for(k=/f( +[\d]+)( [\d]+)( [\d]+)( [\d]+)?/g;(j=k.exec(p))!=null;)j[4]===void 0?n.faces.push(d(parseInt(j[1])-1,parseInt(j[2])-1,parseInt(j[3])-1)):n.faces.push(e(parseInt(j[1])-1,parseInt(j[2])-1,parseInt(j[3])-1,parseInt(j[4])-1));for(k=/f( +([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))?/g;(j=
k.exec(p))!=null;)if(j[10]===void 0){n.faces.push(d(parseInt(j[2])-1,parseInt(j[5])-1,parseInt(j[8])-1));n.faceVertexUvs[0].push([i[parseInt(j[3])-1],i[parseInt(j[6])-1],i[parseInt(j[9])-1]])}else{n.faces.push(e(parseInt(j[2])-1,parseInt(j[5])-1,parseInt(j[8])-1,parseInt(j[11])-1));n.faceVertexUvs[0].push([i[parseInt(j[3])-1],i[parseInt(j[6])-1],i[parseInt(j[9])-1],i[parseInt(j[12])-1]])}for(k=/f( +([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))?/g;(j=
k.exec(p))!=null;)if(j[13]===void 0){n.faces.push(d(parseInt(j[2])-1,parseInt(j[6])-1,parseInt(j[10])-1,[h[parseInt(j[4])-1],h[parseInt(j[8])-1],h[parseInt(j[12])-1]]));n.faceVertexUvs[0].push([i[parseInt(j[3])-1],i[parseInt(j[7])-1],i[parseInt(j[11])-1]])}else{n.faces.push(e(parseInt(j[2])-1,parseInt(j[6])-1,parseInt(j[10])-1,parseInt(j[14])-1,[h[parseInt(j[4])-1],h[parseInt(j[8])-1],h[parseInt(j[12])-1],h[parseInt(j[16])-1]]));n.faceVertexUvs[0].push([i[parseInt(j[3])-1],i[parseInt(j[7])-1],i[parseInt(j[11])-
1],i[parseInt(j[15])-1]])}for(k=/f( +([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))?/g;(j=k.exec(p))!=null;)j[10]===void 0?n.faces.push(d(parseInt(j[2])-1,parseInt(j[5])-1,parseInt(j[8])-1,[h[parseInt(j[3])-1],h[parseInt(j[6])-1],h[parseInt(j[9])-1]])):n.faces.push(e(parseInt(j[2])-1,parseInt(j[5])-1,parseInt(j[8])-1,parseInt(j[11])-1,[h[parseInt(j[3])-1],h[parseInt(j[6])-1],h[parseInt(j[9])-1],h[parseInt(j[12])-1]]));n.computeCentroids();n.computeFaceNormals();
n.computeBoundingSphere();f.add(new THREE.Mesh(n,new THREE.MeshLambertMaterial))}return f}};THREE.OBJMTLLoader=function(){THREE.EventTarget.call(this)};
THREE.OBJMTLLoader.prototype={constructor:THREE.OBJMTLLoader,load:function(a,b,c){function d(c){if(c.type==="load")if(c.content instanceof THREE.MTLLoader.MaterialCreator){g=true;i=c.content;i.preload()}else if(c.target.status===200||c.target.status===0){c=c.target.responseText;h=b?e.parse(c):e.parse(c,function(a){g=false;k.load(k.baseUrl+a)})}else e.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]",response:c.target.responseText});else c.type==="error"&&(g=true);if(g&&h){i&&h.traverse(function(a){if(a instanceof
THREE.Mesh&&a.material.name){var b=i.create(a.material.name);if(b)a.material=b}});e.dispatchEvent({type:"load",content:h})}}var e=this,f=new XMLHttpRequest,g,h,i,k=new THREE.MTLLoader(a.substr(0,a.lastIndexOf("/")+1),c);k.addEventListener("load",d);k.addEventListener("error",d);if(b){k.load(b);g=false}else g=true;f.addEventListener("load",d,false);f.addEventListener("progress",function(a){e.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},false);f.addEventListener("error",function(){e.dispatchEvent({type:"error",
message:"Couldn't load URL ["+a+"]"})},false);f.open("GET",a,true);f.send(null)},parse:function(a,b){function c(a,b,c){return new THREE.Vector3(a,b,c)}function d(a,b){return new THREE.UV(a,b)}function e(a,b,c,d){return new THREE.Face3(a,b,c,d)}function f(a,b,c,d,e){return new THREE.Face4(a,b,c,d,e)}function g(a,b){b.geometry.computeCentroids();b.geometry.computeFaceNormals();b.geometry.computeBoundingSphere();a.add(new THREE.Mesh(b.geometry,b.material))}var h=[],i=[],k=[],j=/v( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/,
l=/vn( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/,m=/vt( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/,p=/f( +[\d]+)( [\d]+)( [\d]+)( [\d]+)?/,n=/f( +([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))?/,q=/f( +([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))?/,t=/f( +([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))?/,s=new THREE.Object3D,x=new THREE.Geometry;x.vertices=h;
for(var u={material:new THREE.MeshLambertMaterial,geometry:x},r=a.split("\n"),y=0;y<r.length;y++){var w=r[y],w=w.trim(),v;if(!(w.length===0||w.charAt(0)==="#"))if((v=j.exec(w))!==null)h.push(c(parseFloat(v[1]),parseFloat(v[2]),parseFloat(v[3])));else if((v=l.exec(w))!==null)i.push(c(parseFloat(v[1]),parseFloat(v[2]),parseFloat(v[3])));else if((v=m.exec(w))!==null)k.push(d(parseFloat(v[1]),parseFloat(v[2])));else if((v=p.exec(w))!==null)v[4]===void 0?x.faces.push(e(parseInt(v[1])-1,parseInt(v[2])-
1,parseInt(v[3])-1)):x.faces.push(f(parseInt(v[1])-1,parseInt(v[2])-1,parseInt(v[3])-1,parseInt(v[4])-1));else if((v=n.exec(w))!==null)if(v[10]===void 0){x.faces.push(e(parseInt(v[2])-1,parseInt(v[5])-1,parseInt(v[8])-1));x.faceVertexUvs[0].push([k[parseInt(v[3])-1],k[parseInt(v[6])-1],k[parseInt(v[9])-1]])}else{x.faces.push(f(parseInt(v[2])-1,parseInt(v[5])-1,parseInt(v[8])-1,parseInt(v[11])-1));x.faceVertexUvs[0].push([k[parseInt(v[3])-1],k[parseInt(v[6])-1],k[parseInt(v[9])-1],k[parseInt(v[12])-
1]])}else if((v=q.exec(w))!==null)if(v[13]===void 0){x.faces.push(e(parseInt(v[2])-1,parseInt(v[6])-1,parseInt(v[10])-1,[i[parseInt(v[4])-1],i[parseInt(v[8])-1],i[parseInt(v[12])-1]]));x.faceVertexUvs[0].push([k[parseInt(v[3])-1],k[parseInt(v[7])-1],k[parseInt(v[11])-1]])}else{x.faces.push(f(parseInt(v[2])-1,parseInt(v[6])-1,parseInt(v[10])-1,parseInt(v[14])-1,[i[parseInt(v[4])-1],i[parseInt(v[8])-1],i[parseInt(v[12])-1],i[parseInt(v[16])-1]]));x.faceVertexUvs[0].push([k[parseInt(v[3])-1],k[parseInt(v[7])-
1],k[parseInt(v[11])-1],k[parseInt(v[15])-1]])}else if((v=t.exec(w))!==null)v[10]===void 0?x.faces.push(e(parseInt(v[2])-1,parseInt(v[5])-1,parseInt(v[8])-1,[i[parseInt(v[3])-1],i[parseInt(v[6])-1],i[parseInt(v[9])-1]])):x.faces.push(f(parseInt(v[2])-1,parseInt(v[5])-1,parseInt(v[8])-1,parseInt(v[11])-1,[i[parseInt(v[3])-1],i[parseInt(v[6])-1],i[parseInt(v[9])-1],i[parseInt(v[12])-1]]));else if(w.startsWith("usemtl ")){w=w.substring(7);w=w.trim();v=new THREE.MeshLambertMaterial;v.name=w;if(x.faces.length>
0){g(s,u);x=new THREE.Geometry;x.vertices=h;u={geometry:x}}u.material=v}else if(w.startsWith("g ")){w=w.substring(2);w=w.trim()}else if(w.startsWith("o ")){w=w.substring(2);w=w.trim()}else if(!w.startsWith("s "))if(w.startsWith("mtllib ")){if(b){w=w.substring(7);w=w.trim();b(w)}}else console.error("Unhandled line "+w)}g(s,u);return s}};THREE.STLLoader=function(){THREE.EventTarget.call(this)};
THREE.STLLoader.prototype={constructor:THREE.STLLoader,load:function(a){var b=this,c=new XMLHttpRequest;c.addEventListener("load",function(a){b.dispatchEvent({type:"load",content:b.parse(a.target.responseText)})},false);c.addEventListener("progress",function(a){b.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},false);c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},false);c.open("GET",a,true);c.send(null)},parse:function(a){for(var b=
new THREE.Geometry,c=/facet([\s\S]*?)endfacet/g,d;(d=c.exec(a))!=null;){for(var e=d[0],f=/normal[\s]+([-+]?[0-9]+\.?[0-9]*([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+/g;(d=f.exec(e))!=null;)var g=new THREE.Vector3(d[1],d[3],d[5]);for(f=/vertex[\s]+([-+]?[0-9]+\.?[0-9]*([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+/g;(d=f.exec(e))!=null;)b.vertices.push(new THREE.Vector3(d[1],
d[3],d[5]));d=b.vertices.length;b.faces.push(new THREE.Face3(d-3,d-2,d-1,g))}b.computeCentroids();b.computeBoundingSphere();return b}};THREE.UTF8Loader=function(){};THREE.UTF8Loader.prototype.load=function(a,b,c){this.downloadModelJson(a,c,b)};THREE.UTF8Loader.BufferGeometryCreator=function(){};
THREE.UTF8Loader.BufferGeometryCreator.prototype.create=function(a,b){var c=b.length/3,d=new THREE.BufferGeometry,e=new Float32Array(9*c),f=new Float32Array(9*c),c=new Float32Array(6*c),g,h,i,k,j,l=a.length;for(g=h=0;g<l;g=g+8){i=a[g];k=a[g+1];j=a[g+2];e[h++]=i;e[h++]=k;e[h++]=j}h=0;for(g=3;g<l;g=g+8){i=a[g];k=a[g+1];c[h++]=i;c[h++]=k}h=0;for(g=5;g<l;g=g+8){i=a[g];k=a[g+1];j=a[g+2];f[h++]=i;f[h++]=k;f[h++]=j}g=d.attributes;g.index={itemSize:1,array:b,numItems:b.length};g.position={itemSize:3,array:e,
numItems:e.length};g.normal={itemSize:3,array:f,numItems:f.length};g.uv={itemSize:2,array:c,numItems:c.length};d.offsets=[{start:0,count:b.length,index:0}];d.computeBoundingSphere();return d};THREE.UTF8Loader.GeometryCreator=function(){};
THREE.UTF8Loader.GeometryCreator.prototype={create:function(a,b){var c=new THREE.Geometry;this.init_vertices(c,a,8,0);var d=this.init_uvs(a,8,3),e=this.init_normals(a,8,5);this.init_faces(c,e,d,b);c.computeCentroids();c.computeFaceNormals();return c},init_vertices:function(a,b,c,d){for(var e,f,g,h=b.length;d<h;d=d+c){e=b[d];f=b[d+1];g=b[d+2];this.addVertex(a,e,f,g)}},init_normals:function(a,b,c){for(var d=[],e,f,g,h=a.length;c<h;c=c+b){e=a[c];f=a[c+1];g=a[c+2];d.push(e,f,g)}return d},init_uvs:function(a,
b,c){for(var d=[],e,f,g=a.length;c<g;c=c+b){e=a[c];f=a[c+1];d.push(e,f)}return d},init_faces:function(a,b,c,d){var e,f,g,h,i,k,j,l=d.length;for(e=0;e<l;e=e+3){f=d[e];g=d[e+1];h=d[e+2];this.f3n(a,b,f,g,h,0,f,g,h);i=c[f*2];f=c[f*2+1];k=c[g*2];g=c[g*2+1];j=c[h*2];h=c[h*2+1];this.uv3(a.faceVertexUvs[0],i,f,k,g,j,h)}},addVertex:function(a,b,c,d){a.vertices.push(new THREE.Vector3(b,c,d))},f3n:function(a,b,c,d,e,f,g,h,i){var k=b[h*3],j=b[h*3+1],l=b[h*3+2],h=b[i*3],m=b[i*3+1],i=b[i*3+2],b=new THREE.Vector3(b[g*
3],b[g*3+1],b[g*3+2]),k=new THREE.Vector3(k,j,l),j=new THREE.Vector3(h,m,i);a.faces.push(new THREE.Face3(c,d,e,[b,k,j],null,f))},uv3:function(a,b,c,d,e,f,g){var h=[];h.push(new THREE.UV(b,c));h.push(new THREE.UV(d,e));h.push(new THREE.UV(f,g));a.push(h)}};var DEFAULT_DECODE_PARAMS={decodeOffsets:[-4095,-4095,-4095,0,0,-511,-511,-511],decodeScales:[1/8191,1/8191,1/8191,1/1023,1/1023,1/1023,1/1023,1/1023]};
THREE.UTF8Loader.prototype.decompressAttribsInner_=function(a,b,c,d,e,f,g,h){for(var i=0;b<c;b++){var k=a.charCodeAt(b),i=i+(k>>1^-(k&1));d[e]=h*(i+g);e=e+f}};THREE.UTF8Loader.prototype.decompressIndices_=function(a,b,c,d,e){for(var f=0,g=0;g<c;g++){var h=a.charCodeAt(b++);d[e++]=f-h;h===0&&f++}};
THREE.UTF8Loader.prototype.decompressAABBs_=function(a,b,c,d,e){for(var f=6*c,c=b+f,g=0,f=new Float32Array(f);b<c;b=b+6){var h=a.charCodeAt(b+0)+d[0],i=a.charCodeAt(b+1)+d[1],k=a.charCodeAt(b+2)+d[2],j=a.charCodeAt(b+3)+1>>1,l=a.charCodeAt(b+4)+1>>1,m=a.charCodeAt(b+5)+1>>1;f[g++]=e[0]*(h+j);f[g++]=e[1]*(i+l);f[g++]=e[2]*(k+m);f[g++]=e[0]*j;f[g++]=e[1]*l;f[g++]=e[2]*m}return f};
THREE.UTF8Loader.prototype.decompressMesh=function(a,b,c,d,e,f){for(var g=c.decodeScales.length,h=c.decodeOffsets,c=c.decodeScales,i=b.attribRange[1],k=b.attribRange[0],j=new Float32Array(g*i),l=0;l<g;l++){var m=k+i,p=c[l];p&&this.decompressAttribsInner_(a,k,m,j,l,g,h[l],p);k=m}i=3*b.indexRange[1];g=new Uint16Array(i);this.decompressIndices_(a,k,i,g,0);k=void 0;(i=b.bboxes)&&(k=this.decompressAABBs_(a,i,b.names.length,h,c));f(d,e,j,g,k,b)};
THREE.UTF8Loader.prototype.copyAttrib=function(a,b,c,d){for(var e=0;e<a;e++)c[e]=b[a*d+e]};THREE.UTF8Loader.prototype.decodeAttrib2=function(a,b,c,d,e,f,g,h,i,k){for(var j=0;j<5;j++){var l=a.charCodeAt(e+f*j+k);i[j]=i[j]+(l>>1^-(l&1));h[b*k+j]=i[j];g[b*k+j]=d[j]*(i[j]+c[j])}};
THREE.UTF8Loader.prototype.accumulateNormal=function(a,b,c,d,e){var f=d[8*a],g=d[8*a+1],h=d[8*a+2],i=d[8*b],k=d[8*b+1],j=d[8*b+2],l=d[8*c],m=d[8*c+1],d=d[8*c+2],i=i-f,k=k-g,j=j-h,l=l-f,m=m-g,d=d-h,f=k*d-j*m,g=j*l-i*d,h=i*m-k*l;e[3*a]=e[3*a]+f;e[3*a+1]=e[3*a+1]+g;e[3*a+2]=e[3*a+2]+h;e[3*b]=e[3*b]+f;e[3*b+1]=e[3*b+1]+g;e[3*b+2]=e[3*b+2]+h;e[3*c]=e[3*c]+f;e[3*c+1]=e[3*c+1]+g;e[3*c+2]=e[3*c+2]+h};
THREE.UTF8Loader.prototype.decompressMesh2=function(a,b,c,d,e,f){for(var g=c.decodeScales.length,h=c.decodeOffsets,i=c.decodeScales,c=b.attribRange[0],k=b.attribRange[1],j=b.codeRange[0],l=3*b.codeRange[2],m=new Uint16Array(l),p=new Int32Array(3*k),n=new Uint16Array(g),q=new Uint16Array(g*k),t=new Float32Array(g*k),s=0,x=0,u=0;u<l;u=u+3){var r=a.charCodeAt(j++),y=Math.min(u,96);if(r<y){var w=r%3,r=u-(r-w),v,A,F;switch(w){case 0:v=m[r+2];A=m[r+1];F=m[r+0];break;case 1:v=m[r+0];A=m[r+2];F=m[r+1];break;
case 2:v=m[r+1];A=m[r+0];F=m[r+2]}m[x++]=v;m[x++]=A;r=a.charCodeAt(j++);w=s-r;m[x++]=w;if(r===0){for(r=0;r<5;r++){y=a.charCodeAt(c+k*r+s);y=(y>>1^-(y&1))+q[g*v+r]+q[g*A+r]-q[g*F+r];n[r]=y;q[g*s+r]=y;t[g*s+r]=i[r]*(y+h[r])}s++}else this.copyAttrib(g,q,n,w);this.accumulateNormal(v,A,w,q,p)}else{w=s-(r-y);m[x++]=w;r===y?this.decodeAttrib2(a,g,h,i,c,k,t,q,n,s++):this.copyAttrib(g,q,n,w);r=a.charCodeAt(j++);y=s-r;m[x++]=y;r===0?this.decodeAttrib2(a,g,h,i,c,k,t,q,n,s++):this.copyAttrib(g,q,n,y);var r=a.charCodeAt(j++),
C=s-r;m[x++]=C;if(r===0){for(r=0;r<5;r++)n[r]=(q[g*w+r]+q[g*y+r])/2;this.decodeAttrib2(a,g,h,i,c,k,t,q,n,s++)}else this.copyAttrib(g,q,n,C);this.accumulateNormal(w,y,C,q,p)}}for(u=0;u<k;u++){h=p[3*u];v=p[3*u+1];A=p[3*u+2];F=511/Math.sqrt(h*h+v*v+A*A);i=a.charCodeAt(c+5*k+u);j=a.charCodeAt(c+6*k+u);l=a.charCodeAt(c+7*k+u);t[g*u+5]=F*h+(i>>1^-(i&1));t[g*u+6]=F*v+(j>>1^-(j&1));t[g*u+7]=F*A+(l>>1^-(l&1))}f(d,e,t,m,void 0,b)};
THREE.UTF8Loader.prototype.downloadMesh=function(a,b,c,d,e){function f(a){for(;h<c.length;){var f=c[h],j=f.indexRange;if(j){j=j[0]+3*j[1];if(a.responseText.length<j)break;g.decompressMesh(a.responseText,f,d,b,h,e)}else{j=f.codeRange;j=j[0]+j[1];if(a.responseText.length<j)break;g.decompressMesh2(a.responseText,f,d,b,h,e)}++h}}var g=this,h=0;getHttpRequest(a,function(a,b){(a.status===200||a.status===0)&&f(a,b)},f)};
THREE.UTF8Loader.prototype.downloadMeshes=function(a,b,c,d){for(var e in b)this.downloadMesh(a+e,e,b[e],c,d)};
THREE.UTF8Loader.prototype.createMeshCallback=function(a,b,c){var d=0,e=0,f={},g={},h={},i=b.urls,k;for(k in i){f[k]=i[k].length;g[k]=0;e++;h[k]=new THREE.Object3D}var j=new THREE.Object3D,l=new THREE.MTLLoader.MaterialCreator(a,b.options);l.setMaterials(b.materials);l.preload();var m=new THREE.UTF8Loader.GeometryCreator,p=new THREE.UTF8Loader.BufferGeometryCreator;return function(a,i,k,s,x,u){i=(b.options.useBuffers!==void 0?b.options.useBuffers:1)?p.create(k,s):m.create(k,s);u=l.create(u.material);
u=new THREE.Mesh(i,u);h[a].add(u);g[a]++;if(g[a]===f[a]){d++;j.add(h[a]);d===e&&c(j)}}};THREE.UTF8Loader.prototype.downloadModel=function(a,b,c,d){b=this.createMeshCallback(b,c,d);this.downloadMeshes(a,c.urls,c.decodeParams,b)};
THREE.UTF8Loader.prototype.downloadModelJson=function(a,b,c){getJsonRequest(a,function(d){if(!d.decodeParams)d.decodeParams=b&&b.decodeParams?b.decodeParams:DEFAULT_DECODE_PARAMS;d.options=b;var e=a.substr(0,a.lastIndexOf("/")+1),f=e;if(b&&b.geometryBase){e=b.geometryBase;e.charAt(e.length-1)!=="/"&&(e=e+"/")}if(b&&b.materialBase){f=b.materialBase;f.charAt(f.length-1)!=="/"&&(f=f+"/")}this.downloadModel(e,f,d,c)}.bind(this))};
function getHttpRequest(a,b,c){var d=new XMLHttpRequest;addListeners(d,{load:function(a){b(d,a)},progress:function(a){c(d,a)}});d.open("GET",a,true);d.send(null)}function getJsonRequest(a,b){getHttpRequest(a,function(a){b(JSON.parse(a.responseText))},function(){})}function addListeners(a,b){for(var c in b)a.addEventListener(c,b[c])}THREE.VTKLoader=function(){THREE.EventTarget.call(this)};
THREE.VTKLoader.prototype={constructor:THREE.VTKLoader,load:function(a){var b=this,c=new XMLHttpRequest;c.addEventListener("load",function(a){b.dispatchEvent({type:"load",content:b.parse(a.target.responseText)})},false);c.addEventListener("progress",function(a){b.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},false);c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},false);c.open("GET",a,true);c.send(null)},parse:function(a){var b=
new THREE.Geometry,c,d;for(c=/([\+|\-]?[\d]+[\.][\d|\-|e]+)[ ]+([\+|\-]?[\d]+[\.][\d|\-|e]+)[ ]+([\+|\-]?[\d]+[\.][\d|\-|e]+)/g;(d=c.exec(a))!=null;){var e=parseFloat(d[1]),f=parseFloat(d[2]);d=parseFloat(d[3]);b.vertices.push(new THREE.Vector3(e,f,d))}for(c=/3[ ]+([\d]+)[ ]+([\d]+)[ ]+([\d]+)/g;(d=c.exec(a))!=null;){e=parseInt(d[1]);f=parseInt(d[2]);d=parseInt(d[3]);b.faces.push(new THREE.Face3(e,f,d))}for(c=/4[ ]+([\d]+)[ ]+([\d]+)[ ]+([\d]+)[ ]+([\d]+)/g;(d=c.exec(a))!=null;){var e=parseInt(d[1]),
f=parseInt(d[2]),g=parseInt(d[3]);d=parseInt(d[4]);b.faces.push(new THREE.Face4(e,f,g,d))}b.computeCentroids();b.computeFaceNormals();b.computeVertexNormals();b.computeBoundingSphere();return b}};var LZMA=LZMA||{};LZMA.OutWindow=function(){this._windowSize=0};LZMA.OutWindow.prototype.create=function(a){if(!this._buffer||this._windowSize!==a)this._buffer=[];this._windowSize=a;this._streamPos=this._pos=0};
LZMA.OutWindow.prototype.flush=function(){var a=this._pos-this._streamPos;if(a!==0){for(;a--;)this._stream.writeByte(this._buffer[this._streamPos++]);if(this._pos>=this._windowSize)this._pos=0;this._streamPos=this._pos}};LZMA.OutWindow.prototype.releaseStream=function(){this.flush();this._stream=null};LZMA.OutWindow.prototype.setStream=function(a){this.releaseStream();this._stream=a};LZMA.OutWindow.prototype.init=function(a){if(!a)this._pos=this._streamPos=0};
LZMA.OutWindow.prototype.copyBlock=function(a,b){var c=this._pos-a-1;for(c<0&&(c=c+this._windowSize);b--;){c>=this._windowSize&&(c=0);this._buffer[this._pos++]=this._buffer[c++];this._pos>=this._windowSize&&this.flush()}};LZMA.OutWindow.prototype.putByte=function(a){this._buffer[this._pos++]=a;this._pos>=this._windowSize&&this.flush()};LZMA.OutWindow.prototype.getByte=function(a){a=this._pos-a-1;a<0&&(a=a+this._windowSize);return this._buffer[a]};LZMA.RangeDecoder=function(){};
LZMA.RangeDecoder.prototype.setStream=function(a){this._stream=a};LZMA.RangeDecoder.prototype.releaseStream=function(){this._stream=null};LZMA.RangeDecoder.prototype.init=function(){var a=5;this._code=0;for(this._range=-1;a--;)this._code=this._code<<8|this._stream.readByte()};
LZMA.RangeDecoder.prototype.decodeDirectBits=function(a){for(var b=0,c;a--;){this._range=this._range>>>1;c=this._code-this._range>>>31;this._code=this._code-(this._range&c-1);b=b<<1|1-c;if((this._range&4278190080)===0){this._code=this._code<<8|this._stream.readByte();this._range=this._range<<8}}return b};
LZMA.RangeDecoder.prototype.decodeBit=function(a,b){var c=a[b],d=(this._range>>>11)*c;if((this._code^2147483648)<(d^2147483648)){this._range=d;a[b]=a[b]+(2048-c>>>5);if((this._range&4278190080)===0){this._code=this._code<<8|this._stream.readByte();this._range=this._range<<8}return 0}this._range=this._range-d;this._code=this._code-d;a[b]=a[b]-(c>>>5);if((this._range&4278190080)===0){this._code=this._code<<8|this._stream.readByte();this._range=this._range<<8}return 1};
LZMA.initBitModels=function(a,b){for(;b--;)a[b]=1024};LZMA.BitTreeDecoder=function(a){this._models=[];this._numBitLevels=a};LZMA.BitTreeDecoder.prototype.init=function(){LZMA.initBitModels(this._models,1<<this._numBitLevels)};LZMA.BitTreeDecoder.prototype.decode=function(a){for(var b=1,c=this._numBitLevels;c--;)b=b<<1|a.decodeBit(this._models,b);return b-(1<<this._numBitLevels)};
LZMA.BitTreeDecoder.prototype.reverseDecode=function(a){for(var b=1,c=0,d=0,e;d<this._numBitLevels;++d){e=a.decodeBit(this._models,b);b=b<<1|e;c=c|e<<d}return c};LZMA.reverseDecode2=function(a,b,c,d){for(var e=1,f=0,g=0,h;g<d;++g){h=c.decodeBit(a,b+e);e=e<<1|h;f=f|h<<g}return f};LZMA.LenDecoder=function(){this._choice=[];this._lowCoder=[];this._midCoder=[];this._highCoder=new LZMA.BitTreeDecoder(8);this._numPosStates=0};
LZMA.LenDecoder.prototype.create=function(a){for(;this._numPosStates<a;++this._numPosStates){this._lowCoder[this._numPosStates]=new LZMA.BitTreeDecoder(3);this._midCoder[this._numPosStates]=new LZMA.BitTreeDecoder(3)}};LZMA.LenDecoder.prototype.init=function(){var a=this._numPosStates;for(LZMA.initBitModels(this._choice,2);a--;){this._lowCoder[a].init();this._midCoder[a].init()}this._highCoder.init()};
LZMA.LenDecoder.prototype.decode=function(a,b){return a.decodeBit(this._choice,0)===0?this._lowCoder[b].decode(a):a.decodeBit(this._choice,1)===0?8+this._midCoder[b].decode(a):16+this._highCoder.decode(a)};LZMA.Decoder2=function(){this._decoders=[]};LZMA.Decoder2.prototype.init=function(){LZMA.initBitModels(this._decoders,768)};LZMA.Decoder2.prototype.decodeNormal=function(a){var b=1;do b=b<<1|a.decodeBit(this._decoders,b);while(b<256);return b&255};
LZMA.Decoder2.prototype.decodeWithMatchByte=function(a,b){var c=1,d,e;do{d=b>>7&1;b=b<<1;e=a.decodeBit(this._decoders,(1+d<<8)+c);c=c<<1|e;if(d!==e){for(;c<256;)c=c<<1|a.decodeBit(this._decoders,c);break}}while(c<256);return c&255};LZMA.LiteralDecoder=function(){};
LZMA.LiteralDecoder.prototype.create=function(a,b){var c;if(!this._coders||!(this._numPrevBits===b&&this._numPosBits===a)){this._numPosBits=a;this._posMask=(1<<a)-1;this._numPrevBits=b;this._coders=[];for(c=1<<this._numPrevBits+this._numPosBits;c--;)this._coders[c]=new LZMA.Decoder2}};LZMA.LiteralDecoder.prototype.init=function(){for(var a=1<<this._numPrevBits+this._numPosBits;a--;)this._coders[a].init()};
LZMA.LiteralDecoder.prototype.getDecoder=function(a,b){return this._coders[((a&this._posMask)<<this._numPrevBits)+((b&255)>>>8-this._numPrevBits)]};
LZMA.Decoder=function(){this._outWindow=new LZMA.OutWindow;this._rangeDecoder=new LZMA.RangeDecoder;this._isMatchDecoders=[];this._isRepDecoders=[];this._isRepG0Decoders=[];this._isRepG1Decoders=[];this._isRepG2Decoders=[];this._isRep0LongDecoders=[];this._posSlotDecoder=[];this._posDecoders=[];this._posAlignDecoder=new LZMA.BitTreeDecoder(4);this._lenDecoder=new LZMA.LenDecoder;this._repLenDecoder=new LZMA.LenDecoder;this._literalDecoder=new LZMA.LiteralDecoder;this._dictionarySizeCheck=this._dictionarySize=
-1;this._posSlotDecoder[0]=new LZMA.BitTreeDecoder(6);this._posSlotDecoder[1]=new LZMA.BitTreeDecoder(6);this._posSlotDecoder[2]=new LZMA.BitTreeDecoder(6);this._posSlotDecoder[3]=new LZMA.BitTreeDecoder(6)};LZMA.Decoder.prototype.setDictionarySize=function(a){if(a<0)return false;if(this._dictionarySize!==a){this._dictionarySize=a;this._dictionarySizeCheck=Math.max(this._dictionarySize,1);this._outWindow.create(Math.max(this._dictionarySizeCheck,4096))}return true};
LZMA.Decoder.prototype.setLcLpPb=function(a,b,c){var d=1<<c;if(a>8||b>4||c>4)return false;this._literalDecoder.create(b,a);this._lenDecoder.create(d);this._repLenDecoder.create(d);this._posStateMask=d-1;return true};
LZMA.Decoder.prototype.init=function(){var a=4;this._outWindow.init(false);LZMA.initBitModels(this._isMatchDecoders,192);LZMA.initBitModels(this._isRep0LongDecoders,192);LZMA.initBitModels(this._isRepDecoders,12);LZMA.initBitModels(this._isRepG0Decoders,12);LZMA.initBitModels(this._isRepG1Decoders,12);LZMA.initBitModels(this._isRepG2Decoders,12);LZMA.initBitModels(this._posDecoders,114);for(this._literalDecoder.init();a--;)this._posSlotDecoder[a].init();this._lenDecoder.init();this._repLenDecoder.init();
this._posAlignDecoder.init();this._rangeDecoder.init()};
LZMA.Decoder.prototype.decode=function(a,b,c){var d=0,e=0,f=0,g=0,h=0,i=0,k=0;this._rangeDecoder.setStream(a);this._outWindow.setStream(b);for(this.init();c<0||i<c;){a=i&this._posStateMask;if(this._rangeDecoder.decodeBit(this._isMatchDecoders,(d<<4)+a)===0){k=this._literalDecoder.getDecoder(i++,k);k=d>=7?k.decodeWithMatchByte(this._rangeDecoder,this._outWindow.getByte(e)):k.decodeNormal(this._rangeDecoder);this._outWindow.putByte(k);d=d<4?0:d-(d<10?3:6)}else{if(this._rangeDecoder.decodeBit(this._isRepDecoders,
d)===1){k=0;if(this._rangeDecoder.decodeBit(this._isRepG0Decoders,d)===0){if(this._rangeDecoder.decodeBit(this._isRep0LongDecoders,(d<<4)+a)===0){d=d<7?9:11;k=1}}else{if(this._rangeDecoder.decodeBit(this._isRepG1Decoders,d)===0)b=f;else{if(this._rangeDecoder.decodeBit(this._isRepG2Decoders,d)===0)b=g;else{b=h;h=g}g=f}f=e;e=b}if(k===0){k=2+this._repLenDecoder.decode(this._rangeDecoder,a);d=d<7?8:11}}else{h=g;g=f;f=e;k=2+this._lenDecoder.decode(this._rangeDecoder,a);d=d<7?7:10;a=this._posSlotDecoder[k<=
5?k-2:3].decode(this._rangeDecoder);if(a>=4){b=(a>>1)-1;e=(2|a&1)<<b;if(a<14)e=e+LZMA.reverseDecode2(this._posDecoders,e-a-1,this._rangeDecoder,b);else{e=e+(this._rangeDecoder.decodeDirectBits(b-4)<<4);e=e+this._posAlignDecoder.reverseDecode(this._rangeDecoder);if(e<0){if(e===-1)break;return false}}}else e=a}if(e>=i||e>=this._dictionarySizeCheck)return false;this._outWindow.copyBlock(e,k);i=i+k;k=this._outWindow.getByte(0)}}this._outWindow.flush();this._outWindow.releaseStream();this._rangeDecoder.releaseStream();
return true};LZMA.Decoder.prototype.setDecoderProperties=function(a){var b,c;if(a.size<5)return false;b=a.readByte();c=b%9;b=~~(b/9);if(!this.setLcLpPb(c,b%5,~~(b/5)))return false;b=a.readByte();b=b|a.readByte()<<8;b=b|a.readByte()<<16;b=b+a.readByte()*16777216;return this.setDictionarySize(b)};LZMA.decompress=function(a,b,c,d){var e=new LZMA.Decoder;if(!e.setDecoderProperties(a))throw"Incorrect stream properties";if(!e.decode(b,c,d))throw"Error in data stream";return true};var CTM=CTM||{};
CTM.CompressionMethod={RAW:5718354,MG1:3229517,MG2:3295053};CTM.Flags={NORMALS:1};CTM.File=function(a){this.load(a)};CTM.File.prototype.load=function(a){this.header=new CTM.FileHeader(a);this.body=new CTM.FileBody(this.header);this.getReader().read(a,this.body)};CTM.File.prototype.getReader=function(){var a;switch(this.header.compressionMethod){case CTM.CompressionMethod.RAW:a=new CTM.ReaderRAW;break;case CTM.CompressionMethod.MG1:a=new CTM.ReaderMG1;break;case CTM.CompressionMethod.MG2:a=new CTM.ReaderMG2}return a};
CTM.FileHeader=function(a){a.readInt32();this.fileFormat=a.readInt32();this.compressionMethod=a.readInt32();this.vertexCount=a.readInt32();this.triangleCount=a.readInt32();this.uvMapCount=a.readInt32();this.attrMapCount=a.readInt32();this.flags=a.readInt32();this.comment=a.readString()};CTM.FileHeader.prototype.hasNormals=function(){return this.flags&CTM.Flags.NORMALS};
CTM.FileBody=function(a){var b=a.triangleCount*3,c=a.vertexCount*3,d=a.hasNormals()?a.vertexCount*3:0,e=a.vertexCount*2,f=a.vertexCount*4,g=0,h=new ArrayBuffer((b+c+d+e*a.uvMapCount+f*a.attrMapCount)*4);this.indices=new Uint32Array(h,0,b);this.vertices=new Float32Array(h,b*4,c);if(a.hasNormals())this.normals=new Float32Array(h,(b+c)*4,d);if(a.uvMapCount){this.uvMaps=[];for(g=0;g<a.uvMapCount;++g)this.uvMaps[g]={uv:new Float32Array(h,(b+c+d+g*e)*4,e)}}if(a.attrMapCount){this.attrMaps=[];for(g=0;g<
a.attrMapCount;++g)this.attrMaps[g]={attr:new Float32Array(h,(b+c+d+e*a.uvMapCount+g*f)*4,f)}}};
CTM.FileMG2Header=function(a){a.readInt32();this.vertexPrecision=a.readFloat32();this.normalPrecision=a.readFloat32();this.lowerBoundx=a.readFloat32();this.lowerBoundy=a.readFloat32();this.lowerBoundz=a.readFloat32();this.higherBoundx=a.readFloat32();this.higherBoundy=a.readFloat32();this.higherBoundz=a.readFloat32();this.divx=a.readInt32();this.divy=a.readInt32();this.divz=a.readInt32();this.sizex=(this.higherBoundx-this.lowerBoundx)/this.divx;this.sizey=(this.higherBoundy-this.lowerBoundy)/this.divy;
this.sizez=(this.higherBoundz-this.lowerBoundz)/this.divz};CTM.ReaderRAW=function(){};CTM.ReaderRAW.prototype.read=function(a,b){this.readIndices(a,b.indices);this.readVertices(a,b.vertices);b.normals&&this.readNormals(a,b.normals);b.uvMaps&&this.readUVMaps(a,b.uvMaps);b.attrMaps&&this.readAttrMaps(a,b.attrMaps)};CTM.ReaderRAW.prototype.readIndices=function(a,b){a.readInt32();a.readArrayInt32(b)};CTM.ReaderRAW.prototype.readVertices=function(a,b){a.readInt32();a.readArrayFloat32(b)};
CTM.ReaderRAW.prototype.readNormals=function(a,b){a.readInt32();a.readArrayFloat32(b)};CTM.ReaderRAW.prototype.readUVMaps=function(a,b){for(var c=0;c<b.length;++c){a.readInt32();b[c].name=a.readString();b[c].filename=a.readString();a.readArrayFloat32(b[c].uv)}};CTM.ReaderRAW.prototype.readAttrMaps=function(a,b){for(var c=0;c<b.length;++c){a.readInt32();b[c].name=a.readString();a.readArrayFloat32(b[c].attr)}};CTM.ReaderMG1=function(){};
CTM.ReaderMG1.prototype.read=function(a,b){this.readIndices(a,b.indices);this.readVertices(a,b.vertices);b.normals&&this.readNormals(a,b.normals);b.uvMaps&&this.readUVMaps(a,b.uvMaps);b.attrMaps&&this.readAttrMaps(a,b.attrMaps)};CTM.ReaderMG1.prototype.readIndices=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,3);LZMA.decompress(a,a,c,c.data.length);CTM.restoreIndices(b,b.length)};
CTM.ReaderMG1.prototype.readVertices=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,1);LZMA.decompress(a,a,c,c.data.length)};CTM.ReaderMG1.prototype.readNormals=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,3);LZMA.decompress(a,a,c,c.data.length)};
CTM.ReaderMG1.prototype.readUVMaps=function(a,b){for(var c=0;c<b.length;++c){a.readInt32();b[c].name=a.readString();b[c].filename=a.readString();a.readInt32();var d=new CTM.InterleavedStream(b[c].uv,2);LZMA.decompress(a,a,d,d.data.length)}};CTM.ReaderMG1.prototype.readAttrMaps=function(a,b){for(var c=0;c<b.length;++c){a.readInt32();b[c].name=a.readString();a.readInt32();var d=new CTM.InterleavedStream(b[c].attr,4);LZMA.decompress(a,a,d,d.data.length)}};CTM.ReaderMG2=function(){};
CTM.ReaderMG2.prototype.read=function(a,b){this.MG2Header=new CTM.FileMG2Header(a);this.readVertices(a,b.vertices);this.readIndices(a,b.indices);b.normals&&this.readNormals(a,b);b.uvMaps&&this.readUVMaps(a,b.uvMaps);b.attrMaps&&this.readAttrMaps(a,b.attrMaps)};CTM.ReaderMG2.prototype.readVertices=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,3);LZMA.decompress(a,a,c,c.data.length);c=this.readGridIndices(a,b);CTM.restoreVertices(b,this.MG2Header,c,this.MG2Header.vertexPrecision)};
CTM.ReaderMG2.prototype.readGridIndices=function(a,b){a.readInt32();a.readInt32();var c=new Uint32Array(b.length/3),d=new CTM.InterleavedStream(c,1);LZMA.decompress(a,a,d,d.data.length);CTM.restoreGridIndices(c,c.length);return c};CTM.ReaderMG2.prototype.readIndices=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,3);LZMA.decompress(a,a,c,c.data.length);CTM.restoreIndices(b,b.length)};
CTM.ReaderMG2.prototype.readNormals=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b.normals,3);LZMA.decompress(a,a,c,c.data.length);c=CTM.calcSmoothNormals(b.indices,b.vertices);CTM.restoreNormals(b.normals,c,this.MG2Header.normalPrecision)};
CTM.ReaderMG2.prototype.readUVMaps=function(a,b){for(var c=0;c<b.length;++c){a.readInt32();b[c].name=a.readString();b[c].filename=a.readString();var d=a.readFloat32();a.readInt32();var e=new CTM.InterleavedStream(b[c].uv,2);LZMA.decompress(a,a,e,e.data.length);CTM.restoreMap(b[c].uv,2,d)}};
CTM.ReaderMG2.prototype.readAttrMaps=function(a,b){for(var c=0;c<b.length;++c){a.readInt32();b[c].name=a.readString();var d=a.readFloat32();a.readInt32();var e=new CTM.InterleavedStream(b[c].attr,4);LZMA.decompress(a,a,e,e.data.length);CTM.restoreMap(b[c].attr,4,d)}};CTM.restoreIndices=function(a,b){var c=3;for(b>0&&(a[2]=a[2]+a[0]);c<b;c=c+3){a[c]=a[c]+a[c-3];a[c+1]=a[c]===a[c-3]?a[c+1]+a[c-2]:a[c+1]+a[c];a[c+2]=a[c+2]+a[c]}};
CTM.restoreGridIndices=function(a,b){for(var c=1;c<b;++c)a[c]=a[c]+a[c-1]};CTM.restoreVertices=function(a,b,c,d){for(var e,f,g,h,i,k=new Uint32Array(a.buffer,a.byteOffset,a.length),j=b.divx,l=j*b.divy,m=2147483647,p=0,n=0,q=0,t=c.length;n<t;q=q+3){g=e=c[n++];i=~~(g/l);g=g-~~(i*l);h=~~(g/j);g=g-~~(h*j);f=k[q];e===m&&(f=f+p);a[q]=b.lowerBoundx+g*b.sizex+d*f;a[q+1]=b.lowerBoundy+h*b.sizey+d*k[q+1];a[q+2]=b.lowerBoundz+i*b.sizez+d*k[q+2];m=e;p=f}};
CTM.restoreNormals=function(a,b,c){for(var d,e,f,g,h,i,k=new Uint32Array(a.buffer,a.byteOffset,a.length),j=0,l=a.length;j<l;j=j+3){d=k[j]*c;e=k[j+1];if(e===0){a[j]=b[j]*d;a[j+1]=b[j+1]*d;a[j+2]=b[j+2]*d}else{f=e<=4?(k[j+2]-2)*1.5707963267948966:(k[j+2]*4/e-2)*1.5707963267948966;e=e*c*1.5707963267948966;g=d*Math.sin(e);h=g*Math.cos(f);f=g*Math.sin(f);d=d*Math.cos(e);g=b[j+1];e=b[j]-b[j+2];i=Math.sqrt(2*g*g+e*e);if(i>1E-20){e=e/i;g=g/i}a[j]=b[j]*d+(b[j+1]*g-b[j+2]*e)*f-g*h;a[j+1]=b[j+1]*d-(b[j+2]+b[j])*
g*f+e*h;a[j+2]=b[j+2]*d+(b[j]*e+b[j+1]*g)*f+g*h}}};CTM.restoreMap=function(a,b,c){for(var d,e,f=new Uint32Array(a.buffer,a.byteOffset,a.length),g=0,h,i=a.length;g<b;++g){d=0;for(h=g;h<i;h=h+b){e=f[h];d=d+(e&1?-(e+1>>1):e>>1);a[h]=d*c}}};
CTM.calcSmoothNormals=function(a,b){var c=new Float32Array(b.length),d,e,f,g,h,i,k,j,l,m,p,n;p=0;for(n=a.length;p<n;){d=a[p++]*3;e=a[p++]*3;f=a[p++]*3;i=b[e]-b[d];j=b[f]-b[d];k=b[e+1]-b[d+1];l=b[f+1]-b[d+1];h=b[e+2]-b[d+2];m=b[f+2]-b[d+2];g=k*m-h*l;h=h*j-i*m;i=i*l-k*j;k=Math.sqrt(g*g+h*h+i*i);if(k>1E-10){g=g/k;h=h/k;i=i/k}c[d]=c[d]+g;c[d+1]=c[d+1]+h;c[d+2]=c[d+2]+i;c[e]=c[e]+g;c[e+1]=c[e+1]+h;c[e+2]=c[e+2]+i;c[f]=c[f]+g;c[f+1]=c[f+1]+h;c[f+2]=c[f+2]+i}p=0;for(n=c.length;p<n;p=p+3){k=Math.sqrt(c[p]*
c[p]+c[p+1]*c[p+1]+c[p+2]*c[p+2]);if(k>1E-10){c[p]=c[p]/k;c[p+1]=c[p+1]/k;c[p+2]=c[p+2]/k}}return c};CTM.isLittleEndian=function(){var a=new ArrayBuffer(2),b=new Uint8Array(a),a=new Uint16Array(a);b[0]=1;return a[0]===1}();CTM.InterleavedStream=function(a,b){this.data=new Uint8Array(a.buffer,a.byteOffset,a.byteLength);this.offset=CTM.isLittleEndian?3:0;this.count=b*4;this.len=this.data.length};
CTM.InterleavedStream.prototype.writeByte=function(a){this.data[this.offset]=a;this.offset=this.offset+this.count;if(this.offset>=this.len){this.offset=this.offset-(this.len-4);if(this.offset>=this.count)this.offset=this.offset-(this.count+(CTM.isLittleEndian?1:-1))}};CTM.Stream=function(a){this.data=a;this.offset=0};CTM.Stream.prototype.TWO_POW_MINUS23=Math.pow(2,-23);CTM.Stream.prototype.TWO_POW_MINUS126=Math.pow(2,-126);
CTM.Stream.prototype.readByte=function(){return this.data.charCodeAt(this.offset++)&255};CTM.Stream.prototype.readInt32=function(){var a=this.readByte(),a=a|this.readByte()<<8,a=a|this.readByte()<<16;return a|this.readByte()<<24};
CTM.Stream.prototype.readFloat32=function(){var a=this.readByte(),a=a+(this.readByte()<<8),b=this.readByte(),c=this.readByte(),a=a+((b&127)<<16),b=(c&127)<<1|(b&128)>>>7,c=c&128?-1:1;return b===255?a!==0?NaN:c*Infinity:b>0?c*(1+a*this.TWO_POW_MINUS23)*Math.pow(2,b-127):a!==0?c*a*this.TWO_POW_MINUS126:c*0};CTM.Stream.prototype.readString=function(){var a=this.readInt32();this.offset=this.offset+a;return this.data.substr(this.offset-a,a)};
CTM.Stream.prototype.readArrayInt32=function(a){for(var b=0,c=a.length;b<c;)a[b++]=this.readInt32();return a};CTM.Stream.prototype.readArrayFloat32=function(a){for(var b=0,c=a.length;b<c;)a[b++]=this.readFloat32();return a};THREE.CTMLoader=function(a){THREE.Loader.call(this,a)};THREE.CTMLoader.prototype=Object.create(THREE.Loader.prototype);
THREE.CTMLoader.prototype.loadParts=function(a,b,c){var d=this,e=new XMLHttpRequest,f=c.basePath?c.basePath:this.extractUrlBase(a);e.onreadystatechange=function(){if(e.readyState===4&&(e.status===200||e.status===0)){for(var a=JSON.parse(e.responseText),h=[],i=[],k=0,j=0;j<a.materials.length;j++)h[j]=THREE.Loader.prototype.createMaterial(a.materials[j],f);d.load(f+a.data,function(c){k=k+1;i.push(c);k===a.offsets.length&&b(i,h)},{useWorker:c.useWorker,useBuffers:c.useBuffers,offsets:a.offsets})}};e.open("GET",
a,true);e.overrideMimeType&&e.overrideMimeType("text/plain; charset=x-user-defined");e.setRequestHeader("Content-Type","text/plain");e.send(null)};
THREE.CTMLoader.prototype.load=function(a,b,c){var d=this,e=c.offsets!==void 0?c.offsets:[0],f=c.useBuffers!==void 0?c.useBuffers:true,g=new XMLHttpRequest;g.onreadystatechange=function(){if(g.readyState===4)if(g.status===200||g.status===0){var h=g.responseText;if(c.useWorker){var i=new Worker("js/loaders/ctm/CTMWorker.js");i.onmessage=function(a){for(var a=a.data,c=0;c<a.length;c++){var e=a[c];f?d.createModelBuffers(e,b):d.createModelClassic(e,b)}};i.postMessage({data:h,offsets:e})}else for(i=0;i<
e.length;i++){var k=new CTM.Stream(h);k.offset=e[i];k=new CTM.File(k);f?d.createModelBuffers(k,b):d.createModelClassic(k,b)}}else console.error("Couldn't load ["+a+"] ["+g.status+"]");else g.readyState!==3&&g.readyState===2&&g.getResponseHeader("Content-Length")};g.overrideMimeType("text/plain; charset=x-user-defined");g.open("GET",a,true);g.send(null)};
THREE.CTMLoader.prototype.createModelBuffers=function(a,b){var c=function(){this.materials=[];THREE.BufferGeometry.call(this);var b=a.body.indices,c=a.body.vertices,f=a.body.normals,g,h;if(a.body.uvMaps!==void 0&&a.body.uvMaps.length>0)g=a.body.uvMaps[0].uv;if(a.body.attrMaps!==void 0&&a.body.attrMaps.length>0&&a.body.attrMaps[0].name==="Color")h=a.body.attrMaps[0].attr;var i=new Uint32Array(b.length),k=new Float32Array(c.length),j,l,m;f&&(j=new Float32Array(f.length));g&&(l=new Float32Array(g.length));
h&&(m=new Float32Array(h.length));for(var p={},n=0,q=function(a){if(p[a]===void 0){p[a]=n;var b=a*3,d=a*3+1,i=a*3+2,q=n*3,r=n*3+1,s=n*3+2;k[q]=c[b];k[r]=c[d];k[s]=c[i];if(f){j[q]=f[b];j[r]=f[d];j[s]=f[i]}if(g){l[n*2]=g[a*2];l[n*2+1]=g[a*2+1]}if(h){m[n*4]=h[a*4];m[n*4+1]=h[a*4+1];m[n*4+2]=h[a*4+2];m[n*4+3]=h[a*4+3]}n=n+1}},t,s,x,u=0;u<b.length;u=u+3){t=b[u];s=b[u+1];x=b[u+2];q(t);q(s);q(x);i[u]=p[t];i[u+1]=p[s];i[u+2]=p[x]}b=i;c=k;f&&(f=j);g&&(g=l);h&&(h=m);this.offsets=[];i=b;q=0;s=c.length;x=0;t=
s;for(u=0;u<i.length;){for(var r=0;r<3;++r){var y=i[u++];y<s&&(s=y);y>x&&(x=y)}if(x-s>65535){u=u-3;for(s=q;s<u;++s)i[s]=i[s]-t;this.offsets.push({start:q,count:u-q,index:t});q=u;s=c.length;x=0}t=s}for(s=q;s<u;++s)i[s]=i[s]-t;this.offsets.push({start:q,count:u-q,index:t});b=new Uint16Array(b);u=this.attributes;u.index={itemSize:1,array:b,numItems:b.length};u.position={itemSize:3,array:c,numItems:c.length};f!==void 0&&(u.normal={itemSize:3,array:f,numItems:f.length});g!==void 0&&(u.uv={itemSize:2,array:g,
numItems:g.length});h!==void 0&&(u.color={itemSize:4,array:h,numItems:h.length})};c.prototype=Object.create(THREE.BufferGeometry.prototype);c=new c;c.attributes.normal===void 0&&c.computeVertexNormals();b(c)};
THREE.CTMLoader.prototype.createModelClassic=function(a,b){var c=function(){this.materials=[];THREE.Geometry.call(this);var b=[],c=[],f=[],g=a.body.vertices,h,i,k,j,l=g.length;for(j=0;j<l;j=j+3){h=g[j];i=g[j+1];k=g[j+2];this.vertices.push(new THREE.Vector3(h,i,k))}if(a.body.normals!==void 0){g=a.body.normals;l=g.length;for(j=0;j<l;j=j+3){h=g[j];i=g[j+1];k=g[j+2];b.push(h,i,k)}}if(a.body.uvMaps!==void 0&&a.body.uvMaps.length>0){g=a.body.uvMaps[0].uv;j=g.length;for(k=0;k<j;k=k+2){h=g[k];i=g[k+1];c.push(h,
i)}}if(a.body.attrMaps!==void 0&&a.body.attrMaps.length>0&&a.body.attrMaps[0].name==="Color"){g=a.body.attrMaps[0].attr;l=g.length;for(j=0;j<l;j=j+4){h=g[j];i=g[j+1];k=g[j+2];var m=new THREE.Color;m.setRGB(h,i,k);f.push(m)}}g=b.length>0?true:false;h=c.length>0?true:false;i=f.length>0?true:false;k=a.body.indices;var p,n,q,t,s,x,u,l=k.length;for(j=0;j<l;j=j+3){p=k[j];n=k[j+1];m=k[j+2];if(g){q=p;x=n;u=m;var r=b[n*3],y=b[n*3+1],w=b[n*3+2];s=b[m*3];var v=b[m*3+1],A=b[m*3+2];t=new THREE.Vector3(b[p*3],
b[p*3+1],b[p*3+2]);r=new THREE.Vector3(r,y,w);s=new THREE.Vector3(s,v,A);q=new THREE.Face3(q,x,u,[t,r,s],null,0)}else q=new THREE.Face3(p,n,m,null,null,0);this.faces.push(q);if(i){q.vertexColors[0]=f[p];q.vertexColors[1]=f[n];q.vertexColors[2]=f[m]}if(h){q=c[p*2];p=c[p*2+1];t=c[n*2];s=c[n*2+1];x=c[m*2];u=c[m*2+1];m=this.faceVertexUvs[0];n=t;t=s;s=[];s.push(new THREE.UV(q,p));s.push(new THREE.UV(n,t));s.push(new THREE.UV(x,u));m.push(s)}}this.computeCentroids();this.computeFaceNormals()};c.prototype=
Object.create(THREE.Geometry.prototype);b(new c)};
THREE.EffectComposer=function(a,b){this.renderer=a;this.renderTarget1=b;if(this.renderTarget1===void 0){var c=window.innerWidth||1,d=window.innerHeight||1;this.renderTargetParameters={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat,stencilBuffer:false};this.renderTarget1=new THREE.WebGLRenderTarget(c,d,this.renderTargetParameters)}this.renderTarget2=this.renderTarget1.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;this.passes=[];THREE.CopyShader===
void 0&&console.error("THREE.EffectComposer relies on THREE.CopyShader");this.copyPass=new THREE.ShaderPass(THREE.CopyShader)};
THREE.EffectComposer.prototype={swapBuffers:function(){var a=this.readBuffer;this.readBuffer=this.writeBuffer;this.writeBuffer=a},addPass:function(a){this.passes.push(a)},render:function(a){this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;var b=false,c,d,e=this.passes.length;for(d=0;d<e;d++){c=this.passes[d];if(c.enabled){c.render(this.renderer,this.writeBuffer,this.readBuffer,a,b);if(c.needsSwap){if(b){var f=this.renderer.context;f.stencilFunc(f.NOTEQUAL,1,4294967295);this.copyPass.render(this.renderer,
this.writeBuffer,this.readBuffer,a);f.stencilFunc(f.EQUAL,1,4294967295)}this.swapBuffers()}c instanceof THREE.MaskPass?b=true:c instanceof THREE.ClearMaskPass&&(b=false)}}},reset:function(a){this.renderTarget1=a;if(this.renderTarget1===void 0)this.renderTarget1=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight,this.renderTargetParameters);this.renderTarget2=this.renderTarget1.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2}};
THREE.EffectComposer.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1);THREE.EffectComposer.quad=new THREE.Mesh(new THREE.PlaneGeometry(2,2),null);THREE.EffectComposer.scene=new THREE.Scene;THREE.EffectComposer.scene.add(THREE.EffectComposer.quad);
THREE.BloomPass=function(a,b,c,d){var a=a!==void 0?a:1,b=b!==void 0?b:25,c=c!==void 0?c:4,d=d!==void 0?d:256,e={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat};this.renderTargetX=new THREE.WebGLRenderTarget(d,d,e);this.renderTargetY=new THREE.WebGLRenderTarget(d,d,e);THREE.CopyShader===void 0&&console.error("THREE.BloomPass relies on THREE.CopyShader");d=THREE.CopyShader;this.copyUniforms=THREE.UniformsUtils.clone(d.uniforms);this.copyUniforms.opacity.value=a;this.materialCopy=
new THREE.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader,blending:THREE.AdditiveBlending,transparent:true});THREE.ConvolutionShader===void 0&&console.error("THREE.BloomPass relies on THREE.ConvolutionShader");a=THREE.ConvolutionShader;this.convolutionUniforms=THREE.UniformsUtils.clone(a.uniforms);this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurx;this.convolutionUniforms.cKernel.value=THREE.ConvolutionShader.buildKernel(c);
this.materialConvolution=new THREE.ShaderMaterial({uniforms:this.convolutionUniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,defines:{KERNEL_SIZE_FLOAT:b.toFixed(1),KERNEL_SIZE_INT:b.toFixed(0)}});this.enabled=true;this.clear=this.needsSwap=false};
THREE.BloomPass.prototype={render:function(a,b,c,d,e){e&&a.context.disable(a.context.STENCIL_TEST);THREE.EffectComposer.quad.material=this.materialConvolution;this.convolutionUniforms.tDiffuse.value=c;this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurX;a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,this.renderTargetX,true);this.convolutionUniforms.tDiffuse.value=this.renderTargetX;this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurY;a.render(THREE.EffectComposer.scene,
THREE.EffectComposer.camera,this.renderTargetY,true);THREE.EffectComposer.quad.material=this.materialCopy;this.copyUniforms.tDiffuse.value=this.renderTargetY;e&&a.context.enable(a.context.STENCIL_TEST);a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,c,this.clear)}};THREE.BloomPass.blurX=new THREE.Vector2(0.001953125,0);THREE.BloomPass.blurY=new THREE.Vector2(0,0.001953125);
THREE.DotScreenPass=function(a,b,c){THREE.DotScreenShader===void 0&&console.error("THREE.DotScreenPass relies on THREE.DotScreenShader");var d=THREE.DotScreenShader;this.uniforms=THREE.UniformsUtils.clone(d.uniforms);a!==void 0&&this.uniforms.center.value.copy(a);if(b!==void 0)this.uniforms.angle.value=b;if(c!==void 0)this.uniforms.scale.value=c;this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader});this.enabled=true;this.renderToScreen=
false;this.needsSwap=true};THREE.DotScreenPass.prototype={render:function(a,b,c){this.uniforms.tDiffuse.value=c;this.uniforms.tSize.value.set(c.width,c.height);THREE.EffectComposer.quad.material=this.material;this.renderToScreen?a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera):a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,b,false)}};
THREE.FilmPass=function(a,b,c,d){THREE.FilmShader===void 0&&console.error("THREE.FilmPass relies on THREE.FilmShader");var e=THREE.FilmShader;this.uniforms=THREE.UniformsUtils.clone(e.uniforms);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader});if(d!==void 0)this.uniforms.grayscale.value=d;if(a!==void 0)this.uniforms.nIntensity.value=a;if(b!==void 0)this.uniforms.sIntensity.value=b;if(c!==void 0)this.uniforms.sCount.value=c;
this.enabled=true;this.renderToScreen=false;this.needsSwap=true};THREE.FilmPass.prototype={render:function(a,b,c,d){this.uniforms.tDiffuse.value=c;this.uniforms.time.value=this.uniforms.time.value+d;THREE.EffectComposer.quad.material=this.material;this.renderToScreen?a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera):a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,b,false)}};
THREE.MaskPass=function(a,b){this.scene=a;this.camera=b;this.clear=this.enabled=true;this.inverse=this.needsSwap=false};
THREE.MaskPass.prototype={render:function(a,b,c){var d=a.context;d.colorMask(false,false,false,false);d.depthMask(false);var e,f;if(this.inverse){e=0;f=1}else{e=1;f=0}d.enable(d.STENCIL_TEST);d.stencilOp(d.REPLACE,d.REPLACE,d.REPLACE);d.stencilFunc(d.ALWAYS,e,4294967295);d.clearStencil(f);a.render(this.scene,this.camera,c,this.clear);a.render(this.scene,this.camera,b,this.clear);d.colorMask(true,true,true,true);d.depthMask(true);d.stencilFunc(d.EQUAL,1,4294967295);d.stencilOp(d.KEEP,d.KEEP,d.KEEP)}};
THREE.ClearMaskPass=function(){this.enabled=true};THREE.ClearMaskPass.prototype={render:function(a){a=a.context;a.disable(a.STENCIL_TEST)}};THREE.RenderPass=function(a,b,c,d,e){this.scene=a;this.camera=b;this.overrideMaterial=c;this.clearColor=d;this.clearAlpha=e!==void 0?e:1;this.oldClearColor=new THREE.Color;this.oldClearAlpha=1;this.clear=this.enabled=true;this.needsSwap=false};
THREE.RenderPass.prototype={render:function(a,b,c){this.scene.overrideMaterial=this.overrideMaterial;if(this.clearColor){this.oldClearColor.copy(a.getClearColor());this.oldClearAlpha=a.getClearAlpha();a.setClearColor(this.clearColor,this.clearAlpha)}a.render(this.scene,this.camera,c,this.clear);this.clearColor&&a.setClearColor(this.oldClearColor,this.oldClearAlpha);this.scene.overrideMaterial=null}};
THREE.SavePass=function(a){THREE.CopyShader===void 0&&console.error("THREE.SavePass relies on THREE.CopyShader");var b=THREE.CopyShader;this.textureID="tDiffuse";this.uniforms=THREE.UniformsUtils.clone(b.uniforms);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:b.vertexShader,fragmentShader:b.fragmentShader});this.renderTarget=a;if(this.renderTarget===void 0){this.renderTargetParameters={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat,stencilBuffer:false};
this.renderTarget=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight,this.renderTargetParameters)}this.enabled=true;this.clear=this.needsSwap=false};THREE.SavePass.prototype={render:function(a,b,c){if(this.uniforms[this.textureID])this.uniforms[this.textureID].value=c;THREE.EffectComposer.quad.material=this.material;a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,this.renderTarget,this.clear)}};
THREE.ShaderPass=function(a,b){this.textureID=b!==void 0?b:"tDiffuse";this.uniforms=THREE.UniformsUtils.clone(a.uniforms);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader});this.renderToScreen=false;this.needsSwap=this.enabled=true;this.clear=false};
THREE.ShaderPass.prototype={render:function(a,b,c){if(this.uniforms[this.textureID])this.uniforms[this.textureID].value=c;THREE.EffectComposer.quad.material=this.material;this.renderToScreen?a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera):a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,b,this.clear)}};
THREE.TexturePass=function(a,b){THREE.CopyShader===void 0&&console.error("THREE.TexturePass relies on THREE.CopyShader");var c=THREE.CopyShader;this.uniforms=THREE.UniformsUtils.clone(c.uniforms);this.uniforms.opacity.value=b!==void 0?b:1;this.uniforms.tDiffuse.value=a;this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader});this.enabled=true;this.needsSwap=false};
THREE.TexturePass.prototype={render:function(a,b,c){THREE.EffectComposer.quad.material=this.material;a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,c)}};THREE.CSS3DObject=function(a){THREE.Object3D.call(this);this.element=a;this.element.style.position="absolute";this.element.style.WebkitTransformStyle="preserve-3d";this.element.style.MozTransformStyle="preserve-3d";this.element.style.oTransformStyle="preserve-3d"};THREE.CSS3DObject.prototype=Object.create(THREE.Object3D.prototype);
THREE.CSS3DRenderer=function(){console.log("THREE.CSS3DRenderer",THREE.REVISION);var a,b,c,d,e=new THREE.Projector;this.domElement=document.createElement("div");this.domElement.style.WebkitTransformStyle="preserve-3d";this.domElement.style.WebkitPerspectiveOrigin="50% 50%";this.domElement.style.MozTransformStyle="preserve-3d";this.domElement.style.MozPerspectiveOrigin="50% 50%";this.domElement.style.oTransformStyle="preserve-3d";this.domElement.style.oPerspectiveOrigin="50% 50%";this.cameraElement=
document.createElement("div");this.cameraElement.style.WebkitTransformStyle="preserve-3d";this.cameraElement.style.MozTransformStyle="preserve-3d";this.cameraElement.style.oTransformStyle="preserve-3d";this.domElement.appendChild(this.cameraElement);this.setSize=function(e,f){a=e;b=f;c=a/2;d=b/2;this.domElement.style.width=e+"px";this.domElement.style.height=f+"px";this.cameraElement.style.width=e+"px";this.cameraElement.style.height=f+"px"};var f=function(a){return Math.abs(a)<1E-6?0:a};this.render=
function(a,h){var i=0.5/Math.tan(h.fov*Math.PI/360)*b;this.domElement.style.WebkitPerspective=i+"px";this.domElement.style.MozPerspective=i+"px";this.domElement.style.oPerspective=i+"px";var i="translate3d(0,0,"+i+"px)",k;k=h.matrixWorldInverse.elements;k="matrix3d("+f(k[0])+","+f(-k[1])+","+f(k[2])+","+f(k[3])+","+f(k[4])+","+f(-k[5])+","+f(k[6])+","+f(k[7])+","+f(k[8])+","+f(-k[9])+","+f(k[10])+","+f(k[11])+","+f(k[12])+","+f(-k[13])+","+f(k[14])+","+f(k[15])+")";var j=i+k+" translate3d("+c+"px,"+
d+"px, 0)";this.cameraElement.style.WebkitTransform=j;this.cameraElement.style.MozTransform=j;this.cameraElement.style.oTransform=j;i=e.projectScene(a,h,false).objects;k=0;for(var l=i.length;k<l;k++){j=i[k].object;if(j instanceof THREE.CSS3DObject){var m=j.element,j=j.matrixWorld.elements,j="translate3d(-50%,-50%,0) scale3d(1,-1,1) matrix3d("+f(j[0])+","+f(j[1])+","+f(j[2])+","+f(j[3])+","+f(j[4])+","+f(j[5])+","+f(j[6])+","+f(j[7])+","+f(j[8])+","+f(j[9])+","+f(j[10])+","+f(j[11])+","+f(j[12])+","+
f(j[13])+","+f(j[14])+","+f(j[15])+")";m.style.WebkitTransform=j;m.style.MozTransform=j;m.style.oTransform=j;m.parentNode!==this.cameraElement&&this.cameraElement.appendChild(m)}}}};
THREE.DOMRenderer=function(){console.log("THREE.DOMRenderer",THREE.REVISION);var a,b,c,d,e,f,g,h=new THREE.Projector;a:{for(var i=["transform","MozTransform","WebkitTransform","msTransform","OTransform"],k=document.documentElement,j=0;j<i.length;j++)if(typeof k.style[i[j]]==="string"){g=i[j];break a}g=null}this.domElement=document.createElement("div");this.setSize=function(a,b){c=a;d=b;e=c/2;f=d/2};this.render=function(c,d){var i,j,k,t,s,x;a=h.projectScene(c,d);b=a.elements;i=0;for(j=b.length;i<j;i++){k=
b[i];if(k instanceof THREE.RenderableParticle&&k.material instanceof THREE.ParticleDOMMaterial){t=k.material.domElement;s=k.x*e+e-(t.offsetWidth>>1);x=k.y*f+f-(t.offsetHeight>>1);t.style.left=s+"px";t.style.top=x+"px";t.style.zIndex=Math.abs(Math.floor((1-k.z)*d.far/d.near));g&&(t.style[g]="scale("+k.scale.x*e+","+k.scale.y*f+")")}}}};
THREE.SVGRenderer=function(){function a(a,b,c,d){var e,f,g,h,i,j;e=0;for(f=a.length;e<f;e++){g=a[e];h=g.color;if(g instanceof THREE.DirectionalLight){i=g.matrixWorld.getPosition().normalize();j=c.dot(i);if(!(j<=0)){j=j*g.intensity;d.r=d.r+h.r*j;d.g=d.g+h.g*j;d.b=d.b+h.b*j}}else if(g instanceof THREE.PointLight){i=g.matrixWorld.getPosition();j=c.dot(G.sub(i,b).normalize());if(!(j<=0)){j=j*(g.distance==0?1:1-Math.min(b.distanceTo(i)/g.distance,1));if(j!=0){j=j*g.intensity;d.r=d.r+h.r*j;d.g=d.g+h.g*
j;d.b=d.b+h.b*j}}}}}function b(a){if(H[a]==null){H[a]=document.createElementNS("http://www.w3.org/2000/svg","path");M==0&&H[a].setAttribute("shape-rendering","crispEdges")}return H[a]}function c(a){a=(a+1)*0.5;return a<0?0:a>1?1:a}console.log("THREE.SVGRenderer",THREE.REVISION);var d=this,e,f,g,h=new THREE.Projector,i=document.createElementNS("http://www.w3.org/2000/svg","svg"),k,j,l,m,p,n,q,t,s=new THREE.Rectangle,x=new THREE.Rectangle,u=false,r=new THREE.Color,y=new THREE.Color,w=new THREE.Color,
v=new THREE.Color,A=new THREE.Color,F=new THREE.Color,C,G=new THREE.Vector3,H=[],D=[],J,L,K,M=1;this.domElement=i;this.sortElements=this.sortObjects=this.autoClear=true;this.info={render:{vertices:0,faces:0}};this.setQuality=function(a){switch(a){case "high":M=1;break;case "low":M=0}};this.setSize=function(a,b){k=a;j=b;l=k/2;m=j/2;i.setAttribute("viewBox",-l+" "+-m+" "+k+" "+j);i.setAttribute("width",k);i.setAttribute("height",j);s.set(-l,-m,l,m)};this.clear=function(){for(;i.childNodes.length>0;)i.removeChild(i.childNodes[0])};
this.render=function(j,k){if(k instanceof THREE.Camera===false)console.error("THREE.SVGRenderer.render: camera is not an instance of THREE.Camera.");else{var G,H,E,O;this.autoClear&&this.clear();d.info.render.vertices=0;d.info.render.faces=0;e=h.projectScene(j,k,this.sortObjects,this.sortElements);f=e.elements;g=e.lights;K=L=0;if(u=g.length>0){v.setRGB(0,0,0);A.setRGB(0,0,0);F.setRGB(0,0,0);G=0;for(H=g.length;G<H;G++){O=g[G];E=O.color;if(O instanceof THREE.AmbientLight){v.r=v.r+E.r;v.g=v.g+E.g;v.b=
v.b+E.b}else if(O instanceof THREE.DirectionalLight){A.r=A.r+E.r;A.g=A.g+E.g;A.b=A.b+E.b}else if(O instanceof THREE.PointLight){F.r=F.r+E.r;F.g=F.g+E.g;F.b=F.b+E.b}}}G=0;for(H=f.length;G<H;G++){E=f[G];O=E.material;if(!(O===void 0||O.visible===false)){x.empty();if(E instanceof THREE.RenderableParticle){p=E;p.x=p.x*l;p.y=p.y*-m}else if(E instanceof THREE.RenderableLine){p=E.v1;n=E.v2;p.positionScreen.x=p.positionScreen.x*l;p.positionScreen.y=p.positionScreen.y*-m;n.positionScreen.x=n.positionScreen.x*
l;n.positionScreen.y=n.positionScreen.y*-m;x.addPoint(p.positionScreen.x,p.positionScreen.y);x.addPoint(n.positionScreen.x,n.positionScreen.y);if(s.intersects(x)){E=p;var Q=n,ja=K++;if(D[ja]==null){D[ja]=document.createElementNS("http://www.w3.org/2000/svg","line");M==0&&D[ja].setAttribute("shape-rendering","crispEdges")}J=D[ja];J.setAttribute("x1",E.positionScreen.x);J.setAttribute("y1",E.positionScreen.y);J.setAttribute("x2",Q.positionScreen.x);J.setAttribute("y2",Q.positionScreen.y);if(O instanceof
THREE.LineBasicMaterial){J.setAttribute("style","fill: none; stroke: "+O.color.getContextStyle()+"; stroke-width: "+O.linewidth+"; stroke-opacity: "+O.opacity+"; stroke-linecap: "+O.linecap+"; stroke-linejoin: "+O.linejoin);i.appendChild(J)}}}else if(E instanceof THREE.RenderableFace3){p=E.v1;n=E.v2;q=E.v3;p.positionScreen.x=p.positionScreen.x*l;p.positionScreen.y=p.positionScreen.y*-m;n.positionScreen.x=n.positionScreen.x*l;n.positionScreen.y=n.positionScreen.y*-m;q.positionScreen.x=q.positionScreen.x*
l;q.positionScreen.y=q.positionScreen.y*-m;x.addPoint(p.positionScreen.x,p.positionScreen.y);x.addPoint(n.positionScreen.x,n.positionScreen.y);x.addPoint(q.positionScreen.x,q.positionScreen.y);if(s.intersects(x)){var Q=p,ja=n,sa=q;d.info.render.vertices=d.info.render.vertices+3;d.info.render.faces++;J=b(L++);J.setAttribute("d","M "+Q.positionScreen.x+" "+Q.positionScreen.y+" L "+ja.positionScreen.x+" "+ja.positionScreen.y+" L "+sa.positionScreen.x+","+sa.positionScreen.y+"z");if(O instanceof THREE.MeshBasicMaterial){r.copy(O.color);
if(O.vertexColors===THREE.FaceColors){r.r=r.r*E.color.r;r.g=r.g*E.color.g;r.b=r.b*E.color.b}}else if(O instanceof THREE.MeshLambertMaterial){y.copy(O.color);w.copy(O.emissive);if(O.vertexColors===THREE.FaceColors){y.r=y.r*E.color.r;y.g=y.g*E.color.g;y.b=y.b*E.color.b}if(u){r.r=v.r;r.g=v.g;r.b=v.b;a(g,E.centroidWorld,E.normalWorld,r);r.r=r.r*y.r+w.r;r.g=r.g*y.g+w.g;r.b=r.b*y.b+w.b}else r.copy(y)}else if(O instanceof THREE.MeshDepthMaterial){C=1-O.__2near/(O.__farPlusNear-E.z*O.__farMinusNear);r.setRGB(C,
C,C)}else O instanceof THREE.MeshNormalMaterial&&r.setRGB(c(E.normalWorld.x),c(E.normalWorld.y),c(E.normalWorld.z));O.wireframe?J.setAttribute("style","fill: none; stroke: "+r.getContextStyle()+"; stroke-width: "+O.wireframeLinewidth+"; stroke-opacity: "+O.opacity+"; stroke-linecap: "+O.wireframeLinecap+"; stroke-linejoin: "+O.wireframeLinejoin):J.setAttribute("style","fill: "+r.getContextStyle()+"; fill-opacity: "+O.opacity);i.appendChild(J)}}else if(E instanceof THREE.RenderableFace4){p=E.v1;n=
E.v2;q=E.v3;t=E.v4;p.positionScreen.x=p.positionScreen.x*l;p.positionScreen.y=p.positionScreen.y*-m;n.positionScreen.x=n.positionScreen.x*l;n.positionScreen.y=n.positionScreen.y*-m;q.positionScreen.x=q.positionScreen.x*l;q.positionScreen.y=q.positionScreen.y*-m;t.positionScreen.x=t.positionScreen.x*l;t.positionScreen.y=t.positionScreen.y*-m;x.addPoint(p.positionScreen.x,p.positionScreen.y);x.addPoint(n.positionScreen.x,n.positionScreen.y);x.addPoint(q.positionScreen.x,q.positionScreen.y);x.addPoint(t.positionScreen.x,
t.positionScreen.y);if(s.intersects(x)){var Q=p,ja=n,sa=q,P=t;d.info.render.vertices=d.info.render.vertices+4;d.info.render.faces++;J=b(L++);J.setAttribute("d","M "+Q.positionScreen.x+" "+Q.positionScreen.y+" L "+ja.positionScreen.x+" "+ja.positionScreen.y+" L "+sa.positionScreen.x+","+sa.positionScreen.y+" L "+P.positionScreen.x+","+P.positionScreen.y+"z");if(O instanceof THREE.MeshBasicMaterial){r.copy(O.color);if(O.vertexColors===THREE.FaceColors){r.r=r.r*E.color.r;r.g=r.g*E.color.g;r.b=r.b*E.color.b}}else if(O instanceof
THREE.MeshLambertMaterial){y.copy(O.color);w.copy(O.emissive);if(O.vertexColors===THREE.FaceColors){y.r=y.r*E.color.r;y.g=y.g*E.color.g;y.b=y.b*E.color.b}if(u){r.r=v.r;r.g=v.g;r.b=v.b;a(g,E.centroidWorld,E.normalWorld,r);r.r=r.r*y.r+w.r;r.g=r.g*y.g+w.g;r.b=r.b*y.b+w.b}else r.copy(y)}else if(O instanceof THREE.MeshDepthMaterial){C=1-O.__2near/(O.__farPlusNear-E.z*O.__farMinusNear);r.setRGB(C,C,C)}else O instanceof THREE.MeshNormalMaterial&&r.setRGB(c(E.normalWorld.x),c(E.normalWorld.y),c(E.normalWorld.z));
O.wireframe?J.setAttribute("style","fill: none; stroke: "+r.getContextStyle()+"; stroke-width: "+O.wireframeLinewidth+"; stroke-opacity: "+O.opacity+"; stroke-linecap: "+O.wireframeLinecap+"; stroke-linejoin: "+O.wireframeLinejoin):J.setAttribute("style","fill: "+r.getContextStyle()+"; fill-opacity: "+O.opacity);i.appendChild(J)}}}}}}};THREE.BasicShader={uniforms:{},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"void main() {\ngl_FragColor = vec4( 1.0, 0.0, 0.0, 0.5 );\n}"};
THREE.BleachBypassShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 base = texture2D( tDiffuse, vUv );\nvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\nfloat lum = dot( lumCoeff, base.rgb );\nvec3 blend = vec3( lum );\nfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\nvec3 result1 = 2.0 * base.rgb * blend;\nvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\nvec3 newColor = mix( result1, result2, L );\nfloat A2 = opacity * base.a;\nvec3 mixRGB = A2 * newColor.rgb;\nmixRGB += ( ( 1.0 - A2 ) * base.rgb );\ngl_FragColor = vec4( mixRGB, base.a );\n}"};
THREE.BlendShader={uniforms:{tDiffuse1:{type:"t",value:null},tDiffuse2:{type:"t",value:null},mixRatio:{type:"f",value:0.5},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform float mixRatio;\nuniform sampler2D tDiffuse1;\nuniform sampler2D tDiffuse2;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel1 = texture2D( tDiffuse1, vUv );\nvec4 texel2 = texture2D( tDiffuse2, vUv );\ngl_FragColor = opacity * mix( texel1, texel2, mixRatio );\n}"};
THREE.BokehShader={uniforms:{tColor:{type:"t",value:null},tDepth:{type:"t",value:null},focus:{type:"f",value:1},aspect:{type:"f",value:1},aperture:{type:"f",value:0.025},maxblur:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nuniform sampler2D tColor;\nuniform sampler2D tDepth;\nuniform float maxblur;\nuniform float aperture;\nuniform float focus;\nuniform float aspect;\nvoid main() {\nvec2 aspectcorrect = vec2( 1.0, aspect );\nvec4 depth1 = texture2D( tDepth, vUv );\nfloat factor = depth1.x - focus;\nvec2 dofblur = vec2 ( clamp( factor * aperture, -maxblur, maxblur ) );\nvec2 dofblur9 = dofblur * 0.9;\nvec2 dofblur7 = dofblur * 0.7;\nvec2 dofblur4 = dofblur * 0.4;\nvec4 col = vec4( 0.0 );\ncol += texture2D( tColor, vUv.xy );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur4 );\ngl_FragColor = col / 41.0;\ngl_FragColor.a = 1.0;\n}"};
THREE.BrightnessContrastShader={uniforms:{tDiffuse:{type:"t",value:null},brightness:{type:"f",value:0},contrast:{type:"f",value:0}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float brightness;\nuniform float contrast;\nvarying vec2 vUv;\nvoid main() {\ngl_FragColor = texture2D( tDiffuse, vUv );\ngl_FragColor.rgb += brightness;\nif (contrast > 0.0) {\ngl_FragColor.rgb = (gl_FragColor.rgb - 0.5) / (1.0 - contrast) + 0.5;\n} else {\ngl_FragColor.rgb = (gl_FragColor.rgb - 0.5) * (1.0 + contrast) + 0.5;\n}\n}"};
THREE.ColorCorrectionShader={uniforms:{tDiffuse:{type:"t",value:null},powRGB:{type:"v3",value:new THREE.Vector3(2,2,2)},mulRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform vec3 powRGB;\nuniform vec3 mulRGB;\nvarying vec2 vUv;\nvoid main() {\ngl_FragColor = texture2D( tDiffuse, vUv );\ngl_FragColor.rgb = mulRGB * pow( gl_FragColor.rgb, powRGB );\n}"};
THREE.ColorifyShader={uniforms:{tDiffuse:{type:"t",value:null},color:{type:"c",value:new THREE.Color(16777215)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform vec3 color;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\nvec3 luma = vec3( 0.299, 0.587, 0.114 );\nfloat v = dot( texel.xyz, luma );\ngl_FragColor = vec4( v * color, texel.w );\n}"};
THREE.ConvolutionShader={defines:{KERNEL_SIZE_FLOAT:"25.0",KERNEL_SIZE_INT:"25"},uniforms:{tDiffuse:{type:"t",value:null},uImageIncrement:{type:"v2",value:new THREE.Vector2(0.001953125,0)},cKernel:{type:"fv1",value:[]}},vertexShader:"uniform vec2 uImageIncrement;\nvarying vec2 vUv;\nvoid main() {\nvUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float cKernel[ KERNEL_SIZE_INT ];\nuniform sampler2D tDiffuse;\nuniform vec2 uImageIncrement;\nvarying vec2 vUv;\nvoid main() {\nvec2 imageCoord = vUv;\nvec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\nfor( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {\nsum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\nimageCoord += uImageIncrement;\n}\ngl_FragColor = sum;\n}",
buildKernel:function(a){var b,c,d,e,f=2*Math.ceil(a*3)+1;f>25&&(f=25);e=(f-1)*0.5;c=Array(f);for(b=d=0;b<f;++b){c[b]=Math.exp(-((b-e)*(b-e))/(2*a*a));d=d+c[b]}for(b=0;b<f;++b)c[b]=c[b]/d;return c}};THREE.CopyShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\ngl_FragColor = opacity * texel;\n}"};
THREE.DOFMipMapShader={uniforms:{tColor:{type:"t",value:null},tDepth:{type:"t",value:null},focus:{type:"f",value:1},maxblur:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float focus;\nuniform float maxblur;\nuniform sampler2D tColor;\nuniform sampler2D tDepth;\nvarying vec2 vUv;\nvoid main() {\nvec4 depth = texture2D( tDepth, vUv );\nfloat factor = depth.x - focus;\nvec4 col = texture2D( tColor, vUv, 2.0 * maxblur * abs( focus - depth.x ) );\ngl_FragColor = col;\ngl_FragColor.a = 1.0;\n}"};
THREE.DotScreenShader={uniforms:{tDiffuse:{type:"t",value:null},tSize:{type:"v2",value:new THREE.Vector2(256,256)},center:{type:"v2",value:new THREE.Vector2(0.5,0.5)},angle:{type:"f",value:1.57},scale:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform vec2 center;\nuniform float angle;\nuniform float scale;\nuniform vec2 tSize;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nfloat pattern() {\nfloat s = sin( angle ), c = cos( angle );\nvec2 tex = vUv * tSize - center;\nvec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;\nreturn ( sin( point.x ) * sin( point.y ) ) * 4.0;\n}\nvoid main() {\nvec4 color = texture2D( tDiffuse, vUv );\nfloat average = ( color.r + color.g + color.b ) / 3.0;\ngl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );\n}"};
THREE.FilmShader={uniforms:{tDiffuse:{type:"t",value:null},time:{type:"f",value:0},nIntensity:{type:"f",value:0.5},sIntensity:{type:"f",value:0.05},sCount:{type:"f",value:4096},grayscale:{type:"i",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float time;\nuniform bool grayscale;\nuniform float nIntensity;\nuniform float sIntensity;\nuniform float sCount;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 cTextureScreen = texture2D( tDiffuse, vUv );\nfloat x = vUv.x * vUv.y * time *  1000.0;\nx = mod( x, 13.0 ) * mod( x, 123.0 );\nfloat dx = mod( x, 0.01 );\nvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\nvec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\ncResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\ncResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\nif( grayscale ) {\ncResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\n}\ngl_FragColor =  vec4( cResult, cTextureScreen.a );\n}"};
THREE.FocusShader={uniforms:{tDiffuse:{type:"t",value:null},screenWidth:{type:"f",value:1024},screenHeight:{type:"f",value:1024},sampleDistance:{type:"f",value:0.94},waveFactor:{type:"f",value:0.00125}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float screenWidth;\nuniform float screenHeight;\nuniform float sampleDistance;\nuniform float waveFactor;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 color, org, tmp, add;\nfloat sample_dist, f;\nvec2 vin;\nvec2 uv = vUv;\nadd = color = org = texture2D( tDiffuse, uv );\nvin = ( uv - vec2( 0.5 ) ) * vec2( 1.4 );\nsample_dist = dot( vin, vin ) * 2.0;\nf = ( waveFactor * 100.0 + sample_dist ) * sampleDistance * 4.0;\nvec2 sampleSize = vec2(  1.0 / screenWidth, 1.0 / screenHeight ) * vec2( f );\nadd += tmp = texture2D( tDiffuse, uv + vec2( 0.111964, 0.993712 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( 0.846724, 0.532032 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( 0.943883, -0.330279 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( 0.330279, -0.943883 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( -0.532032, -0.846724 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( -0.993712, -0.111964 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( -0.707107, 0.707107 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\ncolor = color * vec4( 2.0 ) - ( add / vec4( 8.0 ) );\ncolor = color + ( add / vec4( 8.0 ) - color ) * ( vec4( 1.0 ) - vec4( sample_dist * 0.5 ) );\ngl_FragColor = vec4( color.rgb * color.rgb * vec3( 0.95 ) + color.rgb, 1.0 );\n}"};
THREE.FXAAShader={uniforms:{tDiffuse:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2(1/1024,1/512)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform vec2 resolution;\nvarying vec2 vUv;\n#define FXAA_REDUCE_MIN   (1.0/128.0)\n#define FXAA_REDUCE_MUL   (1.0/8.0)\n#define FXAA_SPAN_MAX     8.0\nvoid main() {\nvec3 rgbNW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ).xyz;\nvec3 rgbNE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ).xyz;\nvec3 rgbSW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ).xyz;\nvec3 rgbSE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ).xyz;\nvec4 rgbaM  = texture2D( tDiffuse,  gl_FragCoord.xy  * resolution );\nvec3 rgbM  = rgbaM.xyz;\nfloat opacity  = rgbaM.w;\nvec3 luma = vec3( 0.299, 0.587, 0.114 );\nfloat lumaNW = dot( rgbNW, luma );\nfloat lumaNE = dot( rgbNE, luma );\nfloat lumaSW = dot( rgbSW, luma );\nfloat lumaSE = dot( rgbSE, luma );\nfloat lumaM  = dot( rgbM,  luma );\nfloat lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\nfloat lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\nvec2 dir;\ndir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\ndir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\nfloat dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\nfloat rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\ndir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\nmax( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\ndir * rcpDirMin)) * resolution;\nvec3 rgbA = 0.5 * (\ntexture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ).xyz +\ntexture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ).xyz );\nvec3 rgbB = rgbA * 0.5 + 0.25 * (\ntexture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * -0.5 ).xyz +\ntexture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * 0.5 ).xyz );\nfloat lumaB = dot( rgbB, luma );\nif ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) ) {\ngl_FragColor = vec4( rgbA, opacity );\n} else {\ngl_FragColor = vec4( rgbB, opacity );\n}\n}"};
THREE.HorizontalBlurShader={uniforms:{tDiffuse:{type:"t",value:null},h:{type:"f",value:1/512}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float h;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;\nsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;\ngl_FragColor = sum;\n}"};
THREE.HorizontalTiltShiftShader={uniforms:{tDiffuse:{type:"t",value:null},h:{type:"f",value:1/512},r:{type:"f",value:0.35}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float h;\nuniform float r;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nfloat hh = h * abs( r - vUv.y );\nsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\nsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\ngl_FragColor = sum;\n}"};
THREE.HueSaturationShader={uniforms:{tDiffuse:{type:"t",value:null},hue:{type:"f",value:0},saturation:{type:"f",value:0}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float hue;\nuniform float saturation;\nvarying vec2 vUv;\nvoid main() {\ngl_FragColor = texture2D( tDiffuse, vUv );\nfloat angle = hue * 3.14159265;\nfloat s = sin(angle), c = cos(angle);\nvec3 weights = (vec3(2.0 * c, -sqrt(3.0) * s - c, sqrt(3.0) * s - c) + 1.0) / 3.0;\nfloat len = length(gl_FragColor.rgb);\ngl_FragColor.rgb = vec3(\ndot(gl_FragColor.rgb, weights.xyz),\ndot(gl_FragColor.rgb, weights.zxy),\ndot(gl_FragColor.rgb, weights.yzx)\n);\nfloat average = (gl_FragColor.r + gl_FragColor.g + gl_FragColor.b) / 3.0;\nif (saturation > 0.0) {\ngl_FragColor.rgb += (average - gl_FragColor.rgb) * (1.0 - 1.0 / (1.001 - saturation));\n} else {\ngl_FragColor.rgb += (average - gl_FragColor.rgb) * (-saturation);\n}\n}"};
THREE.LuminosityShader={uniforms:{tDiffuse:{type:"t",value:null}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\nvec3 luma = vec3( 0.299, 0.587, 0.114 );\nfloat v = dot( texel.xyz, luma );\ngl_FragColor = vec4( v, v, v, texel.w );\n}"};
THREE.NormalMapShader={uniforms:{heightMap:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2(512,512)},scale:{type:"v2",value:new THREE.Vector2(1,1)},height:{type:"f",value:0.05}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float height;\nuniform vec2 resolution;\nuniform sampler2D heightMap;\nvarying vec2 vUv;\nvoid main() {\nfloat val = texture2D( heightMap, vUv ).x;\nfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\nfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\ngl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\n}"};
THREE.SepiaShader={uniforms:{tDiffuse:{type:"t",value:null},amount:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float amount;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 color = texture2D( tDiffuse, vUv );\nvec3 c = color.rgb;\ncolor.r = dot( c, vec3( 1.0 - 0.607 * amount, 0.769 * amount, 0.189 * amount ) );\ncolor.g = dot( c, vec3( 0.349 * amount, 1.0 - 0.314 * amount, 0.168 * amount ) );\ncolor.b = dot( c, vec3( 0.272 * amount, 0.534 * amount, 1.0 - 0.869 * amount ) );\ngl_FragColor = vec4( min( vec3( 1.0 ), color.rgb ), color.a );\n}"};
THREE.SSAOShader={uniforms:{tDiffuse:{type:"t",value:null},tDepth:{type:"t",value:null},size:{type:"v2",value:new THREE.Vector2(512,512)},cameraNear:{type:"f",value:1},cameraFar:{type:"f",value:100},fogNear:{type:"f",value:5},fogFar:{type:"f",value:100},fogEnabled:{type:"i",value:0},onlyAO:{type:"i",value:0},aoClamp:{type:"f",value:0.3},lumInfluence:{type:"f",value:0.9}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
fragmentShader:"uniform float cameraNear;\nuniform float cameraFar;\nuniform float fogNear;\nuniform float fogFar;\nuniform bool fogEnabled;\nuniform bool onlyAO;\nuniform vec2 size;\nuniform float aoClamp;\nuniform float lumInfluence;\nuniform sampler2D tDiffuse;\nuniform sampler2D tDepth;\nvarying vec2 vUv;\n#define DL 2.399963229728653\n#define EULER 2.718281828459045\nfloat width = size.x;\nfloat height = size.y;\nfloat cameraFarPlusNear = cameraFar + cameraNear;\nfloat cameraFarMinusNear = cameraFar - cameraNear;\nfloat cameraCoef = 2.0 * cameraNear;\nconst int samples = 8;\nconst float radius = 5.0;\nconst bool useNoise = false;\nconst float noiseAmount = 0.0003;\nconst float diffArea = 0.4;\nconst float gDisplace = 0.4;\nconst vec3 onlyAOColor = vec3( 1.0, 0.7, 0.5 );\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\nvec2 rand( const vec2 coord ) {\nvec2 noise;\nif ( useNoise ) {\nfloat nx = dot ( coord, vec2( 12.9898, 78.233 ) );\nfloat ny = dot ( coord, vec2( 12.9898, 78.233 ) * 2.0 );\nnoise = clamp( fract ( 43758.5453 * sin( vec2( nx, ny ) ) ), 0.0, 1.0 );\n} else {\nfloat ff = fract( 1.0 - coord.s * ( width / 2.0 ) );\nfloat gg = fract( coord.t * ( height / 2.0 ) );\nnoise = vec2( 0.25, 0.75 ) * vec2( ff ) + vec2( 0.75, 0.25 ) * gg;\n}\nreturn ( noise * 2.0  - 1.0 ) * noiseAmount;\n}\nfloat doFog() {\nfloat zdepth = unpackDepth( texture2D( tDepth, vUv ) );\nfloat depth = -cameraFar * cameraNear / ( zdepth * cameraFarMinusNear - cameraFar );\nreturn smoothstep( fogNear, fogFar, depth );\n}\nfloat readDepth( const in vec2 coord ) {\nreturn cameraCoef / ( cameraFarPlusNear - unpackDepth( texture2D( tDepth, coord ) ) * cameraFarMinusNear );\n}\nfloat compareDepths( const in float depth1, const in float depth2, inout int far ) {\nfloat garea = 2.0;\nfloat diff = ( depth1 - depth2 ) * 100.0;\nif ( diff < gDisplace ) {\ngarea = diffArea;\n} else {\nfar = 1;\n}\nfloat dd = diff - gDisplace;\nfloat gauss = pow( EULER, -2.0 * dd * dd / ( garea * garea ) );\nreturn gauss;\n}\nfloat calcAO( float depth, float dw, float dh ) {\nfloat dd = radius - depth * radius;\nvec2 vv = vec2( dw, dh );\nvec2 coord1 = vUv + dd * vv;\nvec2 coord2 = vUv - dd * vv;\nfloat temp1 = 0.0;\nfloat temp2 = 0.0;\nint far = 0;\ntemp1 = compareDepths( depth, readDepth( coord1 ), far );\nif ( far > 0 ) {\ntemp2 = compareDepths( readDepth( coord2 ), depth, far );\ntemp1 += ( 1.0 - temp1 ) * temp2;\n}\nreturn temp1;\n}\nvoid main() {\nvec2 noise = rand( vUv );\nfloat depth = readDepth( vUv );\nfloat tt = clamp( depth, aoClamp, 1.0 );\nfloat w = ( 1.0 / width )  / tt + ( noise.x * ( 1.0 - noise.x ) );\nfloat h = ( 1.0 / height ) / tt + ( noise.y * ( 1.0 - noise.y ) );\nfloat pw;\nfloat ph;\nfloat ao;\nfloat dz = 1.0 / float( samples );\nfloat z = 1.0 - dz / 2.0;\nfloat l = 0.0;\nfor ( int i = 0; i <= samples; i ++ ) {\nfloat r = sqrt( 1.0 - z );\npw = cos( l ) * r;\nph = sin( l ) * r;\nao += calcAO( depth, pw * w, ph * h );\nz = z - dz;\nl = l + DL;\n}\nao /= float( samples );\nao = 1.0 - ao;\nif ( fogEnabled ) {\nao = mix( ao, 1.0, doFog() );\n}\nvec3 color = texture2D( tDiffuse, vUv ).rgb;\nvec3 lumcoeff = vec3( 0.299, 0.587, 0.114 );\nfloat lum = dot( color.rgb, lumcoeff );\nvec3 luminance = vec3( lum );\nvec3 final = vec3( color * mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );\nif ( onlyAO ) {\nfinal = onlyAOColor * vec3( mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );\n}\ngl_FragColor = vec4( final, 1.0 );\n}"};
THREE.TriangleBlurShader={uniforms:{texture:{type:"t",value:null},delta:{type:"v2",value:new THREE.Vector2(1,1)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"#define ITERATIONS 10.0\nuniform sampler2D texture;\nuniform vec2 delta;\nvarying vec2 vUv;\nfloat random( vec3 scale, float seed ) {\nreturn fract( sin( dot( gl_FragCoord.xyz + seed, scale ) ) * 43758.5453 + seed );\n}\nvoid main() {\nvec4 color = vec4( 0.0 );\nfloat total = 0.0;\nfloat offset = random( vec3( 12.9898, 78.233, 151.7182 ), 0.0 );\nfor ( float t = -ITERATIONS; t <= ITERATIONS; t ++ ) {\nfloat percent = ( t + offset - 0.5 ) / ITERATIONS;\nfloat weight = 1.0 - abs( percent );\ncolor += texture2D( texture, vUv + delta * percent ) * weight;\ntotal += weight;\n}\ngl_FragColor = color / total;\n}"};
THREE.UnpackDepthRGBAShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\nvoid main() {\nfloat depth = 1.0 - unpackDepth( texture2D( tDiffuse, vUv ) );\ngl_FragColor = opacity * vec4( vec3( depth ), 1.0 );\n}"};
THREE.VerticalBlurShader={uniforms:{tDiffuse:{type:"t",value:null},v:{type:"f",value:1/512}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float v;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;\ngl_FragColor = sum;\n}"};
THREE.VerticalTiltShiftShader={uniforms:{tDiffuse:{type:"t",value:null},v:{type:"f",value:1/512},r:{type:"f",value:0.35}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float v;\nuniform float r;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nfloat vv = v * abs( r - vUv.y );\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\ngl_FragColor = sum;\n}"};
THREE.VignetteShader={uniforms:{tDiffuse:{type:"t",value:null},offset:{type:"f",value:1},darkness:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float offset;\nuniform float darkness;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\nvec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );\ngl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );\n}"};
THREE.AudioObject=function(a,b,c,d){THREE.Object3D.call(this);c===void 0&&(c=1);b===void 0&&(b=1);d===void 0&&(d=true);if(!this.context)try{this.context=new webkitAudioContext}catch(e){console.warn("THREE.AudioObject: webkitAudioContext not found");return this}this.directionalSource=false;this.listener=this.context.listener;this.panner=this.context.createPanner();this.source=this.context.createBufferSource();this.masterGainNode=this.context.createGainNode();this.dryGainNode=this.context.createGainNode();
this.masterGainNode.gain.value=b;this.dryGainNode.gain.value=3;this.source.connect(this.panner);this.panner.connect(this.dryGainNode);this.dryGainNode.connect(this.masterGainNode);this.masterGainNode.connect(this.context.destination);this.source.playbackRate.value=c;this.source.loop=d;var f=new XMLHttpRequest;f.open("GET",a,true);f.responseType="arraybuffer";f.onload=function(){t.source.buffer=t.context.createBuffer(f.response,true);t.source.noteOn(0)};f.send();var g=new THREE.Vector3,h=new THREE.Vector3,
i=new THREE.Vector3,k=new THREE.Vector3,j=new THREE.Vector3,l=new THREE.Vector3,m=new THREE.Vector3,p=new THREE.Vector3,n=new THREE.Vector3,q=new THREE.Vector3,t=this;this.setVolume=function(a){this.masterGainNode.gain.value=a};this.update=function(a){i.copy(g);k.copy(h);g.copy(this.matrixWorld.getPosition());h.copy(a.matrixWorld.getPosition());j.sub(g,i);l.sub(h,k);q.copy(a.up);p.set(0,0,-1);a.matrixWorld.rotateAxis(p);p.normalize();this.listener.setPosition(h.x,h.y,h.z);this.listener.setVelocity(l.x,
l.y,l.z);this.listener.setOrientation(p.x,p.y,p.z,q.x,q.y,q.z);this.panner.setPosition(g.x,g.y,g.z);this.panner.setVelocity(j.x,j.y,j.z);if(this.directionalSource){m.set(0,0,-1);this.matrixWorld.rotateAxis(m);m.normalize();n.copy(this.up);this.panner.setOrientation(m.x,m.y,m.z,n.x,n.y,n.z)}}};THREE.AudioObject.prototype=Object.create(THREE.Object3D.prototype);THREE.AudioObject.prototype.context=null;THREE.AudioObject.prototype.type=null;
THREE.Car=function(){function a(){if(b.bodyGeometry&&b.wheelGeometry){if(b.autoWheelGeometry){b.wheelGeometry.computeBoundingBox();var a=b.wheelGeometry.boundingBox;b.wheelOffset.add(a.min,a.max);b.wheelOffset.multiplyScalar(0.5);b.wheelDiameter=a.max.y-a.min.y;THREE.GeometryUtils.center(b.wheelGeometry)}var a=b.modelScale,d=new THREE.Vector3,e=new THREE.MeshFaceMaterial;b.bodyMesh=new THREE.Mesh(b.bodyGeometry,e);b.bodyMesh.scale.set(a,a,a);b.root.add(b.bodyMesh);d.multiply(b.wheelOffset,new THREE.Vector3(a,
a,a));b.frontLeftWheelRoot.position.addSelf(d);b.frontLeftWheelMesh=new THREE.Mesh(b.wheelGeometry,e);b.frontLeftWheelMesh.scale.set(a,a,a);b.frontLeftWheelRoot.add(b.frontLeftWheelMesh);b.root.add(b.frontLeftWheelRoot);d.multiply(b.wheelOffset,new THREE.Vector3(-a,a,a));b.frontRightWheelRoot.position.addSelf(d);b.frontRightWheelMesh=new THREE.Mesh(b.wheelGeometry,e);b.frontRightWheelMesh.scale.set(a,a,a);b.frontRightWheelMesh.rotation.z=Math.PI;b.frontRightWheelRoot.add(b.frontRightWheelMesh);b.root.add(b.frontRightWheelRoot);
d.multiply(b.wheelOffset,new THREE.Vector3(a,a,-a));d.z=d.z-b.backWheelOffset;b.backLeftWheelMesh=new THREE.Mesh(b.wheelGeometry,e);b.backLeftWheelMesh.position.addSelf(d);b.backLeftWheelMesh.scale.set(a,a,a);b.root.add(b.backLeftWheelMesh);d.multiply(b.wheelOffset,new THREE.Vector3(-a,a,-a));d.z=d.z-b.backWheelOffset;b.backRightWheelMesh=new THREE.Mesh(b.wheelGeometry,e);b.backRightWheelMesh.position.addSelf(d);b.backRightWheelMesh.scale.set(a,a,a);b.backRightWheelMesh.rotation.z=Math.PI;b.root.add(b.backRightWheelMesh);
b.meshes=[b.bodyMesh,b.frontLeftWheelMesh,b.frontRightWheelMesh,b.backLeftWheelMesh,b.backRightWheelMesh];b.loaded=true;b.callback&&b.callback(b)}}var b=this;this.modelScale=1;this.backWheelOffset=2;this.autoWheelGeometry=true;this.wheelOffset=new THREE.Vector3;this.wheelDiameter=1;this.MAX_SPEED=2200;this.MAX_REVERSE_SPEED=-1500;this.MAX_WHEEL_ROTATION=0.6;this.FRONT_ACCELERATION=1250;this.BACK_ACCELERATION=1500;this.WHEEL_ANGULAR_ACCELERATION=1.5;this.FRONT_DECCELERATION=750;this.WHEEL_ANGULAR_DECCELERATION=
1;this.STEERING_RADIUS_RATIO=0.0023;this.MAX_TILT_SIDES=0.05;this.MAX_TILT_FRONTBACK=0.015;this.carOrientation=this.wheelOrientation=this.acceleration=this.speed=0;this.root=new THREE.Object3D;this.frontLeftWheelRoot=new THREE.Object3D;this.frontRightWheelRoot=new THREE.Object3D;this.wheelGeometry=this.bodyGeometry=this.backRightWheelMesh=this.backLeftWheelMesh=this.frontRightWheelMesh=this.frontLeftWheelMesh=this.bodyMesh=null;this.loaded=false;this.meshes=[];this.enableShadows=function(a){for(var b=
0;b<this.meshes.length;b++){this.meshes[b].castShadow=a;this.meshes[b].receiveShadow=a}};this.setVisible=function(a){for(var b=0;b<this.meshes.length;b++){this.meshes[b].visible=a;this.meshes[b].visible=a}};this.loadPartsJSON=function(c,d){var e=new THREE.JSONLoader;e.load(c,function(c){b.bodyGeometry=c;a()});e.load(d,function(c){b.wheelGeometry=c;a()})};this.loadPartsBinary=function(c,d){var e=new THREE.BinaryLoader;e.load(c,function(c){b.bodyGeometry=c;a()});e.load(d,function(c){b.wheelGeometry=
c;a()})};this.updateCarModel=function(a,b){if(b.moveForward){this.speed=THREE.Math.clamp(this.speed+a*this.FRONT_ACCELERATION,this.MAX_REVERSE_SPEED,this.MAX_SPEED);this.acceleration=THREE.Math.clamp(this.acceleration+a,-1,1)}if(b.moveBackward){this.speed=THREE.Math.clamp(this.speed-a*this.BACK_ACCELERATION,this.MAX_REVERSE_SPEED,this.MAX_SPEED);this.acceleration=THREE.Math.clamp(this.acceleration-a,-1,1)}if(b.moveLeft)this.wheelOrientation=THREE.Math.clamp(this.wheelOrientation+a*this.WHEEL_ANGULAR_ACCELERATION,
-this.MAX_WHEEL_ROTATION,this.MAX_WHEEL_ROTATION);if(b.moveRight)this.wheelOrientation=THREE.Math.clamp(this.wheelOrientation-a*this.WHEEL_ANGULAR_ACCELERATION,-this.MAX_WHEEL_ROTATION,this.MAX_WHEEL_ROTATION);if(!b.moveForward&&!b.moveBackward)if(this.speed>0){var e=this.speed/this.MAX_SPEED===1?1:-Math.pow(2,-10*(this.speed/this.MAX_SPEED))+1;this.speed=THREE.Math.clamp(this.speed-e*a*this.FRONT_DECCELERATION,0,this.MAX_SPEED);this.acceleration=THREE.Math.clamp(this.acceleration-e*a,0,1)}else{e=
this.speed/this.MAX_REVERSE_SPEED===1?1:-Math.pow(2,-10*(this.speed/this.MAX_REVERSE_SPEED))+1;this.speed=THREE.Math.clamp(this.speed+e*a*this.BACK_ACCELERATION,this.MAX_REVERSE_SPEED,0);this.acceleration=THREE.Math.clamp(this.acceleration+e*a,-1,0)}if(!b.moveLeft&&!b.moveRight)this.wheelOrientation=this.wheelOrientation>0?THREE.Math.clamp(this.wheelOrientation-a*this.WHEEL_ANGULAR_DECCELERATION,0,this.MAX_WHEEL_ROTATION):THREE.Math.clamp(this.wheelOrientation+a*this.WHEEL_ANGULAR_DECCELERATION,-this.MAX_WHEEL_ROTATION,
0);e=this.speed*a;this.carOrientation=this.carOrientation+e*this.STEERING_RADIUS_RATIO*this.wheelOrientation;this.root.position.x=this.root.position.x+Math.sin(this.carOrientation)*e;this.root.position.z=this.root.position.z+Math.cos(this.carOrientation)*e;this.root.rotation.y=this.carOrientation;if(this.loaded){this.bodyMesh.rotation.z=this.MAX_TILT_SIDES*this.wheelOrientation*(this.speed/this.MAX_SPEED);this.bodyMesh.rotation.x=-this.MAX_TILT_FRONTBACK*this.acceleration}e=e*(1/(this.modelScale*
(this.wheelDiameter/2)));if(this.loaded){this.frontLeftWheelMesh.rotation.x=this.frontLeftWheelMesh.rotation.x+e;this.frontRightWheelMesh.rotation.x=this.frontRightWheelMesh.rotation.x+e;this.backLeftWheelMesh.rotation.x=this.backLeftWheelMesh.rotation.x+e;this.backRightWheelMesh.rotation.x=this.backRightWheelMesh.rotation.x+e}this.frontLeftWheelRoot.rotation.y=this.wheelOrientation;this.frontRightWheelRoot.rotation.y=this.wheelOrientation}};THREE.Curves={};
THREE.Curves.GrannyKnot=THREE.Curve.create(function(){},function(a){var a=2*Math.PI*a,b=-0.22*Math.cos(a)-1.28*Math.sin(a)-0.44*Math.cos(3*a)-0.78*Math.sin(3*a),c=-0.1*Math.cos(2*a)-0.27*Math.sin(2*a)+0.38*Math.cos(4*a)+0.46*Math.sin(4*a),a=0.7*Math.cos(3*a)-0.4*Math.sin(3*a);return(new THREE.Vector3(b,c,a)).multiplyScalar(20)});
THREE.Curves.HeartCurve=THREE.Curve.create(function(a){this.scale=a===void 0?5:a},function(a){var a=a*2*Math.PI,b=16*Math.pow(Math.sin(a),3),a=13*Math.cos(a)-5*Math.cos(2*a)-2*Math.cos(3*a)-Math.cos(4*a);return(new THREE.Vector3(b,a,0)).multiplyScalar(this.scale)});THREE.Curves.VivianiCurve=THREE.Curve.create(function(a){this.radius=a},function(a){var a=a*4*Math.PI,b=this.radius/2,c=b*(1+Math.cos(a)),d=b*Math.sin(a),a=2*b*Math.sin(a/2);return new THREE.Vector3(c,d,a)});
THREE.Curves.KnotCurve=THREE.Curve.create(function(){},function(a){var a=a*2*Math.PI,b=50*Math.sin(a),c=Math.cos(a)*(10+50*Math.cos(a)),a=Math.sin(a)*(10+50*Math.cos(a));return new THREE.Vector3(b,c,a)});THREE.Curves.HelixCurve=THREE.Curve.create(function(){},function(a){var b=2*Math.PI*a*150/30,c=Math.cos(b)*30,b=Math.sin(b)*30;return new THREE.Vector3(c,b,150*a)});
THREE.Curves.TrefoilKnot=THREE.Curve.create(function(a){this.scale=a===void 0?10:a},function(a){var a=a*Math.PI*2,b=(2+Math.cos(3*a))*Math.cos(2*a),c=(2+Math.cos(3*a))*Math.sin(2*a),a=Math.sin(3*a);return(new THREE.Vector3(b,c,a)).multiplyScalar(this.scale)});THREE.Curves.TorusKnot=THREE.Curve.create(function(a){this.scale=a===void 0?10:a},function(a){var a=a*Math.PI*2,b=(2+Math.cos(4*a))*Math.cos(3*a),c=(2+Math.cos(4*a))*Math.sin(3*a),a=Math.sin(4*a);return(new THREE.Vector3(b,c,a)).multiplyScalar(this.scale)});
THREE.Curves.CinquefoilKnot=THREE.Curve.create(function(a){this.scale=a===void 0?10:a},function(a){var a=a*Math.PI*2,b=(2+Math.cos(5*a))*Math.cos(2*a),c=(2+Math.cos(5*a))*Math.sin(2*a),a=Math.sin(5*a);return(new THREE.Vector3(b,c,a)).multiplyScalar(this.scale)});THREE.Curves.TrefoilPolynomialKnot=THREE.Curve.create(function(a){this.scale=a===void 0?10:a},function(a){var a=a*4-2,b=Math.pow(a,3)-3*a,c=Math.pow(a,4)-4*a*a,a=0.2*Math.pow(a,5)-2*a;return(new THREE.Vector3(b,c,a)).multiplyScalar(this.scale)});
var scaleTo=function(a,b,c){return c*(b-a)+a};THREE.Curves.FigureEightPolynomialKnot=THREE.Curve.create(function(a){this.scale=a===void 0?1:a},function(a){var a=scaleTo(-4,4,a),b=0.4*a*(a*a-7)*(a*a-10),c=Math.pow(a,4)-13*a*a;return(new THREE.Vector3(b,c,0.1*a*(a*a-4)*(a*a-9)*(a*a-12))).multiplyScalar(this.scale)});
THREE.Curves.DecoratedTorusKnot4a=THREE.Curve.create(function(a){this.scale=a===void 0?40:a},function(a){var a=a*Math.PI*2,b=Math.cos(2*a)*(1+0.6*(Math.cos(5*a)+0.75*Math.cos(10*a))),c=Math.sin(2*a)*(1+0.6*(Math.cos(5*a)+0.75*Math.cos(10*a))),a=0.35*Math.sin(5*a);return(new THREE.Vector3(b,c,a)).multiplyScalar(this.scale)});
THREE.Curves.DecoratedTorusKnot4b=THREE.Curve.create(function(a){this.scale=a===void 0?40:a},function(a){var b=a*Math.PI*2,a=Math.cos(2*b)*(1+0.45*Math.cos(3*b)+0.4*Math.cos(9*b)),c=Math.sin(2*b)*(1+0.45*Math.cos(3*b)+0.4*Math.cos(9*b)),b=0.2*Math.sin(9*b);return(new THREE.Vector3(a,c,b)).multiplyScalar(this.scale)});
THREE.Curves.DecoratedTorusKnot5a=THREE.Curve.create(function(a){this.scale=a===void 0?40:a},function(a){var b=a*Math.PI*2,a=Math.cos(3*b)*(1+0.3*Math.cos(5*b)+0.5*Math.cos(10*b)),c=Math.sin(3*b)*(1+0.3*Math.cos(5*b)+0.5*Math.cos(10*b)),b=0.2*Math.sin(20*b);return(new THREE.Vector3(a,c,b)).multiplyScalar(this.scale)});
THREE.Curves.DecoratedTorusKnot5c=THREE.Curve.create(function(a){this.scale=a===void 0?40:a},function(a){var b=a*Math.PI*2,a=Math.cos(4*b)*(1+0.5*(Math.cos(5*b)+0.4*Math.cos(20*b))),c=Math.sin(4*b)*(1+0.5*(Math.cos(5*b)+0.4*Math.cos(20*b))),b=0.35*Math.sin(15*b);return(new THREE.Vector3(a,c,b)).multiplyScalar(this.scale)});
THREE.MarchingCubes=function(a,b,c,d){THREE.ImmediateRenderObject.call(this);this.material=b;this.enableUvs=c!==void 0?c:false;this.enableColors=d!==void 0?d:false;this.init=function(a){this.resolution=a;this.isolation=80;this.size=a;this.size2=this.size*this.size;this.size3=this.size2*this.size;this.halfsize=this.size/2;this.delta=2/this.size;this.yd=this.size;this.zd=this.size2;this.field=new Float32Array(this.size3);this.normal_cache=new Float32Array(this.size3*3);this.vlist=new Float32Array(36);
this.nlist=new Float32Array(36);this.firstDraw=true;this.maxCount=4096;this.count=0;this.hasUvs=this.hasColors=this.hasNormals=this.hasPositions=false;this.positionArray=new Float32Array(this.maxCount*3);this.normalArray=new Float32Array(this.maxCount*3);if(this.enableUvs)this.uvArray=new Float32Array(this.maxCount*2);if(this.enableColors)this.colorArray=new Float32Array(this.maxCount*3)};this.lerp=function(a,b,c){return a+(b-a)*c};this.VIntX=function(a,b,c,d,i,k,j,l,m,p){i=(i-m)/(p-m);m=this.normal_cache;
b[d]=k+i*this.delta;b[d+1]=j;b[d+2]=l;c[d]=this.lerp(m[a],m[a+3],i);c[d+1]=this.lerp(m[a+1],m[a+4],i);c[d+2]=this.lerp(m[a+2],m[a+5],i)};this.VIntY=function(a,b,c,d,i,k,j,l,m,p){i=(i-m)/(p-m);m=this.normal_cache;b[d]=k;b[d+1]=j+i*this.delta;b[d+2]=l;b=a+this.yd*3;c[d]=this.lerp(m[a],m[b],i);c[d+1]=this.lerp(m[a+1],m[b+1],i);c[d+2]=this.lerp(m[a+2],m[b+2],i)};this.VIntZ=function(a,b,c,d,i,k,j,l,m,p){i=(i-m)/(p-m);m=this.normal_cache;b[d]=k;b[d+1]=j;b[d+2]=l+i*this.delta;b=a+this.zd*3;c[d]=this.lerp(m[a],
m[b],i);c[d+1]=this.lerp(m[a+1],m[b+1],i);c[d+2]=this.lerp(m[a+2],m[b+2],i)};this.compNorm=function(a){var b=a*3;if(this.normal_cache[b]===0){this.normal_cache[b]=this.field[a-1]-this.field[a+1];this.normal_cache[b+1]=this.field[a-this.yd]-this.field[a+this.yd];this.normal_cache[b+2]=this.field[a-this.zd]-this.field[a+this.zd]}};this.polygonize=function(a,b,c,d,i,k){var j=d+1,l=d+this.yd,m=d+this.zd,p=j+this.yd,n=j+this.zd,q=d+this.yd+this.zd,t=j+this.yd+this.zd,s=0,x=this.field[d],u=this.field[j],
r=this.field[l],y=this.field[p],w=this.field[m],v=this.field[n],A=this.field[q],F=this.field[t];x<i&&(s=s|1);u<i&&(s=s|2);r<i&&(s=s|8);y<i&&(s=s|4);w<i&&(s=s|16);v<i&&(s=s|32);A<i&&(s=s|128);F<i&&(s=s|64);var C=THREE.edgeTable[s];if(C===0)return 0;var G=this.delta,H=a+G,D=b+G,G=c+G;if(C&1){this.compNorm(d);this.compNorm(j);this.VIntX(d*3,this.vlist,this.nlist,0,i,a,b,c,x,u)}if(C&2){this.compNorm(j);this.compNorm(p);this.VIntY(j*3,this.vlist,this.nlist,3,i,H,b,c,u,y)}if(C&4){this.compNorm(l);this.compNorm(p);
this.VIntX(l*3,this.vlist,this.nlist,6,i,a,D,c,r,y)}if(C&8){this.compNorm(d);this.compNorm(l);this.VIntY(d*3,this.vlist,this.nlist,9,i,a,b,c,x,r)}if(C&16){this.compNorm(m);this.compNorm(n);this.VIntX(m*3,this.vlist,this.nlist,12,i,a,b,G,w,v)}if(C&32){this.compNorm(n);this.compNorm(t);this.VIntY(n*3,this.vlist,this.nlist,15,i,H,b,G,v,F)}if(C&64){this.compNorm(q);this.compNorm(t);this.VIntX(q*3,this.vlist,this.nlist,18,i,a,D,G,A,F)}if(C&128){this.compNorm(m);this.compNorm(q);this.VIntY(m*3,this.vlist,
this.nlist,21,i,a,b,G,w,A)}if(C&256){this.compNorm(d);this.compNorm(m);this.VIntZ(d*3,this.vlist,this.nlist,24,i,a,b,c,x,w)}if(C&512){this.compNorm(j);this.compNorm(n);this.VIntZ(j*3,this.vlist,this.nlist,27,i,H,b,c,u,v)}if(C&1024){this.compNorm(p);this.compNorm(t);this.VIntZ(p*3,this.vlist,this.nlist,30,i,H,D,c,y,F)}if(C&2048){this.compNorm(l);this.compNorm(q);this.VIntZ(l*3,this.vlist,this.nlist,33,i,a,D,c,r,A)}s=s<<4;for(i=d=0;THREE.triTable[s+i]!=-1;){a=s+i;b=a+1;c=a+2;this.posnormtriv(this.vlist,
this.nlist,3*THREE.triTable[a],3*THREE.triTable[b],3*THREE.triTable[c],k);i=i+3;d++}return d};this.posnormtriv=function(a,b,c,d,i,k){var j=this.count*3;this.positionArray[j]=a[c];this.positionArray[j+1]=a[c+1];this.positionArray[j+2]=a[c+2];this.positionArray[j+3]=a[d];this.positionArray[j+4]=a[d+1];this.positionArray[j+5]=a[d+2];this.positionArray[j+6]=a[i];this.positionArray[j+7]=a[i+1];this.positionArray[j+8]=a[i+2];this.normalArray[j]=b[c];this.normalArray[j+1]=b[c+1];this.normalArray[j+2]=b[c+
2];this.normalArray[j+3]=b[d];this.normalArray[j+4]=b[d+1];this.normalArray[j+5]=b[d+2];this.normalArray[j+6]=b[i];this.normalArray[j+7]=b[i+1];this.normalArray[j+8]=b[i+2];if(this.enableUvs){b=this.count*2;this.uvArray[b]=a[c];this.uvArray[b+1]=a[c+2];this.uvArray[b+2]=a[d];this.uvArray[b+3]=a[d+2];this.uvArray[b+4]=a[i];this.uvArray[b+5]=a[i+2]}if(this.enableColors){this.colorArray[j]=a[c];this.colorArray[j+1]=a[c+1];this.colorArray[j+2]=a[c+2];this.colorArray[j+3]=a[d];this.colorArray[j+4]=a[d+
1];this.colorArray[j+5]=a[d+2];this.colorArray[j+6]=a[i];this.colorArray[j+7]=a[i+1];this.colorArray[j+8]=a[i+2]}this.count=this.count+3;if(this.count>=this.maxCount-3){this.hasNormals=this.hasPositions=true;if(this.enableUvs)this.hasUvs=true;if(this.enableColors)this.hasColors=true;k(this)}};this.begin=function(){this.count=0;this.hasColors=this.hasUvs=this.hasNormals=this.hasPositions=false};this.end=function(a){if(this.count!==0){for(var b=this.count*3;b<this.positionArray.length;b++)this.positionArray[b]=
0;this.hasNormals=this.hasPositions=true;if(this.enableUvs)this.hasUvs=true;if(this.enableColors)this.hasColors=true;a(this)}};this.addBall=function(a,b,c,d,i){var k=this.size*Math.sqrt(d/i),j=c*this.size,l=b*this.size,m=a*this.size,p=Math.floor(j-k);p<1&&(p=1);j=Math.floor(j+k);j>this.size-1&&(j=this.size-1);var n=Math.floor(l-k);n<1&&(n=1);l=Math.floor(l+k);l>this.size-1&&(l=this.size-1);var q=Math.floor(m-k);q<1&&(q=1);k=Math.floor(m+k);k>this.size-1&&(k=this.size-1);for(var t,s,x,u,r,y;p<j;p++){m=
this.size2*p;s=p/this.size-c;r=s*s;for(s=n;s<l;s++){x=m+this.size*s;t=s/this.size-b;y=t*t;for(t=q;t<k;t++){u=t/this.size-a;u=d/(1E-6+u*u+y+r)-i;u>0&&(this.field[x+t]=this.field[x+t]+u)}}}};this.addPlaneX=function(a,b){var c,d,i,k,j,l=this.size,m=this.yd,p=this.zd,n=this.field,q=l*Math.sqrt(a/b);q>l&&(q=l);for(c=0;c<q;c++){d=c/l;d=d*d;k=a/(1E-4+d)-b;if(k>0)for(d=0;d<l;d++){j=c+d*m;for(i=0;i<l;i++)n[p*i+j]=n[p*i+j]+k}}};this.addPlaneY=function(a,b){var c,d,i,k,j,l,m=this.size,p=this.yd,n=this.zd,q=
this.field,t=m*Math.sqrt(a/b);t>m&&(t=m);for(d=0;d<t;d++){c=d/m;c=c*c;k=a/(1E-4+c)-b;if(k>0){j=d*p;for(c=0;c<m;c++){l=j+c;for(i=0;i<m;i++)q[n*i+l]=q[n*i+l]+k}}}};this.addPlaneZ=function(a,b){var c,d,i,k,j,l,m=this.size,p=this.yd,n=this.zd,q=this.field,t=m*Math.sqrt(a/b);t>m&&(t=m);for(i=0;i<t;i++){c=i/m;c=c*c;k=a/(1E-4+c)-b;if(k>0){j=n*i;for(d=0;d<m;d++){l=j+d*p;for(c=0;c<m;c++)q[l+c]=q[l+c]+k}}}};this.reset=function(){var a;for(a=0;a<this.size3;a++){this.normal_cache[a*3]=0;this.field[a]=0}};this.render=
function(a){this.begin();var b,c,d,i,k,j,l,m,p,n=this.size-2;for(i=1;i<n;i++){p=this.size2*i;l=(i-this.halfsize)/this.halfsize;for(d=1;d<n;d++){m=p+this.size*d;j=(d-this.halfsize)/this.halfsize;for(c=1;c<n;c++){k=(c-this.halfsize)/this.halfsize;b=m+c;this.polygonize(k,j,l,b,this.isolation,a)}}}this.end(a)};this.generateGeometry=function(){var a=0,b=new THREE.Geometry,c=[];this.render(function(d){var i,k,j,l,m,p,n,q;for(i=0;i<d.count;i++){p=i*3;n=p+1;q=p+2;k=d.positionArray[p];j=d.positionArray[n];
l=d.positionArray[q];m=new THREE.Vector3(k,j,l);k=d.normalArray[p];j=d.normalArray[n];l=d.normalArray[q];p=new THREE.Vector3(k,j,l);p.normalize();b.vertices.push(m);c.push(p)}m=d.count/3;for(i=0;i<m;i++){p=(a+i)*3;n=p+1;q=p+2;k=c[p];j=c[n];l=c[q];p=new THREE.Face3(p,n,q,[k,j,l]);b.faces.push(p)}a=a+m;d.count=0});return b};this.init(a)};THREE.MarchingCubes.prototype=Object.create(THREE.ImmediateRenderObject.prototype);
THREE.edgeTable=new Int32Array([0,265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,
1370,598,863,85,348,3676,3925,3167,3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,
419,681,928,3376,3129,3891,3642,2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0]);
THREE.triTable=new Int32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,9,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,2,10,0,2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,8,3,2,10,8,10,9,8,-1,-1,-1,-1,-1,-1,-1,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,8,11,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,11,-1,-1,-1,-1,-1,
-1,-1,-1,-1,-1,1,11,2,1,9,11,9,8,11,-1,-1,-1,-1,-1,-1,-1,3,10,1,11,10,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,10,1,0,8,10,8,11,10,-1,-1,-1,-1,-1,-1,-1,3,9,0,3,11,9,11,10,9,-1,-1,-1,-1,-1,-1,-1,9,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,7,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,1,9,4,7,1,7,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,4,7,3,0,4,1,2,10,-1,-1,-1,-1,-1,-1,-1,9,2,10,9,0,2,8,4,7,
-1,-1,-1,-1,-1,-1,-1,2,10,9,2,9,7,2,7,3,7,9,4,-1,-1,-1,-1,8,4,7,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,4,7,11,2,4,2,0,4,-1,-1,-1,-1,-1,-1,-1,9,0,1,8,4,7,2,3,11,-1,-1,-1,-1,-1,-1,-1,4,7,11,9,4,11,9,11,2,9,2,1,-1,-1,-1,-1,3,10,1,3,11,10,7,8,4,-1,-1,-1,-1,-1,-1,-1,1,11,10,1,4,11,1,0,4,7,11,4,-1,-1,-1,-1,4,7,8,9,0,11,9,11,10,11,0,3,-1,-1,-1,-1,4,7,11,4,11,9,9,11,10,-1,-1,-1,-1,-1,-1,-1,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,4,1,5,0,-1,-1,-1,-1,-1,-1,
-1,-1,-1,-1,8,5,4,8,3,5,3,1,5,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,10,4,9,5,-1,-1,-1,-1,-1,-1,-1,5,2,10,5,4,2,4,0,2,-1,-1,-1,-1,-1,-1,-1,2,10,5,3,2,5,3,5,4,3,4,8,-1,-1,-1,-1,9,5,4,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,0,8,11,4,9,5,-1,-1,-1,-1,-1,-1,-1,0,5,4,0,1,5,2,3,11,-1,-1,-1,-1,-1,-1,-1,2,1,5,2,5,8,2,8,11,4,8,5,-1,-1,-1,-1,10,3,11,10,1,3,9,5,4,-1,-1,-1,-1,-1,-1,-1,4,9,5,0,8,1,8,10,1,8,11,10,-1,-1,-1,-1,5,4,0,5,0,11,5,11,10,11,0,3,-1,-1,-1,-1,5,4,8,5,
8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,9,7,8,5,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,3,0,9,5,3,5,7,3,-1,-1,-1,-1,-1,-1,-1,0,7,8,0,1,7,1,5,7,-1,-1,-1,-1,-1,-1,-1,1,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,7,8,9,5,7,10,1,2,-1,-1,-1,-1,-1,-1,-1,10,1,2,9,5,0,5,3,0,5,7,3,-1,-1,-1,-1,8,0,2,8,2,5,8,5,7,10,5,2,-1,-1,-1,-1,2,10,5,2,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,7,9,5,7,8,9,3,11,2,-1,-1,-1,-1,-1,-1,-1,9,5,7,9,7,2,9,2,0,2,7,11,-1,-1,-1,-1,2,3,11,0,1,8,1,7,8,1,5,7,-1,-1,-1,-1,11,2,1,11,1,7,7,1,5,-1,-1,-1,-1,-1,-1,
-1,9,5,8,8,5,7,10,1,3,10,3,11,-1,-1,-1,-1,5,7,0,5,0,9,7,11,0,1,0,10,11,10,0,-1,11,10,0,11,0,3,10,5,0,8,0,7,5,7,0,-1,11,10,5,7,11,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,0,1,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,1,9,8,5,10,6,-1,-1,-1,-1,-1,-1,-1,1,6,5,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,6,5,1,2,6,3,0,8,-1,-1,-1,-1,-1,-1,-1,9,6,5,9,0,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,5,9,8,5,8,2,5,2,6,3,2,8,-1,-1,-1,-1,2,3,11,10,6,
5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,0,8,11,2,0,10,6,5,-1,-1,-1,-1,-1,-1,-1,0,1,9,2,3,11,5,10,6,-1,-1,-1,-1,-1,-1,-1,5,10,6,1,9,2,9,11,2,9,8,11,-1,-1,-1,-1,6,3,11,6,5,3,5,1,3,-1,-1,-1,-1,-1,-1,-1,0,8,11,0,11,5,0,5,1,5,11,6,-1,-1,-1,-1,3,11,6,0,3,6,0,6,5,0,5,9,-1,-1,-1,-1,6,5,9,6,9,11,11,9,8,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,4,7,3,6,5,10,-1,-1,-1,-1,-1,-1,-1,1,9,0,5,10,6,8,4,7,-1,-1,-1,-1,-1,-1,-1,10,6,5,1,9,7,1,7,3,7,9,4,-1,-1,-1,-1,6,1,2,6,5,1,4,7,8,-1,-1,-1,-1,
-1,-1,-1,1,2,5,5,2,6,3,0,4,3,4,7,-1,-1,-1,-1,8,4,7,9,0,5,0,6,5,0,2,6,-1,-1,-1,-1,7,3,9,7,9,4,3,2,9,5,9,6,2,6,9,-1,3,11,2,7,8,4,10,6,5,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,2,4,2,0,2,7,11,-1,-1,-1,-1,0,1,9,4,7,8,2,3,11,5,10,6,-1,-1,-1,-1,9,2,1,9,11,2,9,4,11,7,11,4,5,10,6,-1,8,4,7,3,11,5,3,5,1,5,11,6,-1,-1,-1,-1,5,1,11,5,11,6,1,0,11,7,11,4,0,4,11,-1,0,5,9,0,6,5,0,3,6,11,6,3,8,4,7,-1,6,5,9,6,9,11,4,7,9,7,11,9,-1,-1,-1,-1,10,4,9,6,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,10,6,4,9,10,0,8,3,-1,-1,-1,-1,-1,-1,-1,
10,0,1,10,6,0,6,4,0,-1,-1,-1,-1,-1,-1,-1,8,3,1,8,1,6,8,6,4,6,1,10,-1,-1,-1,-1,1,4,9,1,2,4,2,6,4,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,9,2,4,9,2,6,4,-1,-1,-1,-1,0,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,3,2,8,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,10,4,9,10,6,4,11,2,3,-1,-1,-1,-1,-1,-1,-1,0,8,2,2,8,11,4,9,10,4,10,6,-1,-1,-1,-1,3,11,2,0,1,6,0,6,4,6,1,10,-1,-1,-1,-1,6,4,1,6,1,10,4,8,1,2,1,11,8,11,1,-1,9,6,4,9,3,6,9,1,3,11,6,3,-1,-1,-1,-1,8,11,1,8,1,0,11,6,1,9,1,4,6,4,1,-1,3,11,6,3,6,0,0,6,4,-1,-1,-1,-1,-1,-1,-1,
6,4,8,11,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,10,6,7,8,10,8,9,10,-1,-1,-1,-1,-1,-1,-1,0,7,3,0,10,7,0,9,10,6,7,10,-1,-1,-1,-1,10,6,7,1,10,7,1,7,8,1,8,0,-1,-1,-1,-1,10,6,7,10,7,1,1,7,3,-1,-1,-1,-1,-1,-1,-1,1,2,6,1,6,8,1,8,9,8,6,7,-1,-1,-1,-1,2,6,9,2,9,1,6,7,9,0,9,3,7,3,9,-1,7,8,0,7,0,6,6,0,2,-1,-1,-1,-1,-1,-1,-1,7,3,2,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,11,10,6,8,10,8,9,8,6,7,-1,-1,-1,-1,2,0,7,2,7,11,0,9,7,6,7,10,9,10,7,-1,1,8,0,1,7,8,1,10,7,6,7,10,2,3,11,-1,11,2,1,11,1,7,10,6,1,6,7,1,-1,-1,-1,-1,
8,9,6,8,6,7,9,1,6,11,6,3,1,3,6,-1,0,9,1,11,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,0,7,0,6,3,11,0,11,6,0,-1,-1,-1,-1,7,11,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,1,9,8,3,1,11,7,6,-1,-1,-1,-1,-1,-1,-1,10,1,2,6,11,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,8,6,11,7,-1,-1,-1,-1,-1,-1,-1,2,9,0,2,10,9,6,11,7,-1,-1,-1,-1,-1,-1,-1,6,11,7,2,10,3,10,8,3,10,9,8,-1,-1,-1,-1,7,
2,3,6,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,8,7,6,0,6,2,0,-1,-1,-1,-1,-1,-1,-1,2,7,6,2,3,7,0,1,9,-1,-1,-1,-1,-1,-1,-1,1,6,2,1,8,6,1,9,8,8,7,6,-1,-1,-1,-1,10,7,6,10,1,7,1,3,7,-1,-1,-1,-1,-1,-1,-1,10,7,6,1,7,10,1,8,7,1,0,8,-1,-1,-1,-1,0,3,7,0,7,10,0,10,9,6,10,7,-1,-1,-1,-1,7,6,10,7,10,8,8,10,9,-1,-1,-1,-1,-1,-1,-1,6,8,4,11,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,6,11,3,0,6,0,4,6,-1,-1,-1,-1,-1,-1,-1,8,6,11,8,4,6,9,0,1,-1,-1,-1,-1,-1,-1,-1,9,4,6,9,6,3,9,3,1,11,3,6,-1,-1,-1,-1,6,8,4,6,11,8,2,10,1,-1,-1,-1,
-1,-1,-1,-1,1,2,10,3,0,11,0,6,11,0,4,6,-1,-1,-1,-1,4,11,8,4,6,11,0,2,9,2,10,9,-1,-1,-1,-1,10,9,3,10,3,2,9,4,3,11,3,6,4,6,3,-1,8,2,3,8,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,0,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,4,2,4,6,4,3,8,-1,-1,-1,-1,1,9,4,1,4,2,2,4,6,-1,-1,-1,-1,-1,-1,-1,8,1,3,8,6,1,8,4,6,6,10,1,-1,-1,-1,-1,10,1,0,10,0,6,6,0,4,-1,-1,-1,-1,-1,-1,-1,4,6,3,4,3,8,6,10,3,0,3,9,10,9,3,-1,10,9,4,6,10,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,5,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,5,11,7,6,
-1,-1,-1,-1,-1,-1,-1,5,0,1,5,4,0,7,6,11,-1,-1,-1,-1,-1,-1,-1,11,7,6,8,3,4,3,5,4,3,1,5,-1,-1,-1,-1,9,5,4,10,1,2,7,6,11,-1,-1,-1,-1,-1,-1,-1,6,11,7,1,2,10,0,8,3,4,9,5,-1,-1,-1,-1,7,6,11,5,4,10,4,2,10,4,0,2,-1,-1,-1,-1,3,4,8,3,5,4,3,2,5,10,5,2,11,7,6,-1,7,2,3,7,6,2,5,4,9,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,6,0,6,2,6,8,7,-1,-1,-1,-1,3,6,2,3,7,6,1,5,0,5,4,0,-1,-1,-1,-1,6,2,8,6,8,7,2,1,8,4,8,5,1,5,8,-1,9,5,4,10,1,6,1,7,6,1,3,7,-1,-1,-1,-1,1,6,10,1,7,6,1,0,7,8,7,0,9,5,4,-1,4,0,10,4,10,5,0,3,10,6,10,7,3,7,10,
-1,7,6,10,7,10,8,5,4,10,4,8,10,-1,-1,-1,-1,6,9,5,6,11,9,11,8,9,-1,-1,-1,-1,-1,-1,-1,3,6,11,0,6,3,0,5,6,0,9,5,-1,-1,-1,-1,0,11,8,0,5,11,0,1,5,5,6,11,-1,-1,-1,-1,6,11,3,6,3,5,5,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,11,9,11,8,11,5,6,-1,-1,-1,-1,0,11,3,0,6,11,0,9,6,5,6,9,1,2,10,-1,11,8,5,11,5,6,8,0,5,10,5,2,0,2,5,-1,6,11,3,6,3,5,2,10,3,10,5,3,-1,-1,-1,-1,5,8,9,5,2,8,5,6,2,3,8,2,-1,-1,-1,-1,9,5,6,9,6,0,0,6,2,-1,-1,-1,-1,-1,-1,-1,1,5,8,1,8,0,5,6,8,3,8,2,6,2,8,-1,1,5,6,2,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
1,3,6,1,6,10,3,8,6,5,6,9,8,9,6,-1,10,1,0,10,0,6,9,5,0,5,6,0,-1,-1,-1,-1,0,3,8,5,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,7,5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,11,7,5,8,3,0,-1,-1,-1,-1,-1,-1,-1,5,11,7,5,10,11,1,9,0,-1,-1,-1,-1,-1,-1,-1,10,7,5,10,11,7,9,8,1,8,3,1,-1,-1,-1,-1,11,1,2,11,7,1,7,5,1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,7,1,7,5,7,2,11,-1,-1,-1,-1,9,7,5,9,2,7,9,0,2,2,11,7,-1,-1,-1,-1,7,5,2,7,2,11,5,9,2,3,2,8,9,8,2,-1,2,5,10,2,3,5,3,7,5,-1,-1,
-1,-1,-1,-1,-1,8,2,0,8,5,2,8,7,5,10,2,5,-1,-1,-1,-1,9,0,1,5,10,3,5,3,7,3,10,2,-1,-1,-1,-1,9,8,2,9,2,1,8,7,2,10,2,5,7,5,2,-1,1,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,7,0,7,1,1,7,5,-1,-1,-1,-1,-1,-1,-1,9,0,3,9,3,5,5,3,7,-1,-1,-1,-1,-1,-1,-1,9,8,7,5,9,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,8,4,5,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,5,0,4,5,11,0,5,10,11,11,3,0,-1,-1,-1,-1,0,1,9,8,4,10,8,10,11,10,4,5,-1,-1,-1,-1,10,11,4,10,4,5,11,3,4,9,4,1,3,1,4,-1,2,5,1,2,8,5,2,11,8,4,5,8,-1,-1,-1,-1,0,4,11,0,11,3,4,5,11,
2,11,1,5,1,11,-1,0,2,5,0,5,9,2,11,5,4,5,8,11,8,5,-1,9,4,5,2,11,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,5,10,3,5,2,3,4,5,3,8,4,-1,-1,-1,-1,5,10,2,5,2,4,4,2,0,-1,-1,-1,-1,-1,-1,-1,3,10,2,3,5,10,3,8,5,4,5,8,0,1,9,-1,5,10,2,5,2,4,1,9,2,9,4,2,-1,-1,-1,-1,8,4,5,8,5,3,3,5,1,-1,-1,-1,-1,-1,-1,-1,0,4,5,1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,5,8,5,3,9,0,5,0,3,5,-1,-1,-1,-1,9,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,11,7,4,9,11,9,10,11,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,7,9,11,7,9,10,11,-1,-1,-1,-1,1,10,11,1,11,
4,1,4,0,7,4,11,-1,-1,-1,-1,3,1,4,3,4,8,1,10,4,7,4,11,10,11,4,-1,4,11,7,9,11,4,9,2,11,9,1,2,-1,-1,-1,-1,9,7,4,9,11,7,9,1,11,2,11,1,0,8,3,-1,11,7,4,11,4,2,2,4,0,-1,-1,-1,-1,-1,-1,-1,11,7,4,11,4,2,8,3,4,3,2,4,-1,-1,-1,-1,2,9,10,2,7,9,2,3,7,7,4,9,-1,-1,-1,-1,9,10,7,9,7,4,10,2,7,8,7,0,2,0,7,-1,3,7,10,3,10,2,7,4,10,1,10,0,4,0,10,-1,1,10,2,8,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,7,1,3,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,0,8,1,8,7,1,-1,-1,-1,-1,4,0,3,7,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,7,-1,-1,-1,
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,11,9,10,-1,-1,-1,-1,-1,-1,-1,0,1,10,0,10,8,8,10,11,-1,-1,-1,-1,-1,-1,-1,3,1,10,11,3,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,11,1,11,9,9,11,8,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,1,2,9,2,11,9,-1,-1,-1,-1,0,2,11,8,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,2,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,10,8,9,-1,-1,-1,-1,-1,-1,-1,9,10,2,0,9,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,0,1,8,1,10,8,-1,-1,-1,-1,1,10,
2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,8,9,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,9,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]);
THREE.MD2Character=function(){function a(a,b){for(var d=new THREE.UVMapping,h=[],i=0;i<b.length;i++){h[i]=THREE.ImageUtils.loadTexture(a+b[i],d,c);h[i].name=b[i]}return h}function b(a,b){a.computeMorphNormals();var c=THREE.ImageUtils.generateDataTexture(1,1,new THREE.Color(16777215)),c=new THREE.MeshPhongMaterial({color:16755200,specular:1118481,shininess:50,wireframe:true,shading:THREE.SmoothShading,map:c,morphTargets:true,morphNormals:true,perPixel:true,metal:false}),h=new THREE.MeshPhongMaterial({color:16777215,
specular:1118481,shininess:50,wireframe:false,shading:THREE.SmoothShading,map:b,morphTargets:true,morphNormals:true,perPixel:true,metal:false});h.wrapAround=true;var i=new THREE.MorphAnimMesh(a,h);i.rotation.y=-Math.PI/2;i.castShadow=true;i.receiveShadow=true;i.materialTexture=h;i.materialWireframe=c;i.parseAnimations();i.playAnimation(a.firstAnimation,d.animationFPS);i.baseDuration=i.duration;return i}function c(){d.loadCounter=d.loadCounter-1;if(d.loadCounter===0)d.onLoadComplete()}var d=this;this.scale=
1;this.animationFPS=6;this.root=new THREE.Object3D;this.meshWeapon=this.meshBody=null;this.skinsBody=[];this.skinsWeapon=[];this.weapons=[];this.activeAnimation=null;this.onLoadComplete=function(){};this.loadCounter=0;this.loadParts=function(e){this.loadCounter=e.weapons.length*2+e.skins.length+1;for(var f=[],g=0;g<e.weapons.length;g++)f[g]=e.weapons[g][1];this.skinsBody=a(e.baseUrl+"skins/",e.skins);this.skinsWeapon=a(e.baseUrl+"skins/",f);f=new THREE.JSONLoader;f.load(e.baseUrl+e.body,function(a){a.computeBoundingBox();
d.root.position.y=-d.scale*a.boundingBox.min.y;var e=b(a,d.skinsBody[0]);e.scale.set(d.scale,d.scale,d.scale);d.root.add(e);d.meshBody=e;d.activeAnimation=a.firstAnimation;c()});for(var h=function(a,e){return function(f){f=b(f,d.skinsWeapon[a]);f.scale.set(d.scale,d.scale,d.scale);f.visible=false;f.name=e;d.root.add(f);d.weapons[a]=f;d.meshWeapon=f;c()}},g=0;g<e.weapons.length;g++)f.load(e.baseUrl+e.weapons[g][0],h(g,e.weapons[g][0]))};this.setPlaybackRate=function(a){if(this.meshBody)this.meshBody.duration=
this.meshBody.baseDuration/a;if(this.meshWeapon)this.meshWeapon.duration=this.meshWeapon.baseDuration/a};this.setWireframe=function(a){if(a){if(this.meshBody)this.meshBody.material=this.meshBody.materialWireframe;if(this.meshWeapon)this.meshWeapon.material=this.meshWeapon.materialWireframe}else{if(this.meshBody)this.meshBody.material=this.meshBody.materialTexture;if(this.meshWeapon)this.meshWeapon.material=this.meshWeapon.materialTexture}};this.setSkin=function(a){if(this.meshBody&&this.meshBody.material.wireframe===
false)this.meshBody.material.map=this.skinsBody[a]};this.setWeapon=function(a){for(var b=0;b<this.weapons.length;b++)this.weapons[b].visible=false;if(a=this.weapons[a]){a.visible=true;this.meshWeapon=a;a.playAnimation(this.activeAnimation,this.animationFPS);this.meshWeapon.baseDuration=this.meshWeapon.duration;this.meshWeapon.time=this.meshBody.time;this.meshWeapon.duration=this.meshBody.duration}};this.setAnimation=function(a){if(this.meshBody){this.meshBody.playAnimation(a,this.animationFPS);this.meshBody.baseDuration=
this.meshBody.duration}if(this.meshWeapon){this.meshWeapon.playAnimation(a,this.animationFPS);this.meshWeapon.baseDuration=this.meshWeapon.duration;this.meshWeapon.time=this.meshBody.time}this.activeAnimation=a};this.update=function(a){this.meshBody&&this.meshBody.updateAnimation(1E3*a);this.meshWeapon&&this.meshWeapon.updateAnimation(1E3*a)}};
THREE.MD2CharacterComplex=function(){function a(a,b){for(var d=new THREE.UVMapping,h=[],i=0;i<b.length;i++){h[i]=THREE.ImageUtils.loadTexture(a+b[i],d,c);h[i].name=b[i]}return h}function b(a,b){a.computeMorphNormals();var c=THREE.ImageUtils.generateDataTexture(1,1,new THREE.Color(16777215)),c=new THREE.MeshPhongMaterial({color:16755200,specular:1118481,shininess:50,wireframe:true,shading:THREE.SmoothShading,map:c,morphTargets:true,morphNormals:true,perPixel:true,metal:true}),h=new THREE.MeshPhongMaterial({color:16777215,
specular:1118481,shininess:50,wireframe:false,shading:THREE.SmoothShading,map:b,morphTargets:true,morphNormals:true,perPixel:true,metal:true});h.wrapAround=true;var i=new THREE.MorphBlendMesh(a,h);i.rotation.y=-Math.PI/2;i.materialTexture=h;i.materialWireframe=c;i.autoCreateAnimations(d.animationFPS);return i}function c(){d.loadCounter=d.loadCounter-1;if(d.loadCounter===0)d.onLoadComplete()}var d=this;this.scale=1;this.animationFPS=6;this.transitionFrames=15;this.maxSpeed=275;this.maxReverseSpeed=
-275;this.frontDecceleration=this.backAcceleration=this.frontAcceleration=600;this.angularSpeed=2.5;this.root=new THREE.Object3D;this.controls=this.meshWeapon=this.meshBody=null;this.skinsBody=[];this.skinsWeapon=[];this.weapons=[];this.currentSkin=void 0;this.onLoadComplete=function(){};this.meshes=[];this.animations={};this.bodyOrientation=this.speed=this.loadCounter=0;this.walkSpeed=this.maxSpeed;this.crouchSpeed=this.maxSpeed*0.5;this.oldAnimation=this.activeAnimation=null;this.enableShadows=
function(a){for(var b=0;b<this.meshes.length;b++){this.meshes[b].castShadow=a;this.meshes[b].receiveShadow=a}};this.setVisible=function(a){for(var b=0;b<this.meshes.length;b++){this.meshes[b].visible=a;this.meshes[b].visible=a}};this.shareParts=function(a){this.animations=a.animations;this.walkSpeed=a.walkSpeed;this.crouchSpeed=a.crouchSpeed;this.skinsBody=a.skinsBody;this.skinsWeapon=a.skinsWeapon;var c=b(a.meshBody.geometry,this.skinsBody[0]);c.scale.set(this.scale,this.scale,this.scale);this.root.position.y=
a.root.position.y;this.root.add(c);this.meshBody=c;this.meshes.push(c);for(c=0;c<a.weapons.length;c++){var d=b(a.weapons[c].geometry,this.skinsWeapon[c]);d.scale.set(this.scale,this.scale,this.scale);d.visible=false;d.name=a.weapons[c].name;this.root.add(d);this.meshWeapon=this.weapons[c]=d;this.meshes.push(d)}};this.loadParts=function(e){this.animations=e.animations;this.walkSpeed=e.walkSpeed;this.crouchSpeed=e.crouchSpeed;this.loadCounter=e.weapons.length*2+e.skins.length+1;for(var f=[],g=0;g<e.weapons.length;g++)f[g]=
e.weapons[g][1];this.skinsBody=a(e.baseUrl+"skins/",e.skins);this.skinsWeapon=a(e.baseUrl+"skins/",f);f=new THREE.JSONLoader;f.load(e.baseUrl+e.body,function(a){a.computeBoundingBox();d.root.position.y=-d.scale*a.boundingBox.min.y;a=b(a,d.skinsBody[0]);a.scale.set(d.scale,d.scale,d.scale);d.root.add(a);d.meshBody=a;d.meshes.push(a);c()});for(var h=function(a,e){return function(f){f=b(f,d.skinsWeapon[a]);f.scale.set(d.scale,d.scale,d.scale);f.visible=false;f.name=e;d.root.add(f);d.weapons[a]=f;d.meshWeapon=
f;d.meshes.push(f);c()}},g=0;g<e.weapons.length;g++)f.load(e.baseUrl+e.weapons[g][0],h(g,e.weapons[g][0]))};this.setPlaybackRate=function(a){if(this.meshBody)this.meshBody.duration=this.meshBody.baseDuration/a;if(this.meshWeapon)this.meshWeapon.duration=this.meshWeapon.baseDuration/a};this.setWireframe=function(a){if(a){if(this.meshBody)this.meshBody.material=this.meshBody.materialWireframe;if(this.meshWeapon)this.meshWeapon.material=this.meshWeapon.materialWireframe}else{if(this.meshBody)this.meshBody.material=
this.meshBody.materialTexture;if(this.meshWeapon)this.meshWeapon.material=this.meshWeapon.materialTexture}};this.setSkin=function(a){if(this.meshBody&&this.meshBody.material.wireframe===false){this.meshBody.material.map=this.skinsBody[a];this.currentSkin=a}};this.setWeapon=function(a){for(var b=0;b<this.weapons.length;b++)this.weapons[b].visible=false;if(a=this.weapons[a]){a.visible=true;this.meshWeapon=a;if(this.activeAnimation){a.playAnimation(this.activeAnimation);this.meshWeapon.setAnimationTime(this.activeAnimation,
this.meshBody.getAnimationTime(this.activeAnimation))}}};this.setAnimation=function(a){if(a!==this.activeAnimation&&a){if(this.meshBody){this.meshBody.setAnimationWeight(a,0);this.meshBody.playAnimation(a);this.oldAnimation=this.activeAnimation;this.activeAnimation=a;this.blendCounter=this.transitionFrames}if(this.meshWeapon){this.meshWeapon.setAnimationWeight(a,0);this.meshWeapon.playAnimation(a)}}};this.update=function(a){this.controls&&this.updateMovementModel(a);if(this.animations){this.updateBehaviors(a);
this.updateAnimations(a)}};this.updateAnimations=function(a){var b=1;if(this.blendCounter>0){b=(this.transitionFrames-this.blendCounter)/this.transitionFrames;this.blendCounter=this.blendCounter-1}if(this.meshBody){this.meshBody.update(a);this.meshBody.setAnimationWeight(this.activeAnimation,b);this.meshBody.setAnimationWeight(this.oldAnimation,1-b)}if(this.meshWeapon){this.meshWeapon.update(a);this.meshWeapon.setAnimationWeight(this.activeAnimation,b);this.meshWeapon.setAnimationWeight(this.oldAnimation,
1-b)}};this.updateBehaviors=function(){var a=this.controls,b=this.animations,c,d;if(a.crouch){c=b.crouchMove;d=b.crouchIdle}else{c=b.move;d=b.idle}if(a.jump)d=c=b.jump;if(a.attack)if(a.crouch)d=c=b.crouchAttack;else d=c=b.attack;(a.moveForward||a.moveBackward||a.moveLeft||a.moveRight)&&this.activeAnimation!==c&&this.setAnimation(c);Math.abs(this.speed)<0.2*this.maxSpeed&&!a.moveLeft&&!a.moveRight&&!a.moveForward&&!a.moveBackward&&this.activeAnimation!==d&&this.setAnimation(d);if(a.moveForward){if(this.meshBody){this.meshBody.setAnimationDirectionForward(this.activeAnimation);
this.meshBody.setAnimationDirectionForward(this.oldAnimation)}if(this.meshWeapon){this.meshWeapon.setAnimationDirectionForward(this.activeAnimation);this.meshWeapon.setAnimationDirectionForward(this.oldAnimation)}}if(a.moveBackward){if(this.meshBody){this.meshBody.setAnimationDirectionBackward(this.activeAnimation);this.meshBody.setAnimationDirectionBackward(this.oldAnimation)}if(this.meshWeapon){this.meshWeapon.setAnimationDirectionBackward(this.activeAnimation);this.meshWeapon.setAnimationDirectionBackward(this.oldAnimation)}}};
this.updateMovementModel=function(a){var b=this.controls;this.maxSpeed=b.crouch?this.crouchSpeed:this.walkSpeed;this.maxReverseSpeed=-this.maxSpeed;if(b.moveForward)this.speed=THREE.Math.clamp(this.speed+a*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed);if(b.moveBackward)this.speed=THREE.Math.clamp(this.speed-a*this.backAcceleration,this.maxReverseSpeed,this.maxSpeed);if(b.moveLeft){this.bodyOrientation=this.bodyOrientation+a*this.angularSpeed;this.speed=THREE.Math.clamp(this.speed+1*a*
this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed)}if(b.moveRight){this.bodyOrientation=this.bodyOrientation-a*this.angularSpeed;this.speed=THREE.Math.clamp(this.speed+1*a*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed)}if(!b.moveForward&&!b.moveBackward)if(this.speed>0){b=this.speed/this.maxSpeed===1?1:-Math.pow(2,-10*(this.speed/this.maxSpeed))+1;this.speed=THREE.Math.clamp(this.speed-b*a*this.frontDecceleration,0,this.maxSpeed)}else{b=this.speed/this.maxReverseSpeed===1?1:-Math.pow(2,
-10*(this.speed/this.maxReverseSpeed))+1;this.speed=THREE.Math.clamp(this.speed+b*a*this.backAcceleration,this.maxReverseSpeed,0)}a=this.speed*a;this.root.position.x=this.root.position.x+Math.sin(this.bodyOrientation)*a;this.root.position.z=this.root.position.z+Math.cos(this.bodyOrientation)*a;this.root.rotation.y=this.bodyOrientation}};
THREE.ParametricGeometries={klein:function(a,b){var b=b*Math.PI,a=a*2*Math.PI,b=b*2,c,d,e;if(b<Math.PI){c=3*Math.cos(b)*(1+Math.sin(b))+2*(1-Math.cos(b)/2)*Math.cos(b)*Math.cos(a);e=-8*Math.sin(b)-2*(1-Math.cos(b)/2)*Math.sin(b)*Math.cos(a)}else{c=3*Math.cos(b)*(1+Math.sin(b))+2*(1-Math.cos(b)/2)*Math.cos(a+Math.PI);e=-8*Math.sin(b)}d=-2*(1-Math.cos(b)/2)*Math.sin(a);return new THREE.Vector3(c,d,e)},plane:function(a,b){return function(c,d){return new THREE.Vector3(c*a,0,d*b)}},mobius:function(a,b){var a=
a-0.5,c=2*Math.PI*b,d,e;d=Math.cos(c)*(2+a*Math.cos(c/2));e=Math.sin(c)*(2+a*Math.cos(c/2));c=a*Math.sin(c/2);return new THREE.Vector3(d,e,c)},mobius3d:function(a,b){var a=a*Math.PI,b=b*2*Math.PI,a=a*2,c=a/2,d,e;d=0.125*Math.cos(b)*Math.cos(c)-0.65*Math.sin(b)*Math.sin(c);e=0.125*Math.cos(b)*Math.sin(c)+0.65*Math.sin(b)*Math.cos(c);c=(2.25+d)*Math.sin(a);d=(2.25+d)*Math.cos(a);return new THREE.Vector3(d,c,e)}};
THREE.ParametricGeometries.TubeGeometry=function(a,b,c,d,e,f){this.path=a;this.segments=b||64;this.radius=c||1;this.segmentsRadius=d||8;this.closed=e||false;if(f)this.debug=new THREE.Object3D;var g=this,h,i,k,j=this.segments+1,l,m,p,n=new THREE.Vector3,q,e=new THREE.TubeGeometry.FrenetFrames(a,b,e),t=e.tangents,s=e.normals,x=e.binormals;this.tangents=t;this.normals=s;this.binormals=x;THREE.ParametricGeometry.call(this,function(b,d){d=d*2*Math.PI;q=b*(j-1);q=Math.floor(q);p=a.getPointAt(b);h=t[q];
i=s[q];k=x[q];if(g.debug){g.debug.add(new THREE.ArrowHelper(h,p,c,255));g.debug.add(new THREE.ArrowHelper(i,p,c,16711680));g.debug.add(new THREE.ArrowHelper(k,p,c,65280))}l=-g.radius*Math.cos(d);m=g.radius*Math.sin(d);n.copy(p);n.x=n.x+(l*i.x+m*k.x);n.y=n.y+(l*i.y+m*k.y);n.z=n.z+(l*i.z+m*k.z);return n.clone()},b,d)};THREE.ParametricGeometries.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ParametricGeometries.TorusKnotGeometry=function(a,b,c,d,e,f,g){this.radius=a||200;this.tube=b||40;this.segmentsR=c||64;this.segmentsT=d||8;this.p=e||2;this.q=f||3;this.heightScale=g||1;var h=new (THREE.Curve.create(function(){},function(b){var b=b*Math.PI*2,c=(1+0.5*Math.cos(f*b))*Math.cos(e*b),d=(1+0.5*Math.cos(f*b))*Math.sin(e*b),b=0.5*Math.sin(f*b);return(new THREE.Vector3(c,d*g,b)).multiplyScalar(a)}));THREE.ParametricGeometries.TubeGeometry.call(this,h,c,b,d,true,false)};
THREE.ParametricGeometries.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometries.SphereGeometry=function(a,b,c){THREE.ParametricGeometry.call(this,function(b,c){var b=b*Math.PI,c=c*2*Math.PI,f=a*Math.sin(b)*Math.cos(c),g=a*Math.sin(b)*Math.sin(c),h=a*Math.cos(b);return new THREE.Vector3(f,g,h)},b,c,false)};THREE.ParametricGeometries.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ParametricGeometries.PlaneGeometry=function(a,b,c,d){THREE.ParametricGeometry.call(this,function(c,d){return new THREE.Vector3(c*a,0,d*b)},c,d)};THREE.ParametricGeometries.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ShaderGodRays={godrays_generate:{uniforms:{tInput:{type:"t",value:null},fStepSize:{type:"f",value:1},vSunPositionScreenSpace:{type:"v2",value:new THREE.Vector2(0.5,0.5)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"#define TAPS_PER_PASS 6.0\nvarying vec2 vUv;\nuniform sampler2D tInput;\nuniform vec2 vSunPositionScreenSpace;\nuniform float fStepSize;\nvoid main() {\nvec2 delta = vSunPositionScreenSpace - vUv;\nfloat dist = length( delta );\nvec2 stepv = fStepSize * delta / dist;\nfloat iters = dist/fStepSize;\nvec2 uv = vUv.xy;\nfloat col = 0.0;\nif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\ngl_FragColor = vec4( col/TAPS_PER_PASS );\ngl_FragColor.a = 1.0;\n}"},
godrays_combine:{uniforms:{tColors:{type:"t",value:null},tGodRays:{type:"t",value:null},fGodRayIntensity:{type:"f",value:0.69},vSunPositionScreenSpace:{type:"v2",value:new THREE.Vector2(0.5,0.5)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nuniform sampler2D tColors;\nuniform sampler2D tGodRays;\nuniform vec2 vSunPositionScreenSpace;\nuniform float fGodRayIntensity;\nvoid main() {\ngl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\ngl_FragColor.a = 1.0;\n}"},
godrays_fake_sun:{uniforms:{vSunPositionScreenSpace:{type:"v2",value:new THREE.Vector2(0.5,0.5)},fAspect:{type:"f",value:1},sunColor:{type:"c",value:new THREE.Color(16772608)},bgColor:{type:"c",value:new THREE.Color(0)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nuniform vec2 vSunPositionScreenSpace;\nuniform float fAspect;\nuniform vec3 sunColor;\nuniform vec3 bgColor;\nvoid main() {\nvec2 diff = vUv - vSunPositionScreenSpace;\ndiff.x *= fAspect;\nfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\nprop = 0.35 * pow( 1.0 - prop, 3.0 );\ngl_FragColor.xyz = mix( sunColor, bgColor, 1.0 - prop );\ngl_FragColor.w = 1.0;\n}"}};
THREE.ShaderSkin={skinSimple:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableBump:{type:"i",value:0},enableSpecular:{type:"i",value:0},tDiffuse:{type:"t",value:null},tBeckmann:{type:"t",value:null},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uOpacity:{type:"f",value:1},uRoughness:{type:"f",value:0.15},uSpecularBrightness:{type:"f",
value:0.75},bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1},specularMap:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},uWrapRGB:{type:"v3",value:new THREE.Vector3(0.75,0.375,0.1875)}}]),fragmentShader:["#define USE_BUMPMAP\n#extension GL_OES_standard_derivatives : enable\nuniform bool enableBump;\nuniform bool enableSpecular;\nuniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uOpacity;\nuniform float uRoughness;\nuniform float uSpecularBrightness;\nuniform vec3 uWrapRGB;\nuniform sampler2D tDiffuse;\nuniform sampler2D tBeckmann;\nuniform sampler2D specularMap;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,"float fresnelReflectance( vec3 H, vec3 V, float F0 ) {\nfloat base = 1.0 - dot( V, H );\nfloat exponential = pow( base, 5.0 );\nreturn exponential + F0 * ( 1.0 - exponential );\n}\nfloat KS_Skin_Specular( vec3 N,\nvec3 L,\nvec3 V,\nfloat m,\nfloat rho_s\n) {\nfloat result = 0.0;\nfloat ndotl = dot( N, L );\nif( ndotl > 0.0 ) {\nvec3 h = L + V;\nvec3 H = normalize( h );\nfloat ndoth = dot( N, H );\nfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\nfloat F = fresnelReflectance( H, V, 0.028 );\nfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\nresult = ndotl * rho_s * frSpec;\n}\nreturn result;\n}\nvoid main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec4 colDiffuse = texture2D( tDiffuse, vUv );\ncolDiffuse.rgb *= colDiffuse.rgb;\ngl_FragColor = gl_FragColor * colDiffuse;\nvec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\nfloat specularStrength;\nif ( enableSpecular ) {\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n} else {\nspecularStrength = 1.0;\n}\n#ifdef USE_BUMPMAP\nif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\nvec3 specularTotal = vec3( 0.0 );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointTotal = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\nfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\npointTotal    += lDistance * uDiffuseColor * pointLightColor[ i ] * pointDiffuseWeight;\nspecularTotal += lDistance * uSpecularColor * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirTotal = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\nfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\ndirTotal \t   += uDiffuseColor * directionalLightColor[ i ] * dirDiffuseWeight;\nspecularTotal += uSpecularColor * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiTotal = vec3( 0.0 );\nfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\nvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nhemiTotal += uDiffuseColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nfloat hemiSpecularWeight = 0.0;\nhemiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\nvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\nhemiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\nspecularTotal += uSpecularColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\n}\n#endif\nvec3 totalLight = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirTotal;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointTotal;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalLight += hemiTotal;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * uAmbientColor ) + specularTotal;",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["uniform vec4 offsetRepeat;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\nvViewPosition = -mvPosition.xyz;\nvNormal = normalMatrix * normal;\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\ngl_Position = projectionMatrix * mvPosition;",
THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")},skin:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,{passID:{type:"i",value:0},tDiffuse:{type:"t",value:null},tNormal:{type:"t",value:null},tBlur1:{type:"t",value:null},tBlur2:{type:"t",value:null},tBlur3:{type:"t",value:null},tBlur4:{type:"t",value:null},tBeckmann:{type:"t",value:null},uNormalScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},
uAmbientColor:{type:"c",value:new THREE.Color(328965)},uOpacity:{type:"f",value:1},uRoughness:{type:"f",value:0.15},uSpecularBrightness:{type:"f",value:0.75}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uOpacity;\nuniform float uRoughness;\nuniform float uSpecularBrightness;\nuniform int passID;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tBlur1;\nuniform sampler2D tBlur2;\nuniform sampler2D tBlur3;\nuniform sampler2D tBlur4;\nuniform sampler2D tBeckmann;\nuniform float uNormalScale;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.fog_pars_fragment,"float fresnelReflectance( vec3 H, vec3 V, float F0 ) {\nfloat base = 1.0 - dot( V, H );\nfloat exponential = pow( base, 5.0 );\nreturn exponential + F0 * ( 1.0 - exponential );\n}\nfloat KS_Skin_Specular( vec3 N,\nvec3 L,\nvec3 V,\nfloat m,\nfloat rho_s\n) {\nfloat result = 0.0;\nfloat ndotl = dot( N, L );\nif( ndotl > 0.0 ) {\nvec3 h = L + V;\nvec3 H = normalize( h );\nfloat ndoth = dot( N, H );\nfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\nfloat F = fresnelReflectance( H, V, 0.028 );\nfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\nresult = ndotl * rho_s * frSpec;\n}\nreturn result;\n}\nvoid main() {\ngl_FragColor = vec4( 1.0 );\nvec4 mColor = vec4( uDiffuseColor, uOpacity );\nvec4 mSpecular = vec4( uSpecularColor, uOpacity );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nvec4 colDiffuse = texture2D( tDiffuse, vUv );\ncolDiffuse *= colDiffuse;\ngl_FragColor = gl_FragColor * colDiffuse;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec3 specularTotal = vec3( 0.0 );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointTotal = vec4( vec3( 0.0 ), 1.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec3 pointVector = normalize( vPointLight[ i ].xyz );\nfloat pointDistance = vPointLight[ i ].w;\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\npointTotal  += pointDistance * vec4( pointLightColor[ i ], 1.0 ) * ( mColor * pointDiffuseWeight );\nif ( passID == 1 )\nspecularTotal += pointDistance * mSpecular.xyz * pointLightColor[ i ] * KS_Skin_Specular( normal, pointVector, viewPosition, uRoughness, uSpecularBrightness );\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirTotal = vec4( vec3( 0.0 ), 1.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\ndirTotal  += vec4( directionalLightColor[ i ], 1.0 ) * ( mColor * dirDiffuseWeight );\nif ( passID == 1 )\nspecularTotal += mSpecular.xyz * directionalLightColor[ i ] * KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\n}\n#endif\nvec4 totalLight = vec4( vec3( 0.0 ), uOpacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirTotal;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointTotal;\n#endif\ngl_FragColor = gl_FragColor * totalLight;\nif ( passID == 0 ) {\ngl_FragColor = vec4( sqrt( gl_FragColor.xyz ), gl_FragColor.w );\n} else if ( passID == 1 ) {\n#ifdef VERSION1\nvec3 nonblurColor = sqrt( gl_FragColor.xyz );\n#else\nvec3 nonblurColor = gl_FragColor.xyz;\n#endif\nvec3 blur1Color = texture2D( tBlur1, vUv ).xyz;\nvec3 blur2Color = texture2D( tBlur2, vUv ).xyz;\nvec3 blur3Color = texture2D( tBlur3, vUv ).xyz;\nvec3 blur4Color = texture2D( tBlur4, vUv ).xyz;\ngl_FragColor = vec4( vec3( 0.22,  0.437, 0.635 ) * nonblurColor + \nvec3( 0.101, 0.355, 0.365 ) * blur1Color + \nvec3( 0.119, 0.208, 0.0 )   * blur2Color + \nvec3( 0.114, 0.0,   0.0 )   * blur3Color + \nvec3( 0.444, 0.0,   0.0 )   * blur4Color\n, gl_FragColor.w );\ngl_FragColor.xyz *= pow( colDiffuse.xyz, vec3( 0.5 ) );\ngl_FragColor.xyz += ambientLightColor * uAmbientColor * colDiffuse.xyz + specularTotal;\n#ifndef VERSION1\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif\n}",
THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:"attribute vec4 tangent;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvViewPosition = -mvPosition.xyz;\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( vNormal.xyz * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif\n}",
vertexShaderUV:"attribute vec4 tangent;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvViewPosition = -mvPosition.xyz;\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\ngl_Position = vec4( uv.x * 2.0 - 1.0, uv.y * 2.0 - 1.0, 0.0, 1.0 );\n}"},
beckmann:{uniforms:{},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nfloat PHBeckmann( float ndoth, float m ) {\nfloat alpha = acos( ndoth );\nfloat ta = tan( alpha );\nfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\nreturn val;\n}\nfloat KSTextureCompute( vec2 tex ) {\nreturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n}\nvoid main() {\nfloat x = KSTextureCompute( vUv );\ngl_FragColor = vec4( x, x, x, 1.0 );\n}"}};
THREE.ShaderTerrain={terrain:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableDiffuse1:{type:"i",value:0},enableDiffuse2:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},tDiffuse1:{type:"t",value:null},tDiffuse2:{type:"t",value:null},tDetail:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tDisplacement:{type:"t",value:null},uNormalScale:{type:"f",value:1},
uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},uRepeatBase:{type:"v2",value:new THREE.Vector2(1,1)},uRepeatOverlay:{type:"v2",value:new THREE.Vector2(1,1)},uOffset:{type:"v2",value:new THREE.Vector2(0,0)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse1;\nuniform bool enableDiffuse2;\nuniform bool enableSpecular;\nuniform sampler2D tDiffuse1;\nuniform sampler2D tDiffuse2;\nuniform sampler2D tDetail;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tDisplacement;\nuniform float uNormalScale;\nuniform vec2 uRepeatOverlay;\nuniform vec2 uRepeatBase;\nuniform vec2 uOffset;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\nvec2 uvBase = uRepeatBase * vUv;\nvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse1 && enableDiffuse2 ) {\nvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\nvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\n#ifdef GAMMA_INPUT\ncolDiffuse1.xyz *= colDiffuse1.xyz;\ncolDiffuse2.xyz *= colDiffuse2.xyz;\n#endif\ngl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\n } else if( enableDiffuse1 ) {\ngl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\n} else if( enableDiffuse2 ) {\ngl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDistance = lDistance;\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\nvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nhemiDiffuse += uDiffuseColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nfloat hemiSpecularWeight = 0.0;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nhemiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nhemiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\nhemiSpecular += uSpecularColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uRepeatBase;\nuniform sampler2D tNormal;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_vertex,
"void main() {\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\nvec2 uvBase = uv * uRepeatBase;\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec3 displacedPosition = normal * df + position;\nvec4 mPosition = modelMatrix * vec4( displacedPosition, 1.0 );\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\n#else\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\nvViewPosition = -mvPosition.xyz;\nvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\nvNormal = normalMatrix * normalTex;",
THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")}};
THREE.ShaderToon={toon1:{uniforms:{uDirLightPos:{type:"v3",value:new THREE.Vector3},uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uBaseColor:{type:"c",value:new THREE.Color(16777215)}},vertexShader:"varying vec3 vNormal;\nvarying vec3 vRefract;\nvoid main() {\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\nvNormal = normalize( normalMatrix * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvRefract = refract( normalize( I ), nWorld, 1.02 );\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform vec3 uBaseColor;\nuniform vec3 uDirLightPos;\nuniform vec3 uDirLightColor;\nuniform vec3 uAmbientLightColor;\nvarying vec3 vNormal;\nvarying vec3 vRefract;\nvoid main() {\nfloat directionalLightWeighting = max( dot( normalize( vNormal ), uDirLightPos ), 0.0);\nvec3 lightWeighting = uAmbientLightColor + uDirLightColor * directionalLightWeighting;\nfloat intensity = smoothstep( - 0.5, 1.0, pow( length(lightWeighting), 20.0 ) );\nintensity += length(lightWeighting) * 0.2;\nfloat cameraWeighting = dot( normalize( vNormal ), vRefract );\nintensity += pow( 1.0 - length( cameraWeighting ), 6.0 );\nintensity = intensity * 0.2 + 0.3;\nif ( intensity < 0.50 ) {\ngl_FragColor = vec4( 2.0 * intensity * uBaseColor, 1.0 );\n} else {\ngl_FragColor = vec4( 1.0 - 2.0 * ( 1.0 - intensity ) * ( 1.0 - uBaseColor ), 1.0 );\n}\n}"},
toon2:{uniforms:{uDirLightPos:{type:"v3",value:new THREE.Vector3},uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uBaseColor:{type:"c",value:new THREE.Color(15658734)},uLineColor1:{type:"c",value:new THREE.Color(8421504)},uLineColor2:{type:"c",value:new THREE.Color(0)},uLineColor3:{type:"c",value:new THREE.Color(0)},uLineColor4:{type:"c",value:new THREE.Color(0)}},vertexShader:"varying vec3 vNormal;\nvoid main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\n}",
fragmentShader:"uniform vec3 uBaseColor;\nuniform vec3 uLineColor1;\nuniform vec3 uLineColor2;\nuniform vec3 uLineColor3;\nuniform vec3 uLineColor4;\nuniform vec3 uDirLightPos;\nuniform vec3 uDirLightColor;\nuniform vec3 uAmbientLightColor;\nvarying vec3 vNormal;\nvoid main() {\nfloat camera = max( dot( normalize( vNormal ), vec3( 0.0, 0.0, 1.0 ) ), 0.4);\nfloat light = max( dot( normalize( vNormal ), uDirLightPos ), 0.0);\ngl_FragColor = vec4( uBaseColor, 1.0 );\nif ( length(uAmbientLightColor + uDirLightColor * light) < 1.00 ) {\ngl_FragColor *= vec4( uLineColor1, 1.0 );\n}\nif ( length(uAmbientLightColor + uDirLightColor * camera) < 0.50 ) {\ngl_FragColor *= vec4( uLineColor2, 1.0 );\n}\n}"},
hatching:{uniforms:{uDirLightPos:{type:"v3",value:new THREE.Vector3},uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uBaseColor:{type:"c",value:new THREE.Color(16777215)},uLineColor1:{type:"c",value:new THREE.Color(0)},uLineColor2:{type:"c",value:new THREE.Color(0)},uLineColor3:{type:"c",value:new THREE.Color(0)},uLineColor4:{type:"c",value:new THREE.Color(0)}},vertexShader:"varying vec3 vNormal;\nvoid main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\n}",
fragmentShader:"uniform vec3 uBaseColor;\nuniform vec3 uLineColor1;\nuniform vec3 uLineColor2;\nuniform vec3 uLineColor3;\nuniform vec3 uLineColor4;\nuniform vec3 uDirLightPos;\nuniform vec3 uDirLightColor;\nuniform vec3 uAmbientLightColor;\nvarying vec3 vNormal;\nvoid main() {\nfloat directionalLightWeighting = max( dot( normalize(vNormal), uDirLightPos ), 0.0);\nvec3 lightWeighting = uAmbientLightColor + uDirLightColor * directionalLightWeighting;\ngl_FragColor = vec4( uBaseColor, 1.0 );\nif ( length(lightWeighting) < 1.00 ) {\nif ( mod(gl_FragCoord.x + gl_FragCoord.y, 10.0) == 0.0) {\ngl_FragColor = vec4( uLineColor1, 1.0 );\n}\n}\nif ( length(lightWeighting) < 0.75 ) {\nif (mod(gl_FragCoord.x - gl_FragCoord.y, 10.0) == 0.0) {\ngl_FragColor = vec4( uLineColor2, 1.0 );\n}\n}\nif ( length(lightWeighting) < 0.50 ) {\nif (mod(gl_FragCoord.x + gl_FragCoord.y - 5.0, 10.0) == 0.0) {\ngl_FragColor = vec4( uLineColor3, 1.0 );\n}\n}\nif ( length(lightWeighting) < 0.3465 ) {\nif (mod(gl_FragCoord.x - gl_FragCoord.y - 5.0, 10.0) == 0.0) {\ngl_FragColor = vec4( uLineColor4, 1.0 );\n}\n}\n}"},
dotted:{uniforms:{uDirLightPos:{type:"v3",value:new THREE.Vector3},uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uBaseColor:{type:"c",value:new THREE.Color(16777215)},uLineColor1:{type:"c",value:new THREE.Color(0)}},vertexShader:"varying vec3 vNormal;\nvoid main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\n}",fragmentShader:"uniform vec3 uBaseColor;\nuniform vec3 uLineColor1;\nuniform vec3 uLineColor2;\nuniform vec3 uLineColor3;\nuniform vec3 uLineColor4;\nuniform vec3 uDirLightPos;\nuniform vec3 uDirLightColor;\nuniform vec3 uAmbientLightColor;\nvarying vec3 vNormal;\nvoid main() {\nfloat directionalLightWeighting = max( dot( normalize(vNormal), uDirLightPos ), 0.0);\nvec3 lightWeighting = uAmbientLightColor + uDirLightColor * directionalLightWeighting;\ngl_FragColor = vec4( uBaseColor, 1.0 );\nif ( length(lightWeighting) < 1.00 ) {\nif ( ( mod(gl_FragCoord.x, 4.001) + mod(gl_FragCoord.y, 4.0) ) > 6.00 ) {\ngl_FragColor = vec4( uLineColor1, 1.0 );\n}\n}\nif ( length(lightWeighting) < 0.50 ) {\nif ( ( mod(gl_FragCoord.x + 2.0, 4.001) + mod(gl_FragCoord.y + 2.0, 4.0) ) > 6.00 ) {\ngl_FragColor = vec4( uLineColor1, 1.0 );\n}\n}\n}"}};
var SPARKS={Emitter:function(a){this._counter=a?a:new SPARKS.SteadyCounter(10);this._particles=[];this._initializers=[];this._actions=[];this._activities=[];this._handlers=[];this.callbacks={}}};
SPARKS.Emitter.prototype={_TIMESTEP:15,_timer:null,_lastTime:null,_timerStep:10,_velocityVerlet:!0,start:function(){this._lastTime=Date.now();this._timer=setTimeout(this.step,this._timerStep,this);this._isRunning=true},stop:function(){this._isRunning=false;clearTimeout(this._timer)},isRunning:function(){return this._isRunning&1},step:function(a){var b=Date.now(),c=b-a._lastTime;if(this._velocityVerlet){a.update(c/1E3);a._lastTime=b}else{var d=a._TIMESTEP*20;for(c>=d&&(c=d);c>=a._TIMESTEP;){a.update(a._TIMESTEP/
1E3);c=c-a._TIMESTEP}a._lastTime=b-c}a._isRunning&&setTimeout(a.step,a._timerStep,a)},update:function(a){var b,c,d=this._counter.updateEmitter(this,a);for(b=0;b<d;b++)this.createParticle();d=this._activities.length;for(b=0;b<d;b++)this._activities[b].update(this,a);var d=this._actions.length,e,f,g=this._particles.length;for(c=0;c<d;c++){f=this._actions[c];for(b=0;b<g;++b){e=this._particles[b];f.update(this,e,a)}}for(b=g;b--;){e=this._particles[b];if(e.isDead){this._particles.splice(b,1);this.dispatchEvent("dead",
e);SPARKS.VectorPool.release(e.position);SPARKS.VectorPool.release(e.velocity)}else this.dispatchEvent("updated",e)}this.dispatchEvent("loopUpdated")},createParticle:function(){var a=new SPARKS.Particle,b=this._initializers.length,c;for(c=0;c<b;c++)this._initializers[c].initialize(this,a);this._particles.push(a);this.dispatchEvent("created",a);return a},addInitializer:function(a){this._initializers.push(a)},addAction:function(a){this._actions.push(a)},removeInitializer:function(a){a=this._initializers.indexOf(a);
a>-1&&this._initializers.splice(a,1)},removeAction:function(a){a=this._actions.indexOf(a);a>-1&&this._actions.splice(a,1)},addCallback:function(a,b){this.callbacks[a]=b},dispatchEvent:function(a,b){var c=this.callbacks[a];c&&c(b)}};SPARKS.EVENT_PARTICLE_CREATED="created";SPARKS.EVENT_PARTICLE_UPDATED="updated";SPARKS.EVENT_PARTICLE_DEAD="dead";SPARKS.EVENT_LOOP_UPDATED="loopUpdated";SPARKS.SteadyCounter=function(a){this.rate=a;this.leftover=0};
SPARKS.SteadyCounter.prototype.updateEmitter=function(a,b){var c=b*this.rate+this.leftover,d=Math.floor(c);this.leftover=c-d;return d};SPARKS.ShotCounter=function(a){this.particles=a;this.used=false};SPARKS.ShotCounter.prototype.updateEmitter=function(){if(this.used)return 0;this.used=true;return this.particles};
SPARKS.Particle=function(){this.age=this.lifetime=0;this.energy=1;this.isDead=false;this.target=null;this.position=SPARKS.VectorPool.get().set(0,0,0);this.velocity=SPARKS.VectorPool.get().set(0,0,0);this._oldvelocity=SPARKS.VectorPool.get().set(0,0,0)};SPARKS.Action=function(){this._priority=0};SPARKS.Age=function(a){this._easing=a==null?TWEEN.Easing.Linear.EaseNone:a};
SPARKS.Age.prototype.update=function(a,b,c){b.age=b.age+c;if(b.age>=b.lifetime){b.energy=0;b.isDead=true}else{a=this._easing(b.age/b.lifetime);b.energy=-1*a+1}};SPARKS.Move=function(){};SPARKS.Move.prototype.update=function(a,b,c){var a=b.position,d=b.velocity,b=b._oldvelocity;if(this._velocityVerlet){a.x=a.x+(d.x+b.x)*0.5*c;a.y=a.y+(d.y+b.y)*0.5*c;a.z=a.z+(d.z+b.z)*0.5*c}else{a.x=a.x+d.x*c;a.y=a.y+d.y*c;a.z=a.z+d.z*c}};SPARKS.DeathZone=function(a){this.zone=a};
SPARKS.DeathZone.prototype.update=function(a,b){if(this.zone.contains(b.position))b.isDead=true};SPARKS.ActionZone=function(a,b){this.action=a;this.zone=b};SPARKS.ActionZone.prototype.update=function(a,b,c){this.zone.contains(b.position)&&this.action.update(a,b,c)};SPARKS.Accelerate=function(a,b,c){this.acceleration=a instanceof THREE.Vector3?a:new THREE.Vector3(a,b,c)};
SPARKS.Accelerate.prototype.update=function(a,b,c){var a=this.acceleration,d=b.velocity;b._oldvelocity.set(d.x,d.y,d.z);d.x=d.x+a.x*c;d.y=d.y+a.y*c;d.z=d.z+a.z*c};SPARKS.AccelerateFactor=function(a){this.factor=a};SPARKS.AccelerateFactor.prototype.update=function(a,b,c){var a=this.factor,b=b.velocity,d=b.length();d>0&&b.multiplyScalar(a*c/d+1)};SPARKS.AccelerateVelocity=function(a){this.factor=a};
SPARKS.AccelerateVelocity.prototype.update=function(a,b){var c=this.factor,d=b.velocity;d.z=d.z+-d.x*c;d.y=d.y+d.z*c;d.x=d.x+d.y*c};SPARKS.RandomDrift=function(a,b,c){this.drift=a instanceof THREE.Vector3?a:new THREE.Vector3(a,b,c)};SPARKS.RandomDrift.prototype.update=function(a,b,c){a=this.drift;b=b.velocity;b.x=b.x+(Math.random()-0.5)*a.x*c;b.y=b.y+(Math.random()-0.5)*a.y*c;b.z=b.z+(Math.random()-0.5)*a.z*c};SPARKS.Zone=function(){};SPARKS.PointZone=function(a){this.pos=a};
SPARKS.PointZone.prototype.getLocation=function(){return this.pos};SPARKS.PointZone=function(a){this.pos=a};SPARKS.PointZone.prototype.getLocation=function(){return this.pos};SPARKS.LineZone=function(a,b){this.start=a;this.end=b;this._length=b.clone().subSelf(a)};SPARKS.LineZone.prototype.getLocation=function(){var a=this._length.clone();a.multiplyScalar(Math.random());return a.addSelf(this.start)};SPARKS.ParallelogramZone=function(a,b,c){this.corner=a;this.side1=b;this.side2=c};
SPARKS.ParallelogramZone.prototype.getLocation=function(){var a=this.side1.clone().multiplyScalar(Math.random()),b=this.side2.clone().multiplyScalar(Math.random());a.addSelf(b);return a.addSelf(this.corner)};SPARKS.CubeZone=function(a,b,c,d){this.position=a;this.x=b;this.y=c;this.z=d};SPARKS.CubeZone.prototype.getLocation=function(){var a=this.position.clone();a.x=a.x+Math.random()*this.x;a.y=a.y+Math.random()*this.y;a.z=a.z+Math.random()*this.z;return a};
SPARKS.CubeZone.prototype.contains=function(a){var b=this.position.x,c=this.position.y,d=this.position.z,e=this.x,f=this.y,g=this.z;if(e<0){b=b+e;e=Math.abs(e)}if(f<0){c=c+f;f=Math.abs(f)}if(g<0){d=d+g;g=Math.abs(g)}b=a.x-b;c=a.y-c;a=a.z-d;return b>0&&b<e&&c>0&&c<f&&a>0&&a<g?true:false};SPARKS.SphereCapZone=function(a,b,c,d,e,f){this.x=a;this.y=b;this.z=c;this.minr=d;this.maxr=e;this.angle=f};
SPARKS.SphereCapZone.prototype.getLocation=function(){var a=Math.PI*2*SPARKS.Utils.random(),b=SPARKS.Utils.random(),a=SPARKS.VectorPool.get().set(b*Math.cos(a),-1/Math.tan(this.angle*SPARKS.Utils.DEGREE_TO_RADIAN),b*Math.sin(a)),b=this.minr-(this.minr-this.maxr)*Math.random();a.multiplyScalar(b);a.__markedForReleased=true;return a};SPARKS.Lifetime=function(a,b){this._min=a;this._max=b?b:a};SPARKS.Lifetime.prototype.initialize=function(a,b){b.lifetime=this._min+SPARKS.Utils.random()*(this._max-this._min)};
SPARKS.Position=function(a){this.zone=a};SPARKS.Position.prototype.initialize=function(a,b){var c=this.zone.getLocation();b.position.set(c.x,c.y,c.z)};SPARKS.Velocity=function(a){this.zone=a};SPARKS.Velocity.prototype.initialize=function(a,b){var c=this.zone.getLocation();b.velocity.set(c.x,c.y,c.z);if(c.__markedForReleased){SPARKS.VectorPool.release(c);c.__markedForReleased=false}};SPARKS.Target=function(a,b){this.target=a;this.callback=b};
SPARKS.Target.prototype.initialize=function(a,b){b.target=this.callback?this.callback():this.target};SPARKS.VectorPool={__pools:[],get:function(){return this.__pools.length>0?this.__pools.pop():this._addToPool()},release:function(a){this.__pools.push(a)},_addToPool:function(){for(var a=0;a<100;a++)this.__pools.push(new THREE.Vector3);return new THREE.Vector3}};
SPARKS.Utils={random:function(){return Math.random()},DEGREE_TO_RADIAN:Math.PI/180,TWOPI:2*Math.PI,getPerpendiculars:function(a){var b=this.getPerpendicular(a),a=a.cross(b);a.normalize();return[b,a]},getPerpendicular:function(a){return a.x==0?new THREE.Vector3D(1,0,0):(new THREE.Vector3(a.y,-a.x,0)).normalize()}};THREE.UVsUtils={};THREE.UVsUtils.CylinderUVGenerator=function(){this.uRepeat=1;this.lengthCache=this.targetGeometry=null};
THREE.UVsUtils.CylinderUVGenerator.prototype={generateTopUV:THREE.ExtrudeGeometry.WorldUVGenerator.generateTopUV,generateBottomUV:THREE.ExtrudeGeometry.WorldUVGenerator.generateBottomUV,generateSideWallUV:function(a,b,c,d,e,f,g,h,i,k,j,l){this.targetGeometry!==a&&this.prepare(a,c);b=this.lengthCache;a=i/k;i=(i+1)/k;j=b[j];l=b[l];j<l&&(j=j+1);j=j*this.uRepeat;l=l*this.uRepeat;return[new THREE.UV(j,a),new THREE.UV(l,a),new THREE.UV(l,i),new THREE.UV(j,i)]},prepare:function(a,b){for(var c,d,e=[],f=0,
g=b.length,h=0;h<g;h++){c=b[h];d=b[(h+1)%g];var i=c.x-d.x;c=c.y-d.y;i=Math.sqrt(i*i+c*c);e.push(f);f=f+i}this.normalizeArray(e,f);this.targetGeometry=a;this.lengthCache=e},normalizeArray:function(a,b){for(var c=a.length,d=0;d<c;d++)a[d]=a[d]/b;return a}};
THREE.UVsDebug=function(a){var b=a.faces,c=a.faceVertexUvs[0];console.log("debugging geometry",a);a=document.createElement("canvas");a.width=1024;a.height=1024;var d=a.getContext("2d");d.lineWidth=1;d.strokeStyle="rgba(0,0,0,0.8)";d.fillStyle="rgba(255,255,255, 1.0)";d.fillRect(0,0,1024,1024);var e,f,g,h,i,k,j=new THREE.Vector2,l=new THREE.Vector2;g=0;for(h=c.length;g<h;g++){e=c[g];d.beginPath();j.set(0,0);i=0;for(k=e.length;i<k;i++){f=e[i];j.x=j.x+f.u;j.y=j.y+f.v;i==0?d.moveTo(f.u*1024,f.v*1024):
d.lineTo(f.u*1024,f.v*1024)}d.closePath();d.stroke();j.divideScalar(k);d.font="12pt Arial bold";d.fillStyle="rgba(0,0,0,0.8)";d.fillText(g,j.x*1024,j.y*1024);d.font="8pt Arial bold";d.fillStyle="rgba(30,30,0,0.8)";i=0;for(k=e.length;i<k;i++){f=e[i];l.set(f.u,f.v).subSelf(j).divideScalar(4);l.x=f.u-l.x;l.y=f.v-l.y;d.fillText("abcd"[i]+":"+b[g]["abcd"[i]],l.x*1024,l.y*1024)}}return a};
var ImprovedNoise=function(){function a(a){return a*a*a*(a*(a*6-15)+10)}function b(a,b,c){return b+a*(c-b)}function c(a,b,c,d){var a=a&15,e=a<8?b:c,b=a<4?c:a==12||a==14?b:d;return((a&1)==0?e:-e)+((a&2)==0?b:-b)}for(var d=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,
211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,
181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],e=0;e<256;e++)d[256+e]=d[e];return{noise:function(e,g,h){var i=~~e,k=~~g,j=~~h,l=i&255,m=k&255,p=j&255,e=e-i,g=g-k,h=h-j,i=e-1,k=g-1,j=h-1,n=a(e),q=a(g),t=a(h),s=d[l]+m,x=d[s]+p,s=d[s+1]+p,m=d[l+1]+m,l=d[m]+p,p=d[m+1]+p;return b(t,b(q,b(n,c(d[x],e,g,h),c(d[l],i,g,h)),b(n,c(d[s],e,k,h),c(d[p],i,k,h))),b(q,b(n,c(d[x+1],e,g,j),c(d[l+1],i,g,h-1)),b(n,c(d[s+1],e,k,j),c(d[p+
1],i,k,j))))}}},SimplexNoise=function(a){a==void 0&&(a=Math);this.grad3=[[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0],[1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1],[0,1,1],[0,-1,1],[0,1,-1],[0,-1,-1]];this.grad4=[[0,1,1,1],[0,1,1,-1],[0,1,-1,1],[0,1,-1,-1],[0,-1,1,1],[0,-1,1,-1],[0,-1,-1,1],[0,-1,-1,-1],[1,0,1,1],[1,0,1,-1],[1,0,-1,1],[1,0,-1,-1],[-1,0,1,1],[-1,0,1,-1],[-1,0,-1,1],[-1,0,-1,-1],[1,1,0,1],[1,1,0,-1],[1,-1,0,1],[1,-1,0,-1],[-1,1,0,1],[-1,1,0,-1],[-1,-1,0,1],[-1,-1,0,-1],[1,1,1,0],[1,1,-1,0],[1,-1,1,0],
[1,-1,-1,0],[-1,1,1,0],[-1,1,-1,0],[-1,-1,1,0],[-1,-1,-1,0]];this.p=[];for(var b=0;b<256;b++)this.p[b]=Math.floor(a.random()*256);this.perm=[];for(b=0;b<512;b++)this.perm[b]=this.p[b&255];this.simplex=[[0,1,2,3],[0,1,3,2],[0,0,0,0],[0,2,3,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,3,0],[0,2,1,3],[0,0,0,0],[0,3,1,2],[0,3,2,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,3,2,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,0,3],[0,0,0,0],[1,3,0,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],
[2,3,0,1],[2,3,1,0],[1,0,2,3],[1,0,3,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,3,1],[0,0,0,0],[2,1,3,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,1,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,0,1,2],[3,0,2,1],[0,0,0,0],[3,1,2,0],[2,1,0,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,1,0,2],[0,0,0,0],[3,2,0,1],[3,2,1,0]]};SimplexNoise.prototype.dot=function(a,b,c){return a[0]*b+a[1]*c};SimplexNoise.prototype.dot3=function(a,b,c,d){return a[0]*b+a[1]*c+a[2]*d};
SimplexNoise.prototype.dot4=function(a,b,c,d,e){return a[0]*b+a[1]*c+a[2]*d+a[3]*e};
SimplexNoise.prototype.noise=function(a,b){var c,d,e;e=0.5*(Math.sqrt(3)-1);e=(a+b)*e;var f=Math.floor(a+e),g=Math.floor(b+e),h=(3-Math.sqrt(3))/6;e=(f+g)*h;c=a-(f-e);var i=b-(g-e),k,j;if(c>i){k=1;j=0}else{k=0;j=1}d=c-k+h;var l=i-j+h;e=c-1+2*h;var h=i-1+2*h,m=f&255,g=g&255,f=this.perm[m+this.perm[g]]%12;k=this.perm[m+k+this.perm[g+j]]%12;j=this.perm[m+1+this.perm[g+1]]%12;g=0.5-c*c-i*i;if(g<0)c=0;else{g=g*g;c=g*g*this.dot(this.grad3[f],c,i)}i=0.5-d*d-l*l;if(i<0)d=0;else{i=i*i;d=i*i*this.dot(this.grad3[k],
d,l)}l=0.5-e*e-h*h;if(l<0)e=0;else{l=l*l;e=l*l*this.dot(this.grad3[j],e,h)}return 70*(c+d+e)};
SimplexNoise.prototype.noise3d=function(a,b,c){var d,e,f,g=(a+b+c)*(1/3),h=Math.floor(a+g),i=Math.floor(b+g),k=Math.floor(c+g),g=1/6;f=(h+i+k)*g;d=a-(h-f);e=b-(i-f);var j=c-(k-f),l,m,p,n,q,t;if(d>=e)if(e>=j){l=1;p=m=0;q=n=1;t=0}else{if(d>=j){l=1;p=m=0}else{m=l=0;p=1}n=1;q=0;t=1}else if(e<j){m=l=0;p=1;n=0;t=q=1}else if(d<j){l=0;m=1;n=p=0;t=q=1}else{l=0;m=1;p=0;q=n=1;t=0}var s=d-l+g,x=e-m+g,u=j-p+g;f=d-n+2*g;var a=e-q+2*g,r=j-t+2*g,c=d-1+3*g,b=e-1+3*g,g=j-1+3*g,h=h&255,y=i&255,w=k&255,i=this.perm[h+
this.perm[y+this.perm[w]]]%12,k=this.perm[h+l+this.perm[y+m+this.perm[w+p]]]%12;n=this.perm[h+n+this.perm[y+q+this.perm[w+t]]]%12;h=this.perm[h+1+this.perm[y+1+this.perm[w+1]]]%12;q=0.6-d*d-e*e-j*j;if(q<0)d=0;else{q=q*q;d=q*q*this.dot3(this.grad3[i],d,e,j)}e=0.6-s*s-x*x-u*u;if(e<0)e=0;else{e=e*e;e=e*e*this.dot3(this.grad3[k],s,x,u)}s=0.6-f*f-a*a-r*r;if(s<0)f=0;else{s=s*s;f=s*s*this.dot3(this.grad3[n],f,a,r)}a=0.6-c*c-b*b-g*g;if(a<0)c=0;else{a=a*a;c=a*a*this.dot3(this.grad3[h],c,b,g)}return 32*(d+
e+f+c)};
SimplexNoise.prototype.noise4d=function(a,b,c,d){var e=this.grad4,f=this.simplex,g=this.perm,h=(Math.sqrt(5)-1)/4,i=(5-Math.sqrt(5))/20,k,j,h=(a+b+c+d)*h,l=Math.floor(a+h),m=Math.floor(b+h),p=Math.floor(c+h),n=Math.floor(d+h),h=(l+m+p+n)*i,a=a-(l-h);k=b-(m-h);j=c-(p-h);var q=d-(n-h),d=(a>k?32:0)+(a>j?16:0)+(k>j?8:0)+(a>q?4:0)+(k>q?2:0)+(j>q?1:0),t,s,x,u,r,y,w,v,A,F,C,G;t=f[d][0]>=3?1:0;s=f[d][1]>=3?1:0;x=f[d][2]>=3?1:0;u=f[d][3]>=3?1:0;r=f[d][0]>=2?1:0;y=f[d][1]>=2?1:0;w=f[d][2]>=2?1:0;v=f[d][3]>=
2?1:0;A=f[d][0]>=1?1:0;F=f[d][1]>=1?1:0;C=f[d][2]>=1?1:0;G=f[d][3]>=1?1:0;var H=a-t+i,D=k-s+i,J=j-x+i,L=q-u+i,K=a-r+2*i,M=k-y+2*i,N=j-w+2*i,S=q-v+2*i,b=a-A+3*i,h=k-F+3*i,ca=j-C+3*i,ha=q-G+3*i,f=a-1+4*i,d=k-1+4*i,c=j-1+4*i,i=q-1+4*i,l=l&255,m=m&255,E=p&255,n=n&255,p=g[l+g[m+g[E+g[n]]]]%32;t=g[l+t+g[m+s+g[E+x+g[n+u]]]]%32;r=g[l+r+g[m+y+g[E+w+g[n+v]]]]%32;A=g[l+A+g[m+F+g[E+C+g[n+G]]]]%32;g=g[l+1+g[m+1+g[E+1+g[n+1]]]]%32;n=0.6-a*a-k*k-j*j-q*q;if(n<0)a=0;else{n=n*n;a=n*n*this.dot4(e[p],a,k,j,q)}k=0.6-
H*H-D*D-J*J-L*L;if(k<0)k=0;else{k=k*k;k=k*k*this.dot4(e[t],H,D,J,L)}j=0.6-K*K-M*M-N*N-S*S;if(j<0)j=0;else{j=j*j;j=j*j*this.dot4(e[r],K,M,N,S)}K=0.6-b*b-h*h-ca*ca-ha*ha;if(K<0)b=0;else{K=K*K;b=K*K*this.dot4(e[A],b,h,ca,ha)}h=0.6-f*f-d*d-c*c-i*i;if(h<0)e=0;else{h=h*h;e=h*h*this.dot4(e[g],f,d,c,i)}return 27*(a+k+j+b+e)};
var Detector={canvas:!!window.CanvasRenderingContext2D,webgl:function(){try{return!!window.WebGLRenderingContext&&!!document.createElement("canvas").getContext("experimental-webgl")}catch(a){return false}}(),workers:!!window.Worker,fileapi:window.File&&window.FileReader&&window.FileList&&window.Blob,getWebGLErrorMessage:function(){var a=document.createElement("div");a.id="webgl-error-message";a.style.fontFamily="monospace";a.style.fontSize="13px";a.style.fontWeight="normal";a.style.textAlign="center";
a.style.background="#fff";a.style.color="#000";a.style.padding="1.5em";a.style.width="400px";a.style.margin="5em auto 0";if(!this.webgl)a.innerHTML=window.WebGLRenderingContext?'Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br />\nFind out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.':'Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br/>\nFind out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.';
return a},addGetWebGLMessage:function(a){var b,c,a=a||{};b=a.parent!==void 0?a.parent:document.body;a=a.id!==void 0?a.id:"oldie";c=Detector.getWebGLErrorMessage();c.id=a;b.appendChild(c)}};


amdExports = THREE;

}.call(root));
    return amdExports;
}); }(this));
